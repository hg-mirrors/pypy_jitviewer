[1ce3a81d0bf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17e000 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000584889452058488945104889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[1ce3a81e1ef9] jit-backend-dump}
[1ce3a81e8972] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17e085 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000488B1C2508E6150348C7042500E615030000000048C7042508E615030000000048895D38584889452058488945104889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[1ce3a81eb566] jit-backend-dump}
[1ce3a81ee823] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17e12e +0  4889455848894D60488955684889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BBB064120141FFD3488B4558488B4D60488B5568488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[1ce3a81f04ef] jit-backend-dump}
[1ce3a81f2d06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17e191 +0  4889455848894D60488955684889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BBF065120141FFD3488B442408F6400480488B4558488B4D60488B5568488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[1ce3a81f4c86] jit-backend-dump}
[1ce3a81f85ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17e1fd +0  4883EC384889442408F20F114424184889EF48895C24284C89642430488B1C2508E615034C8B242500E6150348C7042500E615030000000048C7042508E615030000000041BBB064120141FFD3F20F10442418488B44240848891C2508E615034C89242500E61503488B5C24284C8B642430488D642438C3
[1ce3a81fa494] jit-backend-dump}
[1ce3a81fe75a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17e
[1ce3a8203464] jit-backend-dump}
[1ce3a82046fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17e
[1ce3a820724d] jit-backend-dump}
[1ce3a82087e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17e
[1ce3a821855b] jit-backend-dump}
[1ce3a821a1ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17e6bd
[1ce3a821d5e3] jit-backend-dump}
[1ce3a821ec8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17e81e
[1ce3a82221b7] jit-backend-dump}
[1ce3a82233d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17e988 +0  488B042508E6150348C7042500E615030000000048C7042508E61503000000004889453848C7451000C2B5014889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[1ce3a8224b24] jit-backend-dump}
[1ce3a822aa70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17e9e
[1ce3a822ee4e] jit-backend-dump}
[1ce3a82310c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17ebd6 +0  4889E74883EC0841BBD00F210141FFD34883C408488B042500E615034885C07501C34883C40849BB88E9179E467F000041FFE3
[1ce3a823258e] jit-backend-dump}
[1ce3a8232c9f] {jit-backend-counts
[1ce3a8233062] jit-backend-counts}
[1ce3a89027aa] {jit-backend
[1ce3a8be3976] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17ece
[1ce3a8bfbea3] jit-backend-dump}
[1ce3a8bfca00] {jit-backend-addr
Loop 0 (<code object f, file 'source.py', line 4> #9 LOAD_FAST) has address 0x7f469e17ed30 to 0x7f469e17ee7b (bootstrap 0x7f469e17ece0)
[1ce3a8bfe00b] jit-backend-addr}
[1ce3a8bfea4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17edd6 +0  A1000000
[1ce3a8bff959] jit-backend-dump}
[1ce3a8c0004d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17ede8 +0  B4000000
[1ce3a8c00a8f] jit-backend-dump}
[1ce3a8c00f2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17edf2 +0  CF000000
[1ce3a8c018fa] jit-backend-dump}
[1ce3a8c01d69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17ee05 +0  E1000000
[1ce3a8c02720] jit-backend-dump}
[1ce3a8c02b74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17ee16 +0  F5000000
[1ce3a8c035c9] jit-backend-dump}
[1ce3a8c03dd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17ee2d +0  28010000
[1ce3a8c04867] jit-backend-dump}
[1ce3a8c04d0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17ee59 +0  21010000
[1ce3a8c05757] jit-backend-dump}
[1ce3a8c05c99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17ee6f +0  55010000
[1ce3a8c06645] jit-backend-dump}
[1ce3a8c0767f] jit-backend}
[1ce3a8c09553] {jit-log-opt-loop
# Loop 0 (<code object f, file 'source.py', line 4> #9 LOAD_FAST) : loop with 54 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p16 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+168: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, descr=TargetToken(139941277979224))
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
+240: guard_value(i7, 1, descr=<Guard0x7f469e2a49f8>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15]
+250: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard0x7f469e2a53d0>) [p1, p0, p11, p2, p3, p4, i5, p6, p13, p15]
+268: guard_value(i5, 0, descr=<Guard0x7f469e2a5358>) [i5, p1, p0, p2, p3, p4, p6, p11, p15]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #12 LOAD_CONST')
+278: guard_value(p4, ConstPtr(ptr20), descr=<Guard0x7f469e2a52e0>) [p1, p0, p4, p2, p3, p6, p11, p15]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #15 COMPARE_OP')
+297: i21 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+301: i23 = int_lt(i21, 1103)
guard_true(i23, descr=<Guard0x7f469e2a5268>) [p1, p0, p11, p2, p3, p6]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #21 LOAD_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #24 LOAD_CONST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #27 INPLACE_ADD')
+314: i25 = int_add(i21, 1)
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #28 STORE_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #31 JUMP_ABSOLUTE')
+319: guard_not_invalidated(descr=<Guard0x7f469e2a51f0>) [p1, p0, p2, p3, p6, i25]
+319: i27 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+327: i29 = int_lt(i27, 0)
guard_false(i29, descr=<Guard0x7f469e2a5178>) [p1, p0, p2, p3, p6, i25]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
+337: label(p0, p1, p2, p3, p6, i25, descr=TargetToken(139941277979312))
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #12 LOAD_CONST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #15 COMPARE_OP')
+368: i30 = int_lt(i25, 1103)
guard_true(i30, descr=<Guard0x7f469e2a5100>) [p1, p0, p2, p3, p6, i25]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #21 LOAD_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #24 LOAD_CONST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #27 INPLACE_ADD')
+381: i31 = int_add(i25, 1)
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #28 STORE_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #31 JUMP_ABSOLUTE')
+385: guard_not_invalidated(descr=<Guard0x7f469e2a5088>) [p1, p0, p2, p3, p6, i31, None]
+385: i33 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+393: i34 = int_lt(i33, 0)
guard_false(i34, descr=<Guard0x7f469e2a5010>) [p1, p0, p2, p3, p6, i31, None]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
+403: jump(p0, p1, p2, p3, p6, i31, descr=TargetToken(139941277979312))
+411: --end of the loop--
[1ce3a8ca19fa] jit-log-opt-loop}
[1ce3a903b35c] {jit-backend
[1ce3a91672ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f
[1ce3a917f7da] jit-backend-dump}
[1ce3a918019d] {jit-backend-addr
Loop 1 (<code object inlined_call, file 'source.py', line 14> #9 LOAD_FAST) has address 0x7f469e17f150 to 0x7f469e17f32b (bootstrap 0x7f469e17f100)
[1ce3a9181915] jit-backend-addr}
[1ce3a918245a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f1f6 +0  31010000
[1ce3a91833b0] jit-backend-dump}
[1ce3a9183a06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f208 +0  44010000
[1ce3a91843e1] jit-backend-dump}
[1ce3a9184844] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f212 +0  5F010000
[1ce3a9185196] jit-backend-dump}
[1ce3a9185608] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f225 +0  71010000
[1ce3a91860ad] jit-backend-dump}
[1ce3a9186507] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f236 +0  85010000
[1ce3a9186ee2] jit-backend-dump}
[1ce3a9187333] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f24d +0  93010000
[1ce3a9187c8e] jit-backend-dump}
[1ce3a91880e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f264 +0  A1010000
[1ce3a9188a61] jit-backend-dump}
[1ce3a918907f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f2b8 +0  97010000
[1ce3a91899d1] jit-backend-dump}
[1ce3a9189e52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f2c6 +0  AE010000
[1ce3a918a7bf] jit-backend-dump}
[1ce3a918acbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f2dd +0  E1010000
[1ce3a918b62c] jit-backend-dump}
[1ce3a918baad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f309 +0  DA010000
[1ce3a918c467] jit-backend-dump}
[1ce3a918c8eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f31f +0  0E020000
[1ce3a918d25e] jit-backend-dump}
[1ce3a918df82] jit-backend}
[1ce3a918f7df] {jit-log-opt-loop
# Loop 1 (<code object inlined_call, file 'source.py', line 14> #9 LOAD_FAST) : loop with 77 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p16 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+168: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, descr=TargetToken(139941277980368))
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
+240: guard_value(i7, 1, descr=<Guard0x7f469e2d11f0>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15]
+250: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard0x7f469e2e6d40>) [p1, p0, p11, p2, p3, p4, i5, p6, p13, p15]
+268: guard_value(i5, 0, descr=<Guard0x7f469e2e6cc8>) [i5, p1, p0, p2, p3, p4, p6, p11, p15]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #12 LOAD_CONST')
+278: guard_value(p4, ConstPtr(ptr20), descr=<Guard0x7f469e2e6c50>) [p1, p0, p4, p2, p3, p6, p11, p15]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #15 COMPARE_OP')
+297: i21 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+301: i23 = int_lt(i21, 1103)
guard_true(i23, descr=<Guard0x7f469e2e6bd8>) [p1, p0, p11, p2, p3, p6]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #21 LOAD_GLOBAL')
+314: p24 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+318: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x7f469e2e6b60>) [p1, p0, p24, p2, p3, p6, p11]
+337: p26 = getfield_gc(p24, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+341: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x7f469e2e6ae8>) [p1, p0, p26, p24, p2, p3, p6, p11]
+360: guard_not_invalidated(descr=<Guard0x7f469e2e6a70>) [p1, p0, p24, p2, p3, p6, p11]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #24 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #27 CALL_FUNCTION')
+360: p29 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+424: p30 = getfield_gc(p29, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+428: p31 = force_token()
+431: p32 = getfield_gc(p29, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+435: guard_isnull(p32, descr=<Guard0x7f469e2e69f8>) [p1, p0, p29, p32, p2, p3, p6, p11, p30, p31]
+444: i33 = getfield_gc(p29, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+448: i34 = int_is_zero(i33)
guard_true(i34, descr=<Guard0x7f469e2e6980>) [p1, p0, p29, p2, p3, p6, p11, p30, p31]
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #0 LOAD_FAST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #3 LOAD_CONST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #6 BINARY_ADD')
+458: i36 = int_add(i21, 1)
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #7 RETURN_VALUE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #30 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #33 JUMP_ABSOLUTE')
+463: guard_not_invalidated(descr=<Guard0x7f469e2e6908>) [p1, p0, p2, p3, p6, i36, None, None]
+463: i39 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+471: i41 = int_lt(i39, 0)
guard_false(i41, descr=<Guard0x7f469e2e6890>) [p1, p0, p2, p3, p6, i36, None, None]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
+481: p42 = same_as(ConstPtr(ptr27))
+481: label(p0, p1, p2, p3, p6, i36, descr=TargetToken(139941277980456))
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #12 LOAD_CONST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #15 COMPARE_OP')
+512: i43 = int_lt(i36, 1103)
guard_true(i43, descr=<Guard0x7f469e2e6818>) [p1, p0, p2, p3, p6, i36]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #21 LOAD_GLOBAL')
+525: guard_not_invalidated(descr=<Guard0x7f469e2e67a0>) [p1, p0, p2, p3, p6, i36]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #24 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #27 CALL_FUNCTION')
+525: p44 = force_token()
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #0 LOAD_FAST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #3 LOAD_CONST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #6 BINARY_ADD')
+525: i45 = int_add(i36, 1)
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #7 RETURN_VALUE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #30 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #33 JUMP_ABSOLUTE')
+529: i46 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+537: i47 = int_lt(i46, 0)
guard_false(i47, descr=<Guard0x7f469e2e6728>) [p1, p0, p2, p3, p6, i45, None]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
+547: jump(p0, p1, p2, p3, p6, i45, descr=TargetToken(139941277980456))
+555: --end of the loop--
[1ce3a91d8ed9] jit-log-opt-loop}
[1ce3a91f3c53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f268 +0  E9C1010000
[1ce3a91f56a9] jit-backend-dump}
[1ce3a91f5c6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f2cf +0  E9C9010000
[1ce3a91f6793] jit-backend-dump}
[1ce3a91f6bf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f30d +0  E9FA010000
[1ce3a91f761e] jit-backend-dump}
[1ce3a97dca13] {jit-backend
[1ce3a98bbdbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f
[1ce3a98d2d3c] jit-backend-dump}
[1ce3a98d3611] {jit-backend-addr
Loop 2 (<code object uninlined_call, file 'source.py', line 21> #19 FOR_ITER) has address 0x7f469e17f6b8 to 0x7f469e17f898 (bootstrap 0x7f469e17f668)
[1ce3a98d4877] jit-backend-addr}
[1ce3a98d517f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f76d +0  27010000
[1ce3a98d60e6] jit-backend-dump}
[1ce3a98d672e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f779 +0  40010000
[1ce3a98d7185] jit-backend-dump}
[1ce3a98d7577] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f786 +0  58010000
[1ce3a98d7f7c] jit-backend-dump}
[1ce3a98d8374] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f79c +0  67010000
[1ce3a98d8c3a] jit-backend-dump}
[1ce3a98d903e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f7b6 +0  72010000
[1ce3a98d98f9] jit-backend-dump}
[1ce3a98d9ceb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f7bf +0  8E010000
[1ce3a98da5d2] jit-backend-dump}
[1ce3a98da9c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f7de +0  94010000
[1ce3a98db297] jit-backend-dump}
[1ce3a98db69b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f7f0 +0  A7010000
[1ce3a98dbf3e] jit-backend-dump}
[1ce3a98dc339] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f803 +0  B9010000
[1ce3a98dcc7c] jit-backend-dump}
[1ce3a98dd103] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f811 +0  D0010000
[1ce3a98dd9cc] jit-backend-dump}
[1ce3a98ddf6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f823 +0  08020000
[1ce3a98de85e] jit-backend-dump}
[1ce3a98dec7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f851 +0  FF010000
[1ce3a98df51c] jit-backend-dump}
[1ce3a98df9cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f873 +0  02020000
[1ce3a98e033f] jit-backend-dump}
[1ce3a98e08d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f885 +0  3A020000
[1ce3a98e1696] jit-backend-dump}
[1ce3a98e22f2] jit-backend}
[1ce3a98e35cc] {jit-log-opt-loop
# Loop 2 (<code object uninlined_call, file 'source.py', line 21> #19 FOR_ITER) : loop with 74 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+183: p20 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+183: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, p19, descr=TargetToken(139941277980984))
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+255: guard_value(i7, 3, descr=<Guard0x7f469e2e6ea8>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17, p19]
+265: guard_class(p15, 26177128, descr=<Guard0x7f469e2f8890>) [p1, p0, p15, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+277: p23 = getfield_gc(p15, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+281: guard_nonnull(p23, descr=<Guard0x7f469e2f87a0>) [p1, p0, p15, p23, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+290: i24 = getfield_gc(p15, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+294: p25 = getfield_gc(p23, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+298: guard_class(p25, 26517736, descr=<Guard0x7f469e2f8728>) [p1, p0, p15, i24, p25, p23, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+312: p27 = getfield_gc(p23, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+316: i28 = getfield_gc_pure(p27, descr=<FieldS tuple3.item0 8>)
+320: i29 = getfield_gc_pure(p27, descr=<FieldS tuple3.item1 16>)
+324: i30 = getfield_gc_pure(p27, descr=<FieldS tuple3.item2 24>)
+328: i32 = int_lt(i24, 0)
guard_false(i32, descr=<Guard0x7f469e2f86b0>) [p1, p0, p15, i24, i30, i29, i28, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+338: i33 = int_ge(i24, i30)
guard_false(i33, descr=<Guard0x7f469e2f8638>) [p1, p0, p15, i24, i29, i28, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+347: i34 = int_mul(i24, i29)
+354: i35 = int_add(i28, i34)
+360: i37 = int_add(i24, 1)
+364: setfield_gc(p15, i37, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+368: guard_value(i5, 0, descr=<Guard0x7f469e2f85c0>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, p19, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
+378: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard0x7f469e2f8548>) [p1, p0, p11, p2, p3, p4, p6, p15, p19, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
+396: guard_value(p4, ConstPtr(ptr40), descr=<Guard0x7f469e2f84d0>) [p1, p0, p4, p2, p3, p6, p11, p15, p19, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+415: i41 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+419: i43 = int_add_ovf(i41, 1)
guard_no_overflow(descr=<Guard0x7f469e2f8458>) [p1, p0, p11, i43, p2, p3, p6, p15, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+429: guard_not_invalidated(descr=<Guard0x7f469e2f83e0>) [p1, p0, p2, p3, p6, p15, i43, i35]
+429: i45 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+437: i47 = int_lt(i45, 0)
guard_false(i47, descr=<Guard0x7f469e2f8368>) [p1, p0, p2, p3, p6, p15, i43, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+447: label(p0, p1, p2, p3, p6, i43, i35, p15, i37, i30, i29, i28, descr=TargetToken(139941277981072))
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+484: i48 = int_ge(i37, i30)
guard_false(i48, descr=<Guard0x7f469e2f82f0>) [p1, p0, p15, i37, i29, i28, p2, p3, p6, i35, i43]
+493: i49 = int_mul(i37, i29)
+500: i50 = int_add(i28, i49)
+506: i51 = int_add(i37, 1)
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+510: setfield_gc(p15, i51, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+514: i52 = int_add_ovf(i43, 1)
guard_no_overflow(descr=<Guard0x7f469e2f8278>) [p1, p0, i52, p2, p3, p6, p15, i50, None, i43]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+527: guard_not_invalidated(descr=<Guard0x7f469e2f8200>) [p1, p0, p2, p3, p6, p15, i52, i50, None, None]
+527: i54 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+535: i55 = int_lt(i54, 0)
guard_false(i55, descr=<Guard0x7f469e2f8188>) [p1, p0, p2, p3, p6, p15, i52, i50, None, None]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+545: jump(p0, p1, p2, p3, p6, i52, i50, p15, i51, i30, i29, i28, descr=TargetToken(139941277981072))
+560: --end of the loop--
[1ce3a992d953] jit-log-opt-loop}
[1ce3a9c745fd] {jit-backend
[1ce3a9d2ff07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fc
[1ce3a9d39fa9] jit-backend-dump}
[1ce3a9d3a740] {jit-backend-addr
Loop 3 (<code object bridge, file 'source.py', line 27> #15 LOAD_FAST) has address 0x7f469e17fc58 to 0x7f469e17fe77 (bootstrap 0x7f469e17fc08)
[1ce3a9d3b798] jit-backend-addr}
[1ce3a9d3c01d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fd02 +0  71010000
[1ce3a9d43248] jit-backend-dump}
[1ce3a9d43a6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fd14 +0  84010000
[1ce3a9d4470f] jit-backend-dump}
[1ce3a9d44b3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fd1e +0  9F010000
[1ce3a9d454c4] jit-backend-dump}
[1ce3a9d458d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fd31 +0  B1010000
[1ce3a9d4623b] jit-backend-dump}
[1ce3a9d46651] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fd42 +0  C5010000
[1ce3a9d46fa0] jit-backend-dump}
[1ce3a9d473bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fd55 +0  D7010000
[1ce3a9d47cb2] jit-backend-dump}
[1ce3a9d480c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fd8d +0  C4010000
[1ce3a9d489ac] jit-backend-dump}
[1ce3a9d48db9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fd9f +0  D7010000
[1ce3a9d49691] jit-backend-dump}
[1ce3a9d49a95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fdad +0  EE010000
[1ce3a9d4a39a] jit-backend-dump}
[1ce3a9d4a9de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fdca +0  1B020000
[1ce3a9d4b2d1] jit-backend-dump}
[1ce3a9d4b70e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fdf6 +0  14020000
[1ce3a9d4bfe0] jit-backend-dump}
[1ce3a9d4c3f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fe09 +0  26020000
[1ce3a9d4cd54] jit-backend-dump}
[1ce3a9d4d16d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fe40 +0  14020000
[1ce3a9d4dad7] jit-backend-dump}
[1ce3a9d4ded5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fe51 +0  28020000
[1ce3a9d4e7a7] jit-backend-dump}
[1ce3a9d4ec37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fe6e +0  55020000
[1ce3a9d4f51e] jit-backend-dump}
[1ce3a9d4fe32] jit-backend}
[1ce3a9d50c1a] {jit-log-opt-loop
# Loop 3 (<code object bridge, file 'source.py', line 27> #15 LOAD_FAST) : loop with 93 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p18 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+172: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, descr=TargetToken(139941277981688))
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+244: guard_value(i7, 2, descr=<Guard0x7f469e2f8980>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17]
+254: guard_nonnull_class(p13, ConstClass(W_IntObject), descr=<Guard0x7f469e2f99e8>) [p1, p0, p13, p2, p3, p4, i5, p6, p11, p15, p17]
+272: guard_value(i5, 0, descr=<Guard0x7f469e2f9970>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p17]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
+282: guard_value(p4, ConstPtr(ptr22), descr=<Guard0x7f469e2f98f8>) [p1, p0, p4, p2, p3, p6, p11, p13, p17]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+301: i23 = getfield_gc_pure(p13, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+305: i25 = int_lt(i23, 10000)
guard_true(i25, descr=<Guard0x7f469e2f9880>) [p1, p0, p13, p2, p3, p6, p11]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+318: i27 = int_eq(i23, -9223372036854775808)
guard_false(i27, descr=<Guard0x7f469e2f9808>) [p1, p0, p13, i23, p2, p3, p6, p11]
+337: i29 = int_mod(i23, 2)
+364: i31 = int_rshift(i29, 63)
+371: i32 = int_and(2, i31)
+380: i33 = int_add(i29, i32)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+383: i34 = int_is_true(i33)
guard_false(i34, descr=<Guard0x7f469e2f9790>) [p1, p0, p2, p3, p6, p11, p13, i33]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
+393: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard0x7f469e2f9718>) [p1, p0, p11, p2, p3, p6, p13, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+411: i37 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+415: i39 = int_add_ovf(i37, 1)
guard_no_overflow(descr=<Guard0x7f469e2f96a0>) [p1, p0, p11, i39, p2, p3, p6, p13, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+425: i41 = int_add(i23, 1)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+436: guard_not_invalidated(descr=<Guard0x7f469e2f9628>) [p1, p0, p2, p3, p6, i39, i41, None]
+436: i43 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+444: i45 = int_lt(i43, 0)
guard_false(i45, descr=<Guard0x7f469e2f95b0>) [p1, p0, p2, p3, p6, i39, i41, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+454: label(p0, p1, p2, p3, p6, i39, i41, descr=TargetToken(139941277981776))
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+485: i46 = int_lt(i41, 10000)
guard_true(i46, descr=<Guard0x7f469e2f9538>) [p1, p0, p2, p3, p6, i39, i41]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+498: i47 = int_eq(i41, -9223372036854775808)
guard_false(i47, descr=<Guard0x7f469e2f94c0>) [p1, p0, i41, p2, p3, p6, i39, None]
+517: i48 = int_mod(i41, 2)
+544: i49 = int_rshift(i48, 63)
+551: i50 = int_and(2, i49)
+559: i51 = int_add(i48, i50)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+562: i52 = int_is_true(i51)
guard_false(i52, descr=<Guard0x7f469e2f9448>) [p1, p0, p2, p3, p6, i51, i39, i41]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+572: i53 = int_add_ovf(i39, 1)
guard_no_overflow(descr=<Guard0x7f469e2f93d0>) [p1, p0, i53, p2, p3, p6, None, i39, i41]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+589: i54 = int_add(i41, 1)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+600: guard_not_invalidated(descr=<Guard0x7f469e2f9358>) [p1, p0, p2, p3, p6, i54, i53, None, None, None]
+600: i55 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+608: i56 = int_lt(i55, 0)
guard_false(i56, descr=<Guard0x7f469e2f92e0>) [p1, p0, p2, p3, p6, i54, i53, None, None, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+618: jump(p0, p1, p2, p3, p6, i53, i54, descr=TargetToken(139941277981776))
+623: --end of the loop--
[1ce3a9da8a39] jit-log-opt-loop}
[1ce3a9e66b10] {jit-backend
[1ce3a9ee434f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e
[1ce3a9eeacb9] jit-backend-dump}
[1ce3a9eeb70b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180134 +0  22000000
[1ce3a9eec253] jit-backend-dump}
[1ce3a9eec730] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18013f +0  22000000
[1ce3a9eed097] jit-backend-dump}
[1ce3a9eed72f] {jit-backend-addr
bridge out of Guard 0x7f469e2f82f0 has address 0x7f469e180130 to 0x7f469e18033d
[1ce3a9eee408] jit-backend-addr}
[1ce3a9eee927] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180199 +0  A0010000
[1ce3a9eef2d2] jit-backend-dump}
[1ce3a9eef71a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1801a2 +0  BC010000
[1ce3a9eeffe7] jit-backend-dump}
[1ce3a9ef05ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17f851 +0  DB080000
[1ce3a9ef0eec] jit-backend-dump}
[1ce3a9ef16fa] jit-backend}
[1ce3a9ef225a] {jit-log-opt-bridge
# bridge out of Guard 0x7f469e2f82f0 with 28 ops
[p0, p1, p2, i3, i4, i5, p6, p7, p8, i9, i10]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #38 POP_BLOCK')
+76: p11 = getfield_gc_pure(p8, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+87: i12 = getfield_gc_pure(p8, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+91: setfield_gc(p2, ConstPtr(ptr13), descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+99: guard_value(i12, 2, descr=<Guard0x7f469e2f9c40>) [p0, p1, i12, p6, p7, p11, i10, i9]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #39 LOAD_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #42 RETURN_VALUE')
+109: guard_isnull(p11, descr=<Guard0x7f46a0ed0098>) [p0, p1, p11, p6, p7, i10, i9]
+118: p15 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+129: p16 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
p18 = new_with_vtable(ConstClass(W_IntObject))
+193: setfield_gc(p1, 1, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_frame_finished_execution 141>)
setfield_gc(p1, p6, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
setfield_gc(p1, p7, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
setfield_gc(p1, ConstPtr(ptr20), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+306: setfield_gc(p1, 0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+314: setfield_gc(p1, ConstPtr(ptr22), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+322: setfield_gc(p1, 2, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+330: setfield_gc(p1, 42, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
setarrayitem_gc(p15, 0, p18, descr=<ArrayP 8>)
p27 = new_with_vtable(ConstClass(W_IntObject))
+381: setfield_gc(p27, i9, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
setarrayitem_gc(p15, 1, p27, descr=<ArrayP 8>)
+424: setarrayitem_gc(p15, 2, ConstPtr(ptr30), descr=<ArrayP 8>)
+432: setarrayitem_gc(p15, 3, ConstPtr(ptr32), descr=<ArrayP 8>)
+440: setarrayitem_gc(p15, 4, ConstPtr(ptr32), descr=<ArrayP 8>)
+448: setfield_gc(p18, i10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+452: finish(p18, descr=<DoneWithThisFrameDescrRef object at 0x1ea4280>)
+525: --end of the loop--
[1ce3a9f131a1] jit-log-opt-bridge}
[1ce3aa3c4c80] {jit-backend
[1ce3aa535471] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180568 +0  48817D50FFFFFF007D2448C7442408FFFFFF0049BB8803189E467F00004C891C2449BB75E2179E467F000041FFD349BB103200A1467F0000498B034C8D780149BB103200A1467F00004D893B4C8BBD38010000498B470849BBC8009F9E467F00004C39D80F85000000004C8B701049BBA84EA49E467F00004D39DE0F850000000049BBC803189E467F00004C895D2041BBA05B840041FFD3F6450401740D49BBFDE1179E467F000041FFD348C74520000000004C8B78504989EE4C8B68604D85ED0F85000000004C8B68404983FD000F85000000004C8B2C2500EFCE014981FDF0EED4010F85000000004C8B2C25807816034983FD000F8C000000004989ED48898570010000488B0425484CB601488DB840010000483B3C25684CB601761B49BB2804189E467F00004C891C2449BBE3E9179E467F000041FFD348893C25484CB60148C700407E0100488DB89000000048C707C800000048C74708050000004C8D673849C70424180C00004D8D54241049C702180C00004D8D4A1049C701E82200004D8D411849C70070400000498D701848C706C800000048C7460800000000488D5E1048C703180600004C8973084C8BB57001000041F6460401740F415649BB2EE1179E467F000041FFD349895E50488B9538010000F6420401740E5249BB2EE1179E467F000041FFD34C896A1849C7442408010000004C8967104C89571849BB60BFECA0467F00004D89580849C74010C01CF1014D89411049C74108010000004C894F204889786848C740780300000049BB80BFECA0467F00004C8958604C89783048C740581300000048897028C780880000001500000049BBC8009F9E467F00004C89580849BB380FA59E467F00004C89587049BB60F5179E467F0000498B3348898578010000488B3C25484CB6014889F84801F7483B3C25684CB601761B49BB3804189E467F00004C891C2449BBE3E9179E467F000041FFD348893C25484CB60148C7000800000049BB58F5179E467F0000498B334889705049BB58F5179E467F00004C895808488BB5780100004889B0380100004C89B04001000048899D8001000049BBA00CEFA0467F00004C895D184889C749BB5804189E467F00004C895D2049BB68F6179E467F000041FFD3F6450401740D49BBFDE1179E467F000041FFD348C7452000000000488178108042EA01743E4889C7488BB57801000049BB6804189E467F00004C895D2041BB908D080141FFD3F6450401740D49BBFDE1179E467F000041FFD348C7452000000000EB13488B957801000048C7421800000000488B405848837D10000F850000000048833C2500E61503000F8500000000488B9570010000488B72604885F60F8500000000488B72404C8BB57801000049C74650000000004883FE000F8500000000488B7250498B5E30490FB6BE8C000000F6420401740E5249BB2EE1179E467F000041FFD348895A504885FF0F8500000000488BBD8001000048C74708000000008138180C00000F8500000000488B7808488B95600100004801FA0F8000000000488BBD680100004883C7010F8000000000488B0425807816034883F8000F8C0000000049BB283200A1467F0000498B034C8D700149BB283200A1467F00004D89334881FF102700000F8D0000000049BB00000000000000804C39DF0F84000000004889F8B9020000004889956001000048898568010000489948F7F94889D048C1FA3FBF020000004821D74801F84883F8000F8500000000488B85600100004883C0010F8000000000488BBD680100004883C701488B1425807816034883FA000F8C000000004889FB49BBCEFD179E467F000041FFE349BB7802EDA0467F0000415349BB9803189E467F0000415349BB00E0179E467F000041FFE349BB5833EFA0467F0000415349BBA803189E467F0000415349BB00E0179E467F000041FFE349BBE032EFA0467F0000415349BBB803189E467F0000415349BB00E0179E467F000041FFE349BB6832EFA0467F0000415349BBD803189E467F0000415349BB00E0179E467F000041FFE349BBF031EFA0467F0000415349BBE803189E467F0000415349BB00E0179E467F000041FFE349BB7831EFA0467F0000415349BBF803189E467F0000415349BB00E0179E467F000041FFE349BB0031EFA0467F0000415349BB0804189E467F0000415349BB00E0179E467F000041FFE349BB8830EFA0467F0000415349BB1804189E467F0000415349BB00E0179E467F000041FFE349BBA00CEFA0467F0000415349BB4804189E467F0000415349BB85E0179E467F000041FFE349BB1030EFA0467F0000415349BB7804189E467F0000415349BB85E0179E467F000041FFE349BB982FEFA0467F0000415349BB8804189E467F0000415349BB00E0179E467F000041FFE349BB202FEFA0467F0000415349BB9804189E467F0000415349BB00E0179E467F000041FFE349BBA82EEFA0467F0000415349BBA804189E467F0000415349BB00E0179E467F000041FFE349BB302EEFA0467F0000415349BBB804189E467F0000415349BB00E0179E467F000041FFE349BBB82DEFA0467F0000415349BBC804189E467F0000415349BB00E0179E467F000041FFE349BB402DEFA0467F0000415349BBD804189E467F0000415349BB00E0179E467F000041FFE349BBC82CEFA0467F0000415349BBE804189E467F0000415349BB00E0179E467F000041FFE349BB502CEFA0467F0000415349BBF804189E467F0000415349BB00E0179E467F000041FFE349BBD82BEFA0467F0000415349BB0805189E467F0000415349BB00E0179E467F000041FFE349BB602BEFA0467F0000415349BB1805189E467F0000415349BB00E0179E467F000041FFE349BBE82AEFA0467F0000415349BB2805189E467F0000415349BB00E0179E467F000041FFE349BB702AEFA0467F0000415349BB3805189E467F0000415349BB00E0179E467F000041FFE349BBF829EFA0467F0000415349BB4805189E467F0000415349BB00E0179E467F000041FFE349BB8029EFA0467F0000415349BB5805189E467F0000415349BB00E0179E467F000041FFE3
[1ce3aa54fb27] jit-backend-dump}
[1ce3aa550a05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18056c +0  26000000
[1ce3aa551990] jit-backend-dump}
[1ce3aa551ea8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180577 +0  26000000
[1ce3aa552915] jit-backend-dump}
[1ce3aa552df8] {jit-backend-addr
bridge out of Guard 0x7f469e2f9448 has address 0x7f469e180568 to 0x7f469e180a92
[1ce3aa553bb9] jit-backend-addr}
[1ce3aa55430f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1805ce +0  C0040000
[1ce3aa554ca2] jit-backend-dump}
[1ce3aa5551e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1805e5 +0  CE040000
[1ce3aa555ad1] jit-backend-dump}
[1ce3aa556013] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18062b +0  D2040000
[1ce3aa5569cd] jit-backend-dump}
[1ce3aa556e1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180639 +0  E9040000
[1ce3aa557771] jit-backend-dump}
[1ce3aa557bf5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18064e +0  1E050000
[1ce3aa5584ca] jit-backend-dump}
[1ce3aa5588f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180660 +0  31050000
[1ce3aa5591c4] jit-backend-dump}
[1ce3aa5595d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180918 +0  9E020000
[1ce3aa559ee5] jit-backend-dump}
[1ce3aa55a2fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180927 +0  B4020000
[1ce3aa55abc7] jit-backend-dump}
[1ce3aa55b012] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18093b +0  C5020000
[1ce3aa55df15] jit-backend-dump}
[1ce3aa55e492] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180958 +0  CD020000
[1ce3aa55ee46] jit-backend-dump}
[1ce3aa55f26e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180989 +0  C1020000
[1ce3aa55fce6] jit-backend-dump}
[1ce3aa560111] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1809a4 +0  CB020000
[1ce3aa5609ce] jit-backend-dump}
[1ce3aa560df3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1809b8 +0  DC020000
[1ce3aa561725] jit-backend-dump}
[1ce3aa561b3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1809c9 +0  F0020000
[1ce3aa5623e9] jit-backend-dump}
[1ce3aa562e4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1809db +0  28030000
[1ce3aa563737] jit-backend-dump}
[1ce3aa563b44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180a06 +0  22030000
[1ce3aa564407] jit-backend-dump}
[1ce3aa564823] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180a19 +0  34030000
[1ce3aa5650c9] jit-backend-dump}
[1ce3aa5654df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180a50 +0  22030000
[1ce3aa565d76] jit-backend-dump}
[1ce3aa5661a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180a61 +0  36030000
[1ce3aa566a58] jit-backend-dump}
[1ce3aa566ed3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180a7e +0  63030000
[1ce3aa5677a2] jit-backend-dump}
[1ce3aa567e34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fe40 +0  24070000
[1ce3aa56872d] jit-backend-dump}
[1ce3aa569310] jit-backend}
[1ce3aa56a308] {jit-log-opt-bridge
# bridge out of Guard 0x7f469e2f9448 with 137 ops
[p0, p1, p2, p3, p4, i5, i6, i7]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #37 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #40 LOAD_GLOBAL')
+76: p8 = getfield_gc(p1, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+87: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x7f46a0ed0278>) [p0, p1, p8, p2, p3, p4, i6, i7]
+106: p10 = getfield_gc(p8, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+110: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x7f46a0ef3358>) [p0, p1, p10, p8, p2, p3, p4, i6, i7]
+129: guard_not_invalidated(descr=<Guard0x7f46a0ef32e0>) [p0, p1, p8, p2, p3, p4, i6, i7]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #43 CALL_FUNCTION')
+129: p13 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+179: p14 = getfield_gc(p13, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+183: p15 = force_token()
+186: p16 = getfield_gc(p13, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+190: guard_isnull(p16, descr=<Guard0x7f46a0ef3268>) [p0, p1, p13, p16, p2, p3, p4, p14, p15, i6, i7]
+199: i17 = getfield_gc(p13, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+203: i18 = int_is_zero(i17)
guard_true(i18, descr=<Guard0x7f46a0ef31f0>) [p0, p1, p13, p2, p3, p4, p14, p15, i6, i7]
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #0 LOAD_CONST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #3 STORE_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #6 SETUP_LOOP')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #9 LOAD_GLOBAL')
+213: guard_not_invalidated(descr=<Guard0x7f46a0ef3178>) [p0, p1, p13, p2, p3, p4, p14, p15, i6, i7]
+213: p20 = getfield_gc(ConstPtr(ptr19), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+221: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x7f46a0ef3100>) [p0, p1, p13, p20, p2, p3, p4, p14, p15, i6, i7]
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #12 LOAD_CONST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #15 CALL_FUNCTION')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #18 GET_ITER')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+234: i23 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+242: i25 = int_lt(i23, 0)
guard_false(i25, descr=<Guard0x7f46a0ef3088>) [p0, p1, p13, p2, p3, p4, p14, p15, i6, i7]
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+252: p26 = force_token()
p28 = new_with_vtable(26266048)
p30 = new_array(5, descr=<ArrayP 8>)
p32 = new_with_vtable(ConstClass(W_IntObject))
p34 = new_with_vtable(ConstClass(W_IntObject))
p36 = new_with_vtable(26177128)
p38 = new_with_vtable(ConstClass(W_ListObject))
p40 = new_array(0, descr=<ArrayP 8>)
p42 = new_with_vtable(26169752)
+427: setfield_gc(p42, p15, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p13, p42, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p1, p26, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+495: setfield_gc(p32, 1, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+504: setarrayitem_gc(p30, 0, p32, descr=<ArrayP 8>)
+508: setarrayitem_gc(p30, 1, p34, descr=<ArrayP 8>)
+512: setfield_gc(p38, ConstPtr(ptr46), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+526: setfield_gc(p38, ConstPtr(ptr47), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+534: setfield_gc(p36, p38, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+538: setfield_gc(p36, 1, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+546: setarrayitem_gc(p30, 2, p36, descr=<ArrayP 8>)
+550: setfield_gc(p28, p30, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+554: setfield_gc(p28, 3, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+562: setfield_gc(p28, ConstPtr(ptr51), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+576: setfield_gc(p28, p14, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+580: setfield_gc(p28, 19, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+588: setfield_gc(p28, p40, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+592: setfield_gc(p28, 21, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_f_lineno 136>)
+602: setfield_gc(p28, ConstPtr(ptr9), descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+616: setfield_gc(p28, ConstPtr(ptr54), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
p55 = call_assembler(p28, p13, descr=<Loop2>)
guard_not_forced(descr=<Guard0x7f46a0ef0ca0>) [p0, p1, p13, p28, p55, p42, p2, p3, p4, i6, i7]
+948: keepalive(p28)
+948: guard_no_exception(descr=<Guard0x7f46a0ef3010>) [p0, p1, p13, p28, p55, p42, p2, p3, p4, i6, i7]
+963: p56 = getfield_gc(p13, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+974: guard_isnull(p56, descr=<Guard0x7f46a0ef2f98>) [p0, p1, p55, p13, p28, p56, p42, p2, p3, p4, i6, i7]
+983: i57 = getfield_gc(p13, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+987: setfield_gc(p28, ConstPtr(ptr58), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+1002: i59 = int_is_true(i57)
guard_false(i59, descr=<Guard0x7f46a0ef2f20>) [p0, p1, p55, p28, p13, p42, p2, p3, p4, i6, i7]
+1012: p60 = getfield_gc(p13, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+1016: p61 = getfield_gc(p28, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+1020: i62 = getfield_gc(p28, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_escaped 140>)
setfield_gc(p13, p61, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+1052: guard_false(i62, descr=<Guard0x7f46a0ef2ea8>) [p0, p1, p55, p60, p28, p13, p42, p2, p3, p4, i6, i7]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #46 INPLACE_ADD')
+1061: setfield_gc(p42, ConstPtr(ptr63), descr=<FieldP JitVirtualRef.virtual_token 8>)
+1076: guard_class(p55, ConstClass(W_IntObject), descr=<Guard0x7f46a0ef2e30>) [p0, p1, p55, p2, p3, p4, i6, i7]
+1088: i65 = getfield_gc_pure(p55, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+1092: i66 = int_add_ovf(i6, i65)
guard_no_overflow(descr=<Guard0x7f46a0ef2db8>) [p0, p1, p55, i66, p2, p3, p4, i6, i7]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #47 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #50 JUMP_FORWARD')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+1108: i68 = int_add_ovf(i7, 1)
guard_no_overflow(descr=<Guard0x7f46a0ef2d40>) [p0, p1, i68, p2, p3, p4, i66, None, i7]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+1125: guard_not_invalidated(descr=<Guard0x7f46a0ef2cc8>) [p0, p1, p2, p3, p4, i68, i66, None, None]
+1125: i71 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+1133: i73 = int_lt(i71, 0)
guard_false(i73, descr=<Guard0x7f46a0ef2c50>) [p0, p1, p2, p3, p4, i68, i66, None, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+1143: label(p1, p0, p2, p3, p4, i66, i68, descr=TargetToken(139941324358104))
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+1173: i75 = int_lt(i68, 10000)
guard_true(i75, descr=<Guard0x7f46a0ef2bd8>) [p0, p1, p2, p3, p4, i66, i68]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+1186: i77 = int_eq(i68, -9223372036854775808)
guard_false(i77, descr=<Guard0x7f46a0ef2b60>) [p0, p1, i68, p2, p3, p4, i66, None]
+1205: i79 = int_mod(i68, 2)
+1232: i81 = int_rshift(i79, 63)
+1239: i82 = int_and(2, i81)
+1247: i83 = int_add(i79, i82)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+1250: i84 = int_is_true(i83)
guard_false(i84, descr=<Guard0x7f46a0ef2ae8>) [p0, p1, p2, p3, p4, i83, i66, i68]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+1260: i86 = int_add_ovf(i66, 1)
guard_no_overflow(descr=<Guard0x7f46a0ef2a70>) [p0, p1, i86, p2, p3, p4, None, i66, i68]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+1277: i88 = int_add(i68, 1)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+1288: guard_not_invalidated(descr=<Guard0x7f46a0ef29f8>) [p0, p1, p2, p3, p4, i86, i88, None, None, None]
+1288: i90 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+1296: i92 = int_lt(i90, 0)
guard_false(i92, descr=<Guard0x7f46a0ef2980>) [p0, p1, p2, p3, p4, i86, i88, None, None, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+1306: jump(p1, p0, p2, p3, p4, i86, i88, descr=TargetToken(139941277981776))
+1322: --end of the loop--
[1ce3aa5e579f] jit-log-opt-bridge}
[1ce3aa7e0c3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fdbc +0  E903020000
[1ce3aa7e555a] jit-backend-dump}
[1ce3aa7e5d06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e17fe60 +0  E93D020000
[1ce3aa7e6960] jit-backend-dump}
[1ce3aa7e6d8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1805e9 +0  E9EE040000
[1ce3aa7e7803] jit-backend-dump}
[1ce3aa7e7e36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18063d +0  E909050000
[1ce3aa7e885b] jit-backend-dump}
[1ce3aa7e8cd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1809cd +0  E910030000
[1ce3aa7e962e] jit-backend-dump}
[1ce3aa7e9a26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180a70 +0  E94B030000
[1ce3aa7ea378] jit-backend-dump}
[1ce3aac76e4f] {jit-backend
[1ce3aad31fe8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e180fb
[1ce3aad4eb07] jit-backend-dump}
[1ce3aad4f6d8] {jit-backend-addr
Loop 4 (<code object inlined_str_stuff, file 'source.py', line 40> #13 FOR_ITER) has address 0x7f469e181000 to 0x7f469e181487 (bootstrap 0x7f469e180fb0)
[1ce3aad50b8d] jit-backend-addr}
[1ce3aad51292] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1810e4 +0  9F030000
[1ce3aad520a4] jit-backend-dump}
[1ce3aad526f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1810f8 +0  B0030000
[1ce3aad53178] jit-backend-dump}
[1ce3aad53597] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181105 +0  C8030000
[1ce3aad53f07] jit-backend-dump}
[1ce3aad54317] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18111b +0  D7030000
[1ce3aad54c16] jit-backend-dump}
[1ce3aad5503e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181135 +0  E2030000
[1ce3aad55901] jit-backend-dump}
[1ce3aad55d1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18113e +0  FE030000
[1ce3aad565ba] jit-backend-dump}
[1ce3aad569ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18115d +0  04040000
[1ce3aad57293] jit-backend-dump}
[1ce3aad576a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181170 +0  16040000
[1ce3aad57f84] jit-backend-dump}
[1ce3aad5838b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181187 +0  24040000
[1ce3aad58c2e] jit-backend-dump}
[1ce3aad59059] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18119f +0  31040000
[1ce3aad59955] jit-backend-dump}
[1ce3aad59f8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1811b4 +0  66040000
[1ce3aad5a898] jit-backend-dump}
[1ce3aad5acd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18121b +0  24040000
[1ce3aad5b5b3] jit-backend-dump}
[1ce3aad5b9e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181233 +0  31040000
[1ce3aad5c2a1] jit-backend-dump}
[1ce3aad5c6b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18129b +0  EE030000
[1ce3aad5d083] jit-backend-dump}
[1ce3aad603b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1812f4 +0  BA030000
[1ce3aad60f25] jit-backend-dump}
[1ce3aad61355] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18131f +0  B4030000
[1ce3aad61c3c] jit-backend-dump}
[1ce3aad620e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1813a7 +0  76030000
[1ce3aad629e3] jit-backend-dump}
[1ce3aad62de7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181408 +0  3A030000
[1ce3aad636a1] jit-backend-dump}
[1ce3aad63ac6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18145f +0  08030000
[1ce3aad643f5] jit-backend-dump}
[1ce3aad6551f] jit-backend}
[1ce3aad66ac2] {jit-log-opt-loop
# Loop 4 (<code object inlined_str_stuff, file 'source.py', line 40> #13 FOR_ITER) : loop with 101 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+183: p21 = getarrayitem_gc(p9, 5, descr=<ArrayP 8>)
+194: p23 = getarrayitem_gc(p9, 6, descr=<ArrayP 8>)
+205: p25 = getarrayitem_gc(p9, 7, descr=<ArrayP 8>)
+216: p26 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+216: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, p19, p21, p23, p25, descr=TargetToken(139941324359072))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+302: guard_value(i7, 5, descr=<Guard0x7f46a0f078f8>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17, p19, p21, p23, p25]
+312: guard_class(p19, 26177128, descr=<Guard0x7f46a0f07178>) [p1, p0, p19, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+332: p29 = getfield_gc(p19, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+336: guard_nonnull(p29, descr=<Guard0x7f46a0f06f98>) [p1, p0, p19, p29, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+345: i30 = getfield_gc(p19, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+349: p31 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+353: guard_class(p31, 26517736, descr=<Guard0x7f46a0f07100>) [p1, p0, p19, i30, p31, p29, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+367: p33 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+371: i34 = getfield_gc_pure(p33, descr=<FieldS tuple3.item0 8>)
+375: i35 = getfield_gc_pure(p33, descr=<FieldS tuple3.item1 16>)
+379: i36 = getfield_gc_pure(p33, descr=<FieldS tuple3.item2 24>)
+383: i38 = int_lt(i30, 0)
guard_false(i38, descr=<Guard0x7f46a0f07880>) [p1, p0, p19, i30, i36, i35, i34, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+393: i39 = int_ge(i30, i36)
guard_false(i39, descr=<Guard0x7f46a0f07808>) [p1, p0, p19, i30, i35, i34, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+402: i40 = int_mul(i30, i35)
+409: i41 = int_add(i34, i40)
+415: i43 = int_add(i30, 1)
+419: setfield_gc(p19, i43, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+423: guard_value(i5, 0, descr=<Guard0x7f46a0f07790>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+433: guard_value(p4, ConstPtr(ptr45), descr=<Guard0x7f46a0f076a0>) [p1, p0, p4, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
+452: p46 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+456: guard_value(p46, ConstPtr(ptr47), descr=<Guard0x7f46a0f075b0>) [p1, p0, p46, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
+475: p48 = getfield_gc(p46, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+480: guard_value(p48, ConstPtr(ptr49), descr=<Guard0x7f46a0f07538>) [p1, p0, p48, p46, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
+499: guard_not_invalidated(descr=<Guard0x7f46a0f07448>) [p1, p0, p46, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
+499: p51 = getfield_gc(ConstPtr(ptr50), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+507: guard_value(p51, ConstPtr(ptr52), descr=<Guard0x7f46a0f07358>) [p1, p0, p51, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+520: p54 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i41, descr=<Callr 8 i EF=3>)
+608: guard_no_exception(descr=<Guard0x7f46a0f072e0>) [p1, p0, p54, p2, p3, p6, p13, p15, p17, p19, p25, i41]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+623: p55 = getfield_gc(p17, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+634: guard_class(p55, 26402504, descr=<Guard0x7f46a0f07010>) [p1, p0, p55, p17, p2, p3, p6, p13, p15, p19, p25, p54, i41]
+647: p57 = getfield_gc(p17, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+651: i58 = getfield_gc(p57, descr=<FieldS list.length 8>)
+655: i60 = int_add(i58, 1)
+659: p61 = getfield_gc(p57, descr=<FieldP list.items 16>)
+659: i62 = arraylen_gc(p61, descr=<ArrayP 8>)
+659: call(ConstClass(_ll_list_resize_ge_trampoline__v1053___simple_call__function_), p57, i60, descr=<Callv 0 ri EF=4>)
+736: guard_no_exception(descr=<Guard0x7f46a0f07268>) [p1, p0, i58, p54, p57, p2, p3, p6, p13, p15, p17, p19, p25, None, i41]
+751: p65 = getfield_gc(p57, descr=<FieldP list.items 16>)
setarrayitem_gc(p65, i58, p54, descr=<ArrayP 8>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+822: i67 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+830: i69 = int_lt(i67, 0)
guard_false(i69, descr=<Guard0x7f46a0f071f0>) [p1, p0, p2, p3, p6, p13, p15, p17, p19, p25, None, i41]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+840: p70 = same_as(ConstPtr(ptr49))
+840: label(p0, p1, p2, p3, p6, i41, p13, p15, p17, p19, p25, i43, i36, i35, i34, p57, descr=TargetToken(139941324358984))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+870: i71 = int_ge(i43, i36)
guard_false(i71, descr=<Guard0x7f46a0f06c50>) [p1, p0, p19, i43, i35, i34, p2, p3, p6, p13, p15, p17, p25, i41]
+883: i72 = int_mul(i43, i35)
+898: i73 = int_add(i34, i72)
+908: i74 = int_add(i43, 1)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+919: setfield_gc(p19, i74, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+930: guard_not_invalidated(descr=<Guard0x7f46a0f06908>) [p1, p0, p2, p3, p6, p13, p15, p17, p19, p25, i73, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+930: p75 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i73, descr=<Callr 8 i EF=3>)
+1004: guard_no_exception(descr=<Guard0x7f46a0ef33d0>) [p1, p0, p75, p2, p3, p6, p13, p15, p17, p19, p25, i73, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+1019: i76 = getfield_gc(p57, descr=<FieldS list.length 8>)
+1030: i77 = int_add(i76, 1)
+1034: p78 = getfield_gc(p57, descr=<FieldP list.items 16>)
+1034: i79 = arraylen_gc(p78, descr=<ArrayP 8>)
+1034: call(ConstClass(_ll_list_resize_ge_trampoline__v1053___simple_call__function_), p57, i77, descr=<Callv 0 ri EF=4>)
+1101: guard_no_exception(descr=<Guard0x7f46a0f079e8>) [p1, p0, i76, p75, p57, p2, p3, p6, p13, p15, p17, p19, p25, i73, None]
+1116: p80 = getfield_gc(p57, descr=<FieldP list.items 16>)
setarrayitem_gc(p80, i76, p75, descr=<ArrayP 8>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+1185: i81 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+1193: i82 = int_lt(i81, 0)
guard_false(i82, descr=<Guard0x7f46a0f07a60>) [p1, p0, p2, p3, p6, p13, p15, p17, p19, p25, i73, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+1203: jump(p0, p1, p2, p3, p6, i73, p13, p15, p17, p19, p25, i74, i36, i35, i34, p57, descr=TargetToken(139941324358984))
+1239: --end of the loop--
[1ce3aade160f] jit-log-opt-loop}
[1ce3ab299257] {jit-backend
[1ce3ab32a8f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1817b
[1ce3ab32f473] jit-backend-dump}
[1ce3ab32fb31] {jit-backend-addr
Loop 5 (re StrLiteralSearch at 11/51 [17, 8, 3, 1, 1, 1, 1, 51, 0, 19, 51, 1]) has address 0x7f469e181800 to 0x7f469e18189b (bootstrap 0x7f469e1817b0)
[1ce3ab330ae0] jit-backend-addr}
[1ce3ab331277] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18183c +0  5B000000
[1ce3ab331f7d] jit-backend-dump}
[1ce3ab3328a3] jit-backend}
[1ce3ab333848] {jit-log-opt-loop
# Loop 5 (re StrLiteralSearch at 11/51 [17, 8, 3, 1, 1, 1, 1, 51, 0, 19, 51, 1]) : entry bridge with 10 ops
[i0, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+110: p2 = getfield_gc_pure(p1, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+121: i3 = strgetitem(p2, i0)
+134: i5 = int_eq(i3, 51)
guard_true(i5, descr=<Guard0x7f46a0f1c2f0>) [i0, p1]
+144: i7 = int_add(i0, 1)
+148: setfield_gc(p1, i7, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+152: setfield_gc(p1, ConstPtr(ptr8), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+160: setfield_gc(p1, i0, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+164: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+235: --end of the loop--
[1ce3ab341165] jit-log-opt-loop}
[1ce3ab52c24e] {jit-backend
[1ce3ab568dd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e
[1ce3ab576f80] jit-backend-dump}
[1ce3ab577b98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181904 +0  1C000000
[1ce3ab5788e2] jit-backend-dump}
[1ce3ab578d57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18190f +0  1C000000
[1ce3ab579662] jit-backend-dump}
[1ce3ab579b66] {jit-backend-addr
bridge out of Guard 0x7f46a0f1c2f0 has address 0x7f469e181900 to 0x7f469e1819c6
[1ce3ab57ab4c] jit-backend-addr}
[1ce3ab57b132] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181959 +0  69000000
[1ce3ab57baa8] jit-backend-dump}
[1ce3ab57bf96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18196d +0  7A000000
[1ce3ab57c86f] jit-backend-dump}
[1ce3ab57cd72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18197b +0  91000000
[1ce3ab57d633] jit-backend-dump}
[1ce3ab57df9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18183c +0  C0000000
[1ce3ab57e966] jit-backend-dump}
[1ce3ab57f2de] jit-backend}
[1ce3ab57fe83] {jit-log-opt-bridge
# bridge out of Guard 0x7f46a0f1c2f0 with 13 ops
[i0, p1]
+76: i3 = int_add(i0, 1)
+80: i4 = getfield_gc_pure(p1, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+84: i5 = int_lt(i3, i4)
guard_true(i5, descr=<Guard0x7f46a0f1c980>) [i3, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+93: p6 = getfield_gc_pure(p1, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+97: i7 = strgetitem(p6, i3)
+103: i9 = int_eq(i7, 51)
guard_false(i9, descr=<Guard0x7f46a0f1cbd8>) [i3, p1]
+113: i11 = int_add(i3, 1)
+118: i12 = int_lt(i11, i4)
guard_false(i12, descr=<Guard0x7f46a0f1cb60>) [i11, p1]
+127: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+198: --end of the loop--
[1ce3ab58ce5c] jit-log-opt-bridge}
[1ce3ab8db05d] {jit-backend
[1ce3ab910a09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181a
[1ce3ab9149b1] jit-backend-dump}
[1ce3ab9151fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181a6c +0  1C000000
[1ce3ab915c34] jit-backend-dump}
[1ce3ab916091] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181a77 +0  1C000000
[1ce3ab9169ba] jit-backend-dump}
[1ce3ab916eb2] {jit-backend-addr
bridge out of Guard 0x7f46a0f1cb60 has address 0x7f469e181a68 to 0x7f469e181b20
[1ce3ab9179d9] jit-backend-addr}
[1ce3ab918208] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181ac4 +0  58000000
[1ce3ab918b10] jit-backend-dump}
[1ce3ab918f70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181ad5 +0  6C000000
[1ce3ab919842] jit-backend-dump}
[1ce3ab919e10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18197b +0  E9000000
[1ce3ab91a744] jit-backend-dump}
[1ce3ab91af29] jit-backend}
[1ce3ab91b95d] {jit-log-opt-bridge
# bridge out of Guard 0x7f46a0f1cb60 with 10 ops
[i0, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+76: p2 = getfield_gc_pure(p1, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+80: i3 = strgetitem(p2, i0)
+86: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard0x7f46a0f1ccc8>) [i0, p1]
+96: i7 = int_add(i0, 1)
+100: i8 = getfield_gc_pure(p1, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+104: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard0x7f46a0f1ce30>) [i7, p1]
+113: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+184: --end of the loop--
[1ce3ab92be89] jit-log-opt-bridge}
[1ce3abcdacf4] {jit-backend
[1ce3abce675d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181b80 +0  48817D50FFFFFF007D2448C7442408FFFFFF0049BB701B189E467F00004C891C2449BB75E2179E467F000041FFD349BBD03200A1467F00004D8B334D8D660149BBD03200A1467F00004D892348C745580000000048C7451000C6FA0148C74520000000004889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[1ce3abce942b] jit-backend-dump}
[1ce3abce9b2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181b84 +0  1C000000
[1ce3abcea520] jit-backend-dump}
[1ce3abcea954] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181b8f +0  1C000000
[1ce3abceb206] jit-backend-dump}
[1ce3abceb64e] {jit-backend-addr
bridge out of Guard 0x7f46a0f1c980 has address 0x7f469e181b80 to 0x7f469e181c13
[1ce3abcec091] jit-backend-addr}
[1ce3abcec6f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181959 +0  23020000
[1ce3abcecfc8] jit-backend-dump}
[1ce3abced80c] jit-backend}
[1ce3abcedfff] {jit-log-opt-bridge
# bridge out of Guard 0x7f46a0f1c980 with 1 ops
[i0, p1]
+76: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+147: --end of the loop--
[1ce3abcf0c59] jit-log-opt-bridge}
[1ce3ac81db85] {jit-backend
[1ce3acb1692f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1821b
[1ce3acb68707] jit-backend-dump}
[1ce3acb693dd] {jit-backend-addr
Loop 6 (<code object inlined_str_stuff, file 'source.py', line 40> #44 FOR_ITER) has address 0x7f469e182208 to 0x7f469e182f72 (bootstrap 0x7f469e1821b8)
[1ce3acb6ad31] jit-backend-addr}
[1ce3acb6b5a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1822ec +0  820C0000
[1ce3acb6c65b] jit-backend-dump}
[1ce3acb6cbbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182300 +0  930C0000
[1ce3acb6d645] jit-backend-dump}
[1ce3acb6daae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18230d +0  AB0C0000
[1ce3acb6e415] jit-backend-dump}
[1ce3acb6e86c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182321 +0  BC0C0000
[1ce3acb6f1a0] jit-backend-dump}
[1ce3acb6f5bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182332 +0  D00C0000
[1ce3acb6ff0e] jit-backend-dump}
[1ce3acb70330] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182344 +0  E30C0000
[1ce3acb70be8] jit-backend-dump}
[1ce3acb7100c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182356 +0  F60C0000
[1ce3acb718ca] jit-backend-dump}
[1ce3acb71ce6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182369 +0  080D0000
[1ce3acb725be] jit-backend-dump}
[1ce3acb729e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182380 +0  160D0000
[1ce3acb732ee] jit-backend-dump}
[1ce3acb73754] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182398 +0  230D0000
[1ce3acb7414f] jit-backend-dump}
[1ce3acb7480b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1823b8 +0  4D0D0000
[1ce3acb750fb] jit-backend-dump}
[1ce3acb7553d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18240c +0  1E0D0000
[1ce3acb75dfb] jit-backend-dump}
[1ce3acb792df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18241a +0  350D0000
[1ce3acb79e69] jit-backend-dump}
[1ce3acb7a33a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182432 +0  670D0000
[1ce3acb7ac36] jit-backend-dump}
[1ce3acb7b070] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18244d +0  710D0000
[1ce3acb7b9fa] jit-backend-dump}
[1ce3acb7be1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1825af +0  340C0000
[1ce3acb7c70f] jit-backend-dump}
[1ce3acb7cb2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1825be +0  4A0C0000
[1ce3acb7d406] jit-backend-dump}
[1ce3acb7d828] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1825d8 +0  550C0000
[1ce3acb7e0e8] jit-backend-dump}
[1ce3acb7e4fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1825fe +0  540C0000
[1ce3acb7ee7d] jit-backend-dump}
[1ce3acb7f296] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18260b +0  6C0C0000
[1ce3acb7fc53] jit-backend-dump}
[1ce3acb80095] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18261f +0  7D0C0000
[1ce3acb8097c] jit-backend-dump}
[1ce3acb80e21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18262d +0  940C0000
[1ce3acb81702] jit-backend-dump}
[1ce3acb81b8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18265c +0  AF0C0000
[1ce3acb8243b] jit-backend-dump}
[1ce3acb82868] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182672 +0  BE0C0000
[1ce3acb83764] jit-backend-dump}
[1ce3acb83b95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182687 +0  CE0C0000
[1ce3acb84453] jit-backend-dump}
[1ce3acb84889] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182695 +0  E50C0000
[1ce3acb85156] jit-backend-dump}
[1ce3acb85571] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1826ac +0  F30C0000
[1ce3acb85e35] jit-backend-dump}
[1ce3acb86333] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1826c3 +0  010D0000
[1ce3acb86bf9] jit-backend-dump}
[1ce3acb87012] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1826cd +0  1C0D0000
[1ce3acb878ea] jit-backend-dump}
[1ce3acb87d50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1826d7 +0  370D0000
[1ce3acb88707] jit-backend-dump}
[1ce3acb88b11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1826ea +0  490D0000
[1ce3acb894e0] jit-backend-dump}
[1ce3acb89902] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1828d0 +0  880B0000
[1ce3acb8a1c6] jit-backend-dump}
[1ce3acb8a5f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1828df +0  9E0B0000
[1ce3acb8aea5] jit-backend-dump}
[1ce3acb8b2b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1828e8 +0  BA0B0000
[1ce3acb8bbd4] jit-backend-dump}
[1ce3acb8c0a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1828fc +0  CB0B0000
[1ce3acb8c960] jit-backend-dump}
[1ce3acb8cd7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18290a +0  E20B0000
[1ce3acb8d6bf] jit-backend-dump}
[1ce3acb8db1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18294b +0  EB0B0000
[1ce3acb8e3e0] jit-backend-dump}
[1ce3acb8e7e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18297e +0  DD0B0000
[1ce3acb8f08a] jit-backend-dump}
[1ce3acb8f49a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182994 +0  EC0B0000
[1ce3acb8fe09] jit-backend-dump}
[1ce3acb90258] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1829a6 +0  FF0B0000
[1ce3acb90b8f] jit-backend-dump}
[1ce3acb90f8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1829b8 +0  120C0000
[1ce3acb918fd] jit-backend-dump}
[1ce3acb91d0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1829de +0  110C0000
[1ce3acb946e2] jit-backend-dump}
[1ce3acb94bdd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1829f5 +0  1F0C0000
[1ce3acb954a6] jit-backend-dump}
[1ce3acb95c35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182a15 +0  490C0000
[1ce3acb964f2] jit-backend-dump}
[1ce3acb96914] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182a22 +0  610C0000
[1ce3acb97269] jit-backend-dump}
[1ce3acb97670] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182a3a +0  6E0C0000
[1ce3acb97f2e] jit-backend-dump}
[1ce3acb9834f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182a55 +0  780C0000
[1ce3acb98bf5] jit-backend-dump}
[1ce3acb99017] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182bbf +0  330B0000
[1ce3acb998f8] jit-backend-dump}
[1ce3acb99d0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182bce +0  490B0000
[1ce3acb9a5d7] jit-backend-dump}
[1ce3acb9aa35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182be8 +0  540B0000
[1ce3acb9b37e] jit-backend-dump}
[1ce3acb9b7b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182c0e +0  530B0000
[1ce3acb9c0e3] jit-backend-dump}
[1ce3acb9c4e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182c1b +0  6B0B0000
[1ce3acb9cd90] jit-backend-dump}
[1ce3acb9d197] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182c2f +0  7C0B0000
[1ce3acb9da7e] jit-backend-dump}
[1ce3acb9de73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182c3d +0  930B0000
[1ce3acb9e719] jit-backend-dump}
[1ce3acb9eb79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182c6a +0  B00B0000
[1ce3acb9f4fe] jit-backend-dump}
[1ce3acb9f925] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182c80 +0  BF0B0000
[1ce3acba01e3] jit-backend-dump}
[1ce3acba05ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182c95 +0  CF0B0000
[1ce3acba0eaa] jit-backend-dump}
[1ce3acba12b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182ca3 +0  E60B0000
[1ce3acba1b60] jit-backend-dump}
[1ce3acba1f6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182cba +0  F40B0000
[1ce3acba288a] jit-backend-dump}
[1ce3acba2cfc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182cd3 +0  000C0000
[1ce3acba3606] jit-backend-dump}
[1ce3acba3a08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182cdd +0  1B0C0000
[1ce3acba42d7] jit-backend-dump}
[1ce3acba46fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182ce7 +0  360C0000
[1ce3acba4fb6] jit-backend-dump}
[1ce3acba53c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182cfa +0  480C0000
[1ce3acba5c84] jit-backend-dump}
[1ce3acba6091] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182ede +0  890A0000
[1ce3acba6951] jit-backend-dump}
[1ce3acba6d52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182eed +0  9F0A0000
[1ce3acba76c5] jit-backend-dump}
[1ce3acba7ad5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182ef6 +0  BB0A0000
[1ce3acba838d] jit-backend-dump}
[1ce3acba87ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182f0a +0  CC0A0000
[1ce3acba907b] jit-backend-dump}
[1ce3acba946a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182f18 +0  E30A0000
[1ce3acba9d2e] jit-backend-dump}
[1ce3acbaa191] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182f58 +0  ED0A0000
[1ce3acbaaa75] jit-backend-dump}
[1ce3acbab5f6] jit-backend}
[1ce3acbace20] {jit-log-opt-loop
# Loop 6 (<code object inlined_str_stuff, file 'source.py', line 40> #44 FOR_ITER) : loop with 336 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+183: p21 = getarrayitem_gc(p9, 5, descr=<ArrayP 8>)
+194: p23 = getarrayitem_gc(p9, 6, descr=<ArrayP 8>)
+205: p25 = getarrayitem_gc(p9, 7, descr=<ArrayP 8>)
+216: p26 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+216: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, p19, p21, p23, p25, descr=TargetToken(139941324360304))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+302: guard_value(i7, 4, descr=<Guard0x7f46a0f1cea8>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17, p19, p21, p23, p25]
+312: guard_class(p17, 26177128, descr=<Guard0x7f469e13a7a0>) [p1, p0, p17, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+332: p29 = getfield_gc(p17, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+336: guard_nonnull(p29, descr=<Guard0x7f469e13a728>) [p1, p0, p17, p29, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+345: i30 = getfield_gc(p17, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+349: p31 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+353: guard_class(p31, 26402504, descr=<Guard0x7f469e13a6b0>) [p1, p0, p17, i30, p31, p29, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+365: p33 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+369: i34 = getfield_gc(p33, descr=<FieldS list.length 8>)
+373: i35 = uint_ge(i30, i34)
guard_false(i35, descr=<Guard0x7f469e13a638>) [p1, p0, p17, i30, i34, p33, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+382: p36 = getfield_gc(p33, descr=<FieldP list.items 16>)
+386: p37 = getarrayitem_gc(p36, i30, descr=<ArrayP 8>)
+391: guard_nonnull(p37, descr=<Guard0x7f469e13a5c0>) [p1, p0, p17, i30, p37, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+400: i39 = int_add(i30, 1)
+404: setfield_gc(p17, i39, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+408: guard_value(i5, 0, descr=<Guard0x7f469e13a548>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, p17, p21, p23, p25, p37]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+418: guard_value(p4, ConstPtr(ptr41), descr=<Guard0x7f469e13a458>) [p1, p0, p4, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
+437: p42 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+441: guard_value(p42, ConstPtr(ptr43), descr=<Guard0x7f469e13a368>) [p1, p0, p42, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
+460: p44 = getfield_gc(p42, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+465: guard_value(p44, ConstPtr(ptr45), descr=<Guard0x7f469e13a2f0>) [p1, p0, p44, p42, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
+484: guard_not_invalidated(descr=<Guard0x7f469e13a200>) [p1, p0, p42, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+484: p47 = getfield_gc(ConstPtr(ptr46), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+497: guard_value(p47, ConstPtr(ptr48), descr=<Guard0x7f469e13a110>) [p1, p0, p47, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+516: p50 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+580: p51 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+584: p52 = force_token()
+587: p53 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+591: guard_isnull(p53, descr=<Guard0x7f469e13a020>) [p1, p0, p50, p53, p2, p3, p6, p11, p13, p17, p51, p52, p37]
+600: i54 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+604: i55 = int_is_zero(i54)
guard_true(i55, descr=<Guard0x7f469e133f88>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, p51, p52, p37]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #0 LOAD_GLOBAL')
+614: guard_not_invalidated(descr=<Guard0x7f469e133f10>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, p51, p52, p37]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #9 CALL_FUNCTION')
+614: p56 = force_token()
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #0 LOAD_GLOBAL')
+617: p58 = getfield_gc(ConstPtr(ptr57), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+625: guard_value(p58, ConstPtr(ptr59), descr=<Guard0x7f469e133e98>) [p1, p0, p50, p58, p2, p3, p6, p11, p13, p17, p56, p51, p52, p37]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #3 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #6 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #9 BINARY_SUBSCR')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #10 CALL_FUNCTION')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #13 BUILD_TUPLE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #16 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #19 BINARY_ADD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #20 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #23 LOAD_GLOBAL')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #26 LOOKUP_METHOD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #29 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #32 CALL_METHOD')
+638: p61 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+651: guard_class(p61, ConstClass(ObjectDictStrategy), descr=<Guard0x7f469e133e20>) [p1, p0, p50, p61, p2, p3, p6, p11, p13, p17, p56, p51, p52, p37]
+665: p63 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+678: p64 = force_token()
p66 = new_with_vtable(26169824)
p68 = new_array(3, descr=<ArrayP 8>)
p70 = new_with_vtable(26169752)
+782: setfield_gc(p70, p56, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p50, p70, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p0, p64, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+850: setarrayitem_gc(p68, 0, ConstPtr(ptr72), descr=<ArrayP 8>)
+858: setarrayitem_gc(p68, 1, ConstPtr(ptr74), descr=<ArrayP 8>)
+872: setarrayitem_gc(p68, 2, ConstPtr(ptr76), descr=<ArrayP 8>)
+886: setfield_gc(p66, p68, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+890: i79 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v1381___simple_call__function_), p63, p66, -119233705492873519, descr=<Calli 8 rri EF=6>)
guard_not_forced(descr=<Guard0x7f46a0ef1720>) [p1, p0, p50, p66, i79, p63, p70, p2, p3, p6, p11, p13, p17, p52, p37, p51]
+1019: guard_no_exception(descr=<Guard0x7f469e133da8>) [p1, p0, p50, p66, i79, p63, p70, p2, p3, p6, p11, p13, p17, p52, p37, p51]
+1034: i81 = int_and(i79, -9223372036854775808)
+1050: i82 = int_is_true(i81)
guard_false(i82, descr=<Guard0x7f469e133d30>) [p1, p0, p50, p66, i79, p63, p70, p2, p3, p6, p11, p13, p17, p52, p37, p51]
+1060: p83 = getfield_gc(p63, descr=<FieldP dicttable.entries 24>)
+1071: p84 = getinteriorfield_gc(p83, i79, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+1080: guard_nonnull_class(p84, 26724304, descr=<Guard0x7f469e133cb8>) [p1, p0, p50, p66, p84, p70, p2, p3, p6, p11, p13, p17, p52, p37, p51]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #35 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #38 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #41 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #44 COMPARE_OP')
+1098: i87 = instance_ptr_eq(ConstPtr(ptr86), p84)
guard_false(i87, descr=<Guard0x7f469e133c40>) [p1, p0, p50, p70, p2, p3, p6, p11, p13, p17, p66, p84, p52, p37, p51]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #50 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #53 RETURN_VALUE')
+1111: p88 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+1122: guard_isnull(p88, descr=<Guard0x7f469e133bc8>) [p1, p0, p50, p84, p88, p70, p2, p3, p6, p11, p13, p17, p66, None, p52, p37, p51]
+1131: i90 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+1135: i91 = int_is_true(i90)
guard_false(i91, descr=<Guard0x7f469e133b50>) [p1, p0, p50, p84, p70, p2, p3, p6, p11, p13, p17, p66, None, p52, p37, p51]
+1145: p92 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #12 LOOKUP_METHOD')
+1145: setfield_gc(p70, ConstPtr(ptr93), descr=<FieldP JitVirtualRef.virtual_token 8>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #18 CALL_METHOD')
+1161: guard_not_invalidated(descr=<Guard0x7f469e133ad8>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, None, p84, p52, p37, p51]
+1161: i94 = strlen(p37)
+1173: i96 = int_gt(9223372036854775807, i94)
guard_true(i96, descr=<Guard0x7f469e133a60>) [p1, p0, p50, p84, p37, p2, p3, p6, p11, p13, p17, None, None, p52, None, p51]
+1192: p97 = getfield_gc_pure(p84, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+1196: i98 = getfield_gc_pure(p84, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+1200: i100 = getarrayitem_gc_pure(p97, 0, descr=<ArrayS 8>)
+1204: i102 = int_eq(i100, 17)
guard_true(i102, descr=<Guard0x7f469e133970>) [p1, p0, p50, p84, p2, p3, p6, p11, p13, p17, i94, i98, p97, None, None, p52, p37, p51]
+1214: i104 = getarrayitem_gc_pure(p97, 2, descr=<ArrayS 8>)
+1218: i106 = int_and(i104, 1)
+1225: i107 = int_is_true(i106)
guard_true(i107, descr=<Guard0x7f469e133880>) [p1, p0, p50, p84, i104, p2, p3, p6, p11, p13, p17, i94, i98, p97, None, None, p52, p37, p51]
+1235: i109 = getarrayitem_gc_pure(p97, 5, descr=<ArrayS 8>)
+1239: i111 = int_gt(i109, 1)
guard_false(i111, descr=<Guard0x7f469e133790>) [p1, p0, p50, p84, p2, p3, p6, p11, p13, p17, i94, i98, p97, None, None, p52, p37, p51]
+1249: i113 = getarrayitem_gc_pure(p97, 1, descr=<ArrayS 8>)
+1253: i115 = int_add(i113, 1)
+1257: i116 = getarrayitem_gc_pure(p97, i115, descr=<ArrayS 8>)
+1262: i118 = int_eq(i116, 19)
guard_true(i118, descr=<Guard0x7f469e1336a0>) [p1, p0, p50, p84, i115, p2, p3, p6, p11, p13, p17, i94, i98, p97, None, None, p52, p37, p51]
+1272: i120 = int_add(i115, 1)
+1276: i121 = getarrayitem_gc_pure(p97, i120, descr=<ArrayS 8>)
+1281: i123 = int_add(i115, 2)
+1285: i125 = int_lt(0, i94)
guard_true(i125, descr=<Guard0x7f469e1335b0>) [p1, p0, p50, p84, i121, i123, p2, p3, p6, p11, p13, p17, i94, i98, p97, None, None, p52, p37, p51]
+1295: guard_value(i123, 11, descr=<Guard0x7f469e1334c0>) [p1, p0, p50, p84, i121, i123, p97, p2, p3, p6, p11, p13, p17, i94, i98, None, None, None, p52, p37, p51]
+1305: guard_value(i121, 51, descr=<Guard0x7f469e1333d0>) [p1, p0, p50, p84, i121, p97, p2, p3, p6, p11, p13, p17, i94, i98, None, None, None, p52, p37, p51]
+1315: guard_value(p97, ConstPtr(ptr128), descr=<Guard0x7f469e1332e0>) [p1, p0, p50, p84, p97, p2, p3, p6, p11, p13, p17, i94, i98, None, None, None, p52, p37, p51]
debug_merge_point(2, 3, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+1334: p129 = force_token()
p131 = new_with_vtable(26271088)
p132 = new_with_vtable(26169752)
+1419: setfield_gc(p132, p52, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p50, p132, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p0, p129, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+1489: setfield_gc(p131, i98, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+1493: setfield_gc(p131, i94, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+1497: setfield_gc(p131, p37, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+1501: setfield_gc(p131, ConstPtr(ptr128), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
i133 = call_assembler(0, p131, descr=<Loop5>)
guard_not_forced(descr=<Guard0x7f46a0ef1620>) [p1, p0, p50, p131, p84, i133, p132, p2, p3, p6, p11, p13, p17, p51, p37]
+1820: guard_no_exception(descr=<Guard0x7f469e133268>) [p1, p0, p50, p131, p84, i133, p132, p2, p3, p6, p11, p13, p17, p51, p37]
+1835: guard_false(i133, descr=<Guard0x7f469e1331f0>) [p1, p0, p50, p131, p84, p132, p2, p3, p6, p11, p13, p17, p51, p37]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #21 RETURN_VALUE')
+1844: p134 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+1855: guard_isnull(p134, descr=<Guard0x7f469e133100>) [p1, p0, p50, p134, p132, p2, p3, p6, p11, p13, p17, p51, p37]
+1864: i135 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+1868: i136 = int_is_true(i135)
guard_false(i136, descr=<Guard0x7f469e133088>) [p1, p0, p50, p132, p2, p3, p6, p11, p13, p17, p51, p37]
+1878: p137 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p50, p51, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+1909: setfield_gc(p132, ConstPtr(ptr93), descr=<FieldP JitVirtualRef.virtual_token 8>)
+1925: guard_not_invalidated(descr=<Guard0x7f469e133010>) [p1, p0, p2, p3, p6, p11, p13, p17, None, p37]
+1925: i139 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+1933: i141 = int_lt(i139, 0)
guard_false(i141, descr=<Guard0x7f469e132f98>) [p1, p0, p2, p3, p6, p11, p13, p17, None, p37]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1943: label(p0, p1, p2, p3, p6, p11, p13, p37, p17, i135, p50, p51, descr=TargetToken(139941324360392))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1974: p142 = getfield_gc(p17, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+1985: guard_nonnull(p142, descr=<Guard0x7f469e132f20>) [p1, p0, p17, p142, p2, p3, p6, p11, p13, p37]
+1994: i143 = getfield_gc(p17, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+1998: p144 = getfield_gc(p142, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+2003: guard_class(p144, 26402504, descr=<Guard0x7f469e132ea8>) [p1, p0, p17, i143, p144, p142, p2, p3, p6, p11, p13, p37]
+2016: p145 = getfield_gc(p142, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+2021: i146 = getfield_gc(p145, descr=<FieldS list.length 8>)
+2025: i147 = uint_ge(i143, i146)
guard_false(i147, descr=<Guard0x7f469e132e30>) [p1, p0, p17, i143, i146, p145, p2, p3, p6, p11, p13, p37]
+2034: p148 = getfield_gc(p145, descr=<FieldP list.items 16>)
+2038: p149 = getarrayitem_gc(p148, i143, descr=<ArrayP 8>)
+2043: guard_nonnull(p149, descr=<Guard0x7f469e132db8>) [p1, p0, p17, i143, p149, p2, p3, p6, p11, p13, p37]
+2052: i150 = int_add(i143, 1)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+2056: p151 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+2067: setfield_gc(p17, i150, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+2071: guard_value(p151, ConstPtr(ptr43), descr=<Guard0x7f469e132d40>) [p1, p0, p151, p2, p3, p6, p11, p13, p17, p149, None]
+2090: p152 = getfield_gc(p151, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+2094: guard_value(p152, ConstPtr(ptr45), descr=<Guard0x7f469e132cc8>) [p1, p0, p152, p151, p2, p3, p6, p11, p13, p17, p149, None]
+2113: guard_not_invalidated(descr=<Guard0x7f469e132c50>) [p1, p0, p151, p2, p3, p6, p11, p13, p17, p149, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+2113: p153 = getfield_gc(ConstPtr(ptr46), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+2126: guard_value(p153, ConstPtr(ptr48), descr=<Guard0x7f469e132bd8>) [p1, p0, p153, p2, p3, p6, p11, p13, p17, p149, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+2145: p154 = force_token()
+2148: i155 = int_is_zero(i135)
guard_true(i155, descr=<Guard0x7f469e132ae8>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, p51, p154, p149, None]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #0 LOAD_GLOBAL')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #9 CALL_FUNCTION')
+2158: p156 = force_token()
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #0 LOAD_GLOBAL')
+2161: p157 = getfield_gc(ConstPtr(ptr57), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+2169: guard_value(p157, ConstPtr(ptr59), descr=<Guard0x7f469e132a70>) [p1, p0, p50, p157, p2, p3, p6, p11, p13, p17, p156, p51, p154, p149, None]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #3 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #6 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #9 BINARY_SUBSCR')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #10 CALL_FUNCTION')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #13 BUILD_TUPLE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #16 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #19 BINARY_ADD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #20 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #23 LOAD_GLOBAL')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #26 LOOKUP_METHOD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #29 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #32 CALL_METHOD')
+2182: p158 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+2195: guard_class(p158, ConstClass(ObjectDictStrategy), descr=<Guard0x7f469e1329f8>) [p1, p0, p50, p158, p2, p3, p6, p11, p13, p17, p156, p51, p154, p149, None]
+2209: p159 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+2222: p160 = force_token()
p161 = new_with_vtable(26169824)
p162 = new_array(3, descr=<ArrayP 8>)
p163 = new_with_vtable(26169752)
+2327: setfield_gc(p163, p156, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p50, p163, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p0, p160, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2395: setarrayitem_gc(p162, 0, ConstPtr(ptr72), descr=<ArrayP 8>)
+2403: setarrayitem_gc(p162, 1, ConstPtr(ptr74), descr=<ArrayP 8>)
+2417: setarrayitem_gc(p162, 2, ConstPtr(ptr167), descr=<ArrayP 8>)
+2431: setfield_gc(p161, p162, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+2435: i169 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v1381___simple_call__function_), p159, p161, -119233705492873519, descr=<Calli 8 rri EF=6>)
guard_not_forced(descr=<Guard0x7f46a0ef1520>) [p1, p0, p50, p161, i169, p159, p163, p2, p3, p6, p11, p13, p17, p51, p149, p154]
+2571: guard_no_exception(descr=<Guard0x7f469e132980>) [p1, p0, p50, p161, i169, p159, p163, p2, p3, p6, p11, p13, p17, p51, p149, p154]
+2586: i170 = int_and(i169, -9223372036854775808)
+2602: i171 = int_is_true(i170)
guard_false(i171, descr=<Guard0x7f469e132908>) [p1, p0, p50, p161, i169, p159, p163, p2, p3, p6, p11, p13, p17, p51, p149, p154]
+2612: p172 = getfield_gc(p159, descr=<FieldP dicttable.entries 24>)
+2623: p173 = getinteriorfield_gc(p172, i169, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+2632: guard_nonnull_class(p173, 26724304, descr=<Guard0x7f469e132890>) [p1, p0, p50, p161, p173, p163, p2, p3, p6, p11, p13, p17, p51, p149, p154]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #35 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #38 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #41 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #44 COMPARE_OP')
+2650: i174 = instance_ptr_eq(ConstPtr(ptr86), p173)
guard_false(i174, descr=<Guard0x7f469e132818>) [p1, p0, p50, p163, p2, p3, p6, p11, p13, p17, p173, p161, p51, p149, p154]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #50 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #53 RETURN_VALUE')
+2663: p175 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+2674: guard_isnull(p175, descr=<Guard0x7f469e1327a0>) [p1, p0, p50, p173, p175, p163, p2, p3, p6, p11, p13, p17, None, p161, p51, p149, p154]
+2683: i176 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+2687: i177 = int_is_true(i176)
guard_false(i177, descr=<Guard0x7f469e132728>) [p1, p0, p50, p173, p163, p2, p3, p6, p11, p13, p17, None, p161, p51, p149, p154]
+2697: p178 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #12 LOOKUP_METHOD')
+2697: setfield_gc(p163, ConstPtr(ptr93), descr=<FieldP JitVirtualRef.virtual_token 8>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #18 CALL_METHOD')
+2712: guard_not_invalidated(descr=<Guard0x7f469e1326b0>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, p173, None, p51, p149, p154]
+2712: i179 = strlen(p149)
+2723: i181 = int_gt(9223372036854775807, i179)
guard_true(i181, descr=<Guard0x7f469e132638>) [p1, p0, p50, p173, p149, p2, p3, p6, p11, p13, p17, None, None, p51, None, p154]
+2742: p182 = getfield_gc_pure(p173, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+2746: i183 = getfield_gc_pure(p173, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+2750: i184 = getarrayitem_gc_pure(p182, 0, descr=<ArrayS 8>)
+2754: i185 = int_eq(i184, 17)
guard_true(i185, descr=<Guard0x7f469e132548>) [p1, p0, p50, p173, p2, p3, p6, p11, p13, p17, i179, i183, p182, None, None, p51, p149, p154]
+2764: i186 = getarrayitem_gc_pure(p182, 2, descr=<ArrayS 8>)
+2768: i187 = int_and(i186, 1)
+2775: i188 = int_is_true(i187)
guard_true(i188, descr=<Guard0x7f469e132458>) [p1, p0, p50, p173, i186, p2, p3, p6, p11, p13, p17, i179, i183, p182, None, None, p51, p149, p154]
+2785: i189 = getarrayitem_gc_pure(p182, 5, descr=<ArrayS 8>)
+2789: i190 = int_gt(i189, 1)
guard_false(i190, descr=<Guard0x7f469e132368>) [p1, p0, p50, p173, p2, p3, p6, p11, p13, p17, i179, i183, p182, None, None, p51, p149, p154]
+2799: i191 = getarrayitem_gc_pure(p182, 1, descr=<ArrayS 8>)
+2803: i192 = int_add(i191, 1)
+2807: i193 = getarrayitem_gc_pure(p182, i192, descr=<ArrayS 8>)
+2812: i194 = int_eq(i193, 19)
guard_true(i194, descr=<Guard0x7f469e132278>) [p1, p0, p50, p173, i192, p2, p3, p6, p11, p13, p17, i179, i183, p182, None, None, p51, p149, p154]
+2822: i195 = int_add(i192, 1)
+2827: i196 = getarrayitem_gc_pure(p182, i195, descr=<ArrayS 8>)
+2832: i197 = int_add(i192, 2)
+2837: i199 = int_lt(0, i179)
guard_true(i199, descr=<Guard0x7f469e132188>) [p1, p0, p50, p173, i196, i197, p2, p3, p6, p11, p13, p17, i179, i183, p182, None, None, p51, p149, p154]
+2847: guard_value(i197, 11, descr=<Guard0x7f469e132098>) [p1, p0, p50, p173, i196, i197, p182, p2, p3, p6, p11, p13, p17, i179, i183, None, None, None, p51, p149, p154]
+2857: guard_value(i196, 51, descr=<Guard0x7f469e125f88>) [p1, p0, p50, p173, i196, p182, p2, p3, p6, p11, p13, p17, i179, i183, None, None, None, p51, p149, p154]
+2867: guard_value(p182, ConstPtr(ptr128), descr=<Guard0x7f469e125e98>) [p1, p0, p50, p173, p182, p2, p3, p6, p11, p13, p17, i179, i183, None, None, None, p51, p149, p154]
debug_merge_point(2, 3, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+2886: p200 = force_token()
p201 = new_with_vtable(26271088)
p202 = new_with_vtable(26169752)
+2971: setfield_gc(p202, p154, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p50, p202, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p0, p200, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+3039: setfield_gc(p201, i183, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+3043: setfield_gc(p201, i179, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+3047: setfield_gc(p201, p149, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+3051: setfield_gc(p201, ConstPtr(ptr128), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
i203 = call_assembler(0, p201, descr=<Loop5>)
guard_not_forced(descr=<Guard0x7f46a0ef1420>) [p1, p0, p50, p201, p173, i203, p202, p2, p3, p6, p11, p13, p17, p51, p149]
+3370: guard_no_exception(descr=<Guard0x7f469e125e20>) [p1, p0, p50, p201, p173, i203, p202, p2, p3, p6, p11, p13, p17, p51, p149]
+3385: guard_false(i203, descr=<Guard0x7f469e125da8>) [p1, p0, p50, p201, p173, p202, p2, p3, p6, p11, p13, p17, p51, p149]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #21 RETURN_VALUE')
+3394: p204 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+3405: guard_isnull(p204, descr=<Guard0x7f469e125cb8>) [p1, p0, p50, p204, p202, p2, p3, p6, p11, p13, p17, p51, p149]
+3414: i205 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+3418: i206 = int_is_true(i205)
guard_false(i206, descr=<Guard0x7f469e125c40>) [p1, p0, p50, p202, p2, p3, p6, p11, p13, p17, p51, p149]
+3428: p207 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p50, p51, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+3459: setfield_gc(p202, ConstPtr(ptr93), descr=<FieldP JitVirtualRef.virtual_token 8>)
+3474: guard_not_invalidated(descr=<Guard0x7f469e125bc8>) [p1, p0, p2, p3, p6, p11, p13, p17, None, p149]
+3474: i208 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+3482: i209 = int_lt(i208, 0)
guard_false(i209, descr=<Guard0x7f469e125b50>) [p1, p0, p2, p3, p6, p11, p13, p17, None, p149]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+3492: jump(p0, p1, p2, p3, p6, p11, p13, p149, p17, i205, p50, p51, descr=TargetToken(139941324360392))
+3514: --end of the loop--
[1ce3acd12f3a] jit-log-opt-loop}
[1ce3ace3141f] {jit-backend
[1ce3adb2fedf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183aa
[1ce3adb37851] jit-backend-dump}
[1ce3adb3855d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183aa4 +0  1C000000
[1ce3adb3922a] jit-backend-dump}
[1ce3adb397bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183aaf +0  1C000000
[1ce3adb3a14d] jit-backend-dump}
[1ce3adb3a7dc] {jit-backend-addr
bridge out of Guard 0x7f46a0f1ce30 has address 0x7f469e183aa0 to 0x7f469e183b58
[1ce3adb3b846] jit-backend-addr}
[1ce3adb3c0a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183afc +0  58000000
[1ce3adb3cacf] jit-backend-dump}
[1ce3adb3d0a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183b0d +0  6C000000
[1ce3adb3da1e] jit-backend-dump}
[1ce3adb3e0c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181ad5 +0  C71F0000
[1ce3adb3ea70] jit-backend-dump}
[1ce3adb3f629] jit-backend}
[1ce3adb40f80] {jit-log-opt-bridge
# bridge out of Guard 0x7f46a0f1ce30 with 10 ops
[i0, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+76: p2 = getfield_gc_pure(p1, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+80: i3 = strgetitem(p2, i0)
+86: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard0x7f469e13a818>) [i0, p1]
+96: i7 = int_add(i0, 1)
+100: i8 = getfield_gc_pure(p1, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+104: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard0x7f469e13a980>) [i7, p1]
+113: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+184: --end of the loop--
[1ce3adb50059] jit-log-opt-bridge}
[1ce3ae066d0c] {jit-backend
[1ce3ae10d7a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183c
[1ce3ae1142f8] jit-backend-dump}
[1ce3ae114e6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183c0c +0  2B000000
[1ce3ae115bbd] jit-backend-dump}
[1ce3ae124b14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183c17 +0  2B000000
[1ce3ae125ad1] jit-backend-dump}
[1ce3ae1260ce] {jit-backend-addr
bridge out of Guard 0x7f469e1331f0 has address 0x7f469e183c08 to 0x7f469e183d6e
[1ce3ae12701e] jit-backend-addr}
[1ce3ae1278ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183c64 +0  06010000
[1ce3ae128298] jit-backend-dump}
[1ce3ae12888f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183c72 +0  1D010000
[1ce3ae129141] jit-backend-dump}
[1ce3ae129829] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183cb4 +0  25010000
[1ce3ae12a146] jit-backend-dump}
[1ce3ae12a76f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1828e8 +0  1C130000
[1ce3ae12b0c4] jit-backend-dump}
[1ce3ae12ba58] jit-backend}
[1ce3ae12d0a4] {jit-log-opt-bridge
# bridge out of Guard 0x7f469e1331f0 with 19 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #21 RETURN_VALUE')
+76: p14 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+87: guard_isnull(p14, descr=<Guard0x7f469e13b1f0>) [p0, p1, p2, p14, p5, p6, p7, p8, p9, p10, p11, p12, p13, p4, p3]
+96: i15 = getfield_gc(p2, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+100: i16 = int_is_true(i15)
guard_false(i16, descr=<Guard0x7f469e13b9e8>) [p0, p1, p2, p5, p6, p7, p8, p9, p10, p11, p12, p13, p4, p3]
+110: p17 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p2, p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+143: setfield_gc(p5, ConstPtr(ptr18), descr=<FieldP JitVirtualRef.virtual_token 8>)
+158: guard_not_invalidated(descr=<Guard0x7f469e13b970>) [p0, p1, p6, p7, p8, p9, p10, p11, None, p13, None, None]
+158: i21 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+166: i23 = int_lt(i21, 0)
guard_false(i23, descr=<Guard0x7f469e13b8f8>) [p0, p1, p6, p7, p8, p9, p10, p11, None, p13, None, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
p25 = new_with_vtable(ConstClass(W_StringObject))
+240: setfield_gc(p25, p13, descr=<FieldP pypy.objspace.std.stringobject.W_StringObject.inst__value 8>)
+251: jump(p1, p0, p6, p7, ConstPtr(ptr26), 0, p8, 4, 44, p9, p10, p25, p11, ConstPtr(ptr30), ConstPtr(ptr31), ConstPtr(ptr31), ConstPtr(ptr31), descr=TargetToken(139941324360304))
+358: --end of the loop--
[1ce3ae146c23] jit-log-opt-bridge}
[1ce3ae185dde] {jit-backend
[1ce3ae196433] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183e18 +0  48817D50FFFFFF007D2448C7442408FFFFFF0049BB083E189E467F00004C891C2449BB75E2179E467F000041FFD349BB603300A1467F00004D8B3B4D8D6F0149BB603300A1467F00004D892B4D8D6C24014D896E1849C74620000000004D89662848C745580100000048C7451000C6FA0148C74520000000004889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[1ce3ae19925f] jit-backend-dump}
[1ce3ae199974] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183e1c +0  1C000000
[1ce3ae19a3cb] jit-backend-dump}
[1ce3ae19a873] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183e27 +0  1C000000
[1ce3ae19b20f] jit-backend-dump}
[1ce3ae19b690] {jit-backend-addr
bridge out of Guard 0x7f46a0f1cbd8 has address 0x7f469e183e18 to 0x7f469e183ec0
[1ce3ae19c194] jit-backend-addr}
[1ce3ae19c7e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18196d +0  A7240000
[1ce3ae19d10a] jit-backend-dump}
[1ce3ae19d956] jit-backend}
[1ce3ae19e24f] {jit-log-opt-bridge
# bridge out of Guard 0x7f46a0f1cbd8 with 5 ops
[i0, p1]
+76: i3 = int_add(i0, 1)
+81: setfield_gc(p1, i3, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+85: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+93: setfield_gc(p1, i0, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+97: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+168: --end of the loop--
[1ce3ae1aae84] jit-log-opt-bridge}
[1ce3ae2c6d2b] {jit-backend
[1ce3ae2d5cf3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183ed0 +0  48817D50FFFFFF007D2448C7442408FFFFFF0049BBC03E189E467F00004C891C2449BB75E2179E467F000041FFD349BB783300A1467F00004D8B3B4D8D6F0149BB783300A1467F00004D892B4D8D6A014D896E1849C74620000000004D89562848C745580100000048C7451000C6FA0148C74520000000004889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[1ce3ae2d9398] jit-backend-dump}
[1ce3ae2d9a92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183ed4 +0  1C000000
[1ce3ae2da490] jit-backend-dump}
[1ce3ae2da979] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183edf +0  1C000000
[1ce3ae2db20a] jit-backend-dump}
[1ce3ae2db6d8] {jit-backend-addr
bridge out of Guard 0x7f46a0f1ccc8 has address 0x7f469e183ed0 to 0x7f469e183f77
[1ce3ae2dc11b] jit-backend-addr}
[1ce3ae2dc73f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181ac4 +0  08240000
[1ce3ae2dd08b] jit-backend-dump}
[1ce3ae2dda0d] jit-backend}
[1ce3ae2de368] {jit-log-opt-bridge
# bridge out of Guard 0x7f46a0f1ccc8 with 5 ops
[i0, p1]
+76: i3 = int_add(i0, 1)
+80: setfield_gc(p1, i3, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+84: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+92: setfield_gc(p1, i0, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+96: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1fac600>)
+167: --end of the loop--
[1ce3ae2e4cc9] jit-log-opt-bridge}
[1ce3ae30ccb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1811a3 +0  E951040000
[1ce3ae30e657] jit-backend-dump}
[1ce3ae30eb6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e181352 +0  E9A5030000
[1ce3ae30f59d] jit-backend-dump}
[1ce3ae30fd73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18239c +0  E9430D0000
[1ce3ae3106e0] jit-backend-dump}
[1ce3ae310bba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18241e +0  E9550D0000
[1ce3ae3114ee] jit-backend-dump}
[1ce3ae3118e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182641 +0  E9A40C0000
[1ce3ae312250] jit-backend-dump}
[1ce3ae312760] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18293d +0  E9D30B0000
[1ce3ae3130c4] jit-backend-dump}
[1ce3ae313571] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1829f9 +0  E93F0C0000
[1ce3ae313ec3] jit-backend-dump}
[1ce3ae314423] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182c50 +0  E9A40B0000
[1ce3ae314dfe] jit-backend-dump}
[1ce3ae3151f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e182f4a +0  E9D50A0000
[1ce3ae315f23] jit-backend-dump}
[1ce3ae316356] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e183ca6 +0  E90D010000
[1ce3ae316c64] jit-backend-dump}
[1ce3ae5412ac] {jit-backend
[1ce3ae616106] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1840b
[1ce3ae62a424] jit-backend-dump}
[1ce3ae62acff] {jit-backend-addr
Loop 7 (<code object double_loop, file 'source.py', line 47> #38 FOR_ITER) has address 0x7f469e184108 to 0x7f469e184341 (bootstrap 0x7f469e1840b8)
[1ce3ae62bde6] jit-backend-addr}
[1ce3ae62c65c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1841de +0  5F010000
[1ce3ae62d537] jit-backend-dump}
[1ce3ae62db76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1841ec +0  76010000
[1ce3ae62e5f1] jit-backend-dump}
[1ce3ae62ea22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1841f9 +0  8E010000
[1ce3ae62f347] jit-backend-dump}
[1ce3ae62f77e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18420e +0  9E010000
[1ce3ae6300d0] jit-backend-dump}
[1ce3ae630542] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e184228 +0  A9010000
[1ce3ae630e17] jit-backend-dump}
[1ce3ae63123f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e184231 +0  C5010000
[1ce3ae631af4] jit-backend-dump}
[1ce3ae631f2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e184250 +0  CB010000
[1ce3ae632823] jit-backend-dump}
[1ce3ae632c6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e184262 +0  DE010000
[1ce3ae63355c] jit-backend-dump}
[1ce3ae6339b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18427c +0  E9010000
[1ce3ae63437f] jit-backend-dump}
[1ce3ae634792] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18428c +0  FE010000
[1ce3ae6350a3] jit-backend-dump}
[1ce3ae6354b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e184299 +0  16020000
[1ce3ae638072] jit-backend-dump}
[1ce3ae63881b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1842ab +0  4E020000
[1ce3ae639149] jit-backend-dump}
[1ce3ae639580] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1842be +0  60020000
[1ce3ae639e4f] jit-backend-dump}
[1ce3ae63a262] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1842ec +0  57020000
[1ce3ae63ab0e] jit-backend-dump}
[1ce3ae63af33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18430d +0  5B020000
[1ce3ae63b7b5] jit-backend-dump}
[1ce3ae63bbcb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e184319 +0  74020000
[1ce3ae63c4de] jit-backend-dump}
[1ce3ae63c980] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18432b +0  AC020000
[1ce3ae63d23e] jit-backend-dump}
[1ce3ae63db5a] jit-backend}
[1ce3ae63ea6e] {jit-log-opt-loop
# Loop 7 (<code object double_loop, file 'source.py', line 47> #38 FOR_ITER) : loop with 87 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+183: p21 = getarrayitem_gc(p9, 5, descr=<ArrayP 8>)
+194: p23 = getarrayitem_gc(p9, 6, descr=<ArrayP 8>)
+205: p25 = getarrayitem_gc(p9, 7, descr=<ArrayP 8>)
+209: p26 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+209: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, p19, p21, p23, p25, descr=TargetToken(139941324360920))
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+288: guard_value(i7, 5, descr=<Guard0x7f469e13ba60>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17, p19, p21, p23, p25]
+298: guard_class(p19, 26177128, descr=<Guard0x7f469e1591f0>) [p1, p0, p19, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+312: p29 = getfield_gc(p19, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+316: guard_nonnull(p29, descr=<Guard0x7f469e159178>) [p1, p0, p19, p29, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+325: i30 = getfield_gc(p19, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+329: p31 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+333: guard_class(p31, 26517736, descr=<Guard0x7f469e159100>) [p1, p0, p19, i30, p31, p29, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+346: p33 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+350: i34 = getfield_gc_pure(p33, descr=<FieldS tuple3.item0 8>)
+354: i35 = getfield_gc_pure(p33, descr=<FieldS tuple3.item1 16>)
+358: i36 = getfield_gc_pure(p33, descr=<FieldS tuple3.item2 24>)
+362: i38 = int_lt(i30, 0)
guard_false(i38, descr=<Guard0x7f469e159088>) [p1, p0, p19, i30, i36, i35, i34, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+372: i39 = int_ge(i30, i36)
guard_false(i39, descr=<Guard0x7f469e159010>) [p1, p0, p19, i30, i35, i34, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+381: i40 = int_mul(i30, i35)
+388: i41 = int_add(i34, i40)
+394: i43 = int_add(i30, 1)
+398: setfield_gc(p19, i43, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+402: guard_value(i5, 0, descr=<Guard0x7f469e158f98>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #41 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #44 LOAD_FAST')
+412: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard0x7f469e158ea8>) [p1, p0, p11, p2, p3, p4, p6, p13, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #47 LOAD_FAST')
+430: guard_nonnull_class(p13, ConstClass(W_IntObject), descr=<Guard0x7f469e158db8>) [p1, p0, p13, p2, p3, p4, p6, p11, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #50 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #53 BINARY_ADD')
+456: i47 = getfield_gc_pure(p13, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+460: i48 = int_add_ovf(i47, i41)
guard_no_overflow(descr=<Guard0x7f469e158d40>) [p1, p0, p13, i48, p2, p3, p4, p6, p11, p17, p19, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #54 INPLACE_ADD')
+472: i49 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+476: i50 = int_add_ovf(i49, i48)
guard_no_overflow(descr=<Guard0x7f469e158c50>) [p1, p0, p11, i50, p2, p3, p4, p6, p13, p17, p19, i48, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #55 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #58 JUMP_ABSOLUTE')
+485: guard_not_invalidated(descr=<Guard0x7f469e158bd8>) [p1, p0, p2, p3, p4, p6, p13, p17, p19, i50, None, i41]
+485: i53 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+493: i55 = int_lt(i53, 0)
guard_false(i55, descr=<Guard0x7f469e158b60>) [p1, p0, p2, p3, p4, p6, p13, p17, p19, i50, None, i41]
+503: guard_value(p4, ConstPtr(ptr56), descr=<Guard0x7f469e158ae8>) [p1, p0, p4, p2, p3, p6, p13, p17, p19, i50, None, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+522: label(p0, p1, p2, p3, p6, i50, p13, i41, p17, p19, i43, i36, i35, i34, i47, descr=TargetToken(139941324361008))
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+559: i57 = int_ge(i43, i36)
guard_false(i57, descr=<Guard0x7f469e1589f8>) [p1, p0, p19, i43, i35, i34, p2, p3, p6, p13, p17, i50, i41]
+568: i58 = int_mul(i43, i35)
+575: i59 = int_add(i34, i58)
+581: i60 = int_add(i43, 1)
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #41 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #44 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #47 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #50 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #53 BINARY_ADD')
+585: setfield_gc(p19, i60, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+589: i61 = int_add_ovf(i47, i59)
guard_no_overflow(descr=<Guard0x7f469e158980>) [p1, p0, p13, i61, p2, p3, p6, p17, p19, i59, i50, None]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #54 INPLACE_ADD')
+601: i62 = int_add_ovf(i50, i61)
guard_no_overflow(descr=<Guard0x7f469e158890>) [p1, p0, i62, p2, p3, p6, p13, p17, p19, i61, i59, i50, None]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #55 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #58 JUMP_ABSOLUTE')
+613: guard_not_invalidated(descr=<Guard0x7f469e1587a0>) [p1, p0, p2, p3, p6, p13, p17, p19, i62, None, i59, None, None]
+613: i63 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+621: i64 = int_lt(i63, 0)
guard_false(i64, descr=<Guard0x7f469e1586b0>) [p1, p0, p2, p3, p6, p13, p17, p19, i62, None, i59, None, None]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+631: jump(p0, p1, p2, p3, p6, i62, p13, i59, p17, p19, i60, i36, i35, i34, i47, descr=TargetToken(139941324361008))
+649: --end of the loop--
[1ce3ae69061a] jit-log-opt-loop}
[1ce3aeab4206] {jit-backend
[1ce3aeb9a710] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1846d
[1ce3aeba3af3] jit-backend-dump}
[1ce3aeba466a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1846d4 +0  28000000
[1ce3aeba530e] jit-backend-dump}
[1ce3aeba57eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1846df +0  28000000
[1ce3aeba6199] jit-backend-dump}
[1ce3aeba66cd] {jit-backend-addr
bridge out of Guard 0x7f469e1589f8 has address 0x7f469e1846d0 to 0x7f469e184956
[1ce3aeba72e5] jit-backend-addr}
[1ce3aeba79d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e184739 +0  19020000
[1ce3aeba839f] jit-backend-dump}
[1ce3aeba89a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18474b +0  51020000
[1ce3aeba92c1] jit-backend-dump}
[1ce3aeba9722] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18475e +0  63020000
[1ce3aebaa04d] jit-backend-dump}
[1ce3aebaa463] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18476b +0  7B020000
[1ce3aebaad38] jit-backend-dump}
[1ce3aebab148] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e184780 +0  8B020000
[1ce3aebaba15] jit-backend-dump}
[1ce3aebabe1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e18479a +0  96020000
[1ce3aebac6f7] jit-backend-dump}
[1ce3aebacafe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1847a3 +0  B2020000
[1ce3aebb5f93] jit-backend-dump}
[1ce3aebb6655] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1847d3 +0  A7020000
[1ce3aebb71d2] jit-backend-dump}
[1ce3aebb75e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1847eb +0  B4020000
[1ce3aebb7eaf] jit-backend-dump}
[1ce3aebb82c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e184800 +0  C4020000
[1ce3aebb8b8b] jit-backend-dump}
[1ce3aebb931f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f469e1842ec +0  E0030000
[1ce3aebb9be6] jit-backend-dump}
[1ce3aebba825] jit-backend}
[1ce3aebbb686] {jit-log-opt-bridge
# bridge out of Guard 0x7f469e1589f8 with 60 ops
[p0, p1, p2, i3, i4, i5, p6, p7, p8, p9, p10, i11, i12]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #61 POP_BLOCK')
+76: p13 = getfield_gc_pure(p8, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+87: i14 = getfield_gc_pure(p8, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+91: setfield_gc(p2, ConstPtr(ptr15), descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+99: guard_value(i14, 4, descr=<Guard0x7f469e1592e0>) [p0, p1, i14, p6, p7, p13, p9, p10, i11, i12]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #62 JUMP_ABSOLUTE')
+109: guard_not_invalidated(descr=<Guard0x7f469e16f4c0>) [p0, p1, p6, p7, p13, p9, p10, i11, i12]
+109: i18 = getfield_raw(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+117: i20 = int_lt(i18, 0)
guard_false(i20, descr=<Guard0x7f469e16f448>) [p0, p1, p6, p7, p13, p9, p10, i11, i12]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #19 FOR_ITER')
+127: guard_class(p10, 26177128, descr=<Guard0x7f469e16f3d0>) [p0, p1, p10, p6, p7, p13, p9, i11, i12]
+146: p22 = getfield_gc(p10, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+150: guard_nonnull(p22, descr=<Guard0x7f469e16f358>) [p0, p1, p10, p22, p6, p7, p13, p9, i11, i12]
+159: i23 = getfield_gc(p10, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+163: p24 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+167: guard_class(p24, 26517736, descr=<Guard0x7f469e16f2e0>) [p0, p1, p10, i23, p24, p22, p6, p7, p13, p9, i11, i12]
+180: p26 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+184: i27 = getfield_gc_pure(p26, descr=<FieldS tuple3.item0 8>)
+188: i28 = getfield_gc_pure(p26, descr=<FieldS tuple3.item1 16>)
+192: i29 = getfield_gc_pure(p26, descr=<FieldS tuple3.item2 24>)
+196: i31 = int_lt(i23, 0)
guard_false(i31, descr=<Guard0x7f469e16f1f0>) [p0, p1, p10, i23, i29, i28, i27, p6, p7, p13, p9, i11, i12]
+206: i32 = int_ge(i23, i29)
guard_false(i32, descr=<Guard0x7f469e16f178>) [p0, p1, p10, i23, i28, i27, p6, p7, p13, p9, i11, i12]
+215: i33 = int_mul(i23, i28)
+222: i34 = int_add(i27, i33)
+225: i36 = int_add(i23, 1)
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #22 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #25 SETUP_LOOP')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #28 LOAD_GLOBAL')
+229: p37 = getfield_gc(p1, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+240: setfield_gc(p10, i36, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+244: guard_value(p37, ConstPtr(ptr38), descr=<Guard0x7f469e16f100>) [p0, p1, p37, p6, p7, p10, p13, i34, i11, i12]
+263: p39 = getfield_gc(p37, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+268: guard_value(p39, ConstPtr(ptr40), descr=<Guard0x7f469e16f088>) [p0, p1, p39, p37, p6, p7, p10, p13, i34, i11, i12]
+287: p42 = getfield_gc(ConstPtr(ptr41), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+295: guard_value(p42, ConstPtr(ptr43), descr=<Guard0x7f469e16f010>) [p0, p1, p42, p6, p7, p10, p13, i34, i11, i12]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #31 LOAD_CONST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #34 CALL_FUNCTION')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #37 GET_ITER')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+308: p44 = same_as(ConstPtr(ptr40))
+308: label(p1, p0, p6, p7, p13, i11, i34, i12, p10, descr=TargetToken(139941324361184))
p46 = new_with_vtable(26354736)
p48 = new_with_vtable(ConstClass(W_IntObject))
p50 = new_with_vtable(ConstClass(W_IntObject))
+434: setfield_gc(p48, i11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
p52 = new_with_vtable(ConstClass(W_IntObject))
+449: setfield_gc(p50, i34, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
p54 = new_with_vtable(26177128)
p56 = new_with_vtable(ConstClass(W_ListObject))
+476: setfield_gc(p46, 62, descr=<FieldU pypy.interpreter.pyopcode.FrameBlock.inst_handlerposition 8>)
+484: setfield_gc(p46, p13, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+495: setfield_gc(p46, 4, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+503: setfield_gc(p52, i12, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+514: setfield_gc(p56, ConstPtr(ptr59), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+522: setfield_gc(p56, ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+536: setfield_gc(p54, p56, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+540: jump(p1, p0, p6, p7, ConstPtr(ptr61), 0, p46, 5, 37, p48, p50, p52, p10, p54, ConstPtr(ptr65), ConstPtr(ptr66), ConstPtr(ptr66), descr=TargetToken(139941324360920))
+646: --end of the loop--
[1ce3aebf4705] jit-log-opt-bridge}
[1ce3af24b4b5] {jit-backend-counts
entry 0:1
TargetToken(139941277979224):1
TargetToken(139941277979312):41
entry 1:1
TargetToken(139941277980368):1
TargetToken(139941277980456):41
entry 2:4647
TargetToken(139941277980984):4647
TargetToken(139941277981072):9292
entry 3:201
TargetToken(139941277981688):201
TargetToken(139941277981776):4468
bridge 139941278352112:4446
bridge 139941278356552:4268
TargetToken(139941324358104):4268
entry 4:1
TargetToken(139941324359072):1
TargetToken(139941324358984):1938
entry 5:3173
bridge 139941324636912:2882
bridge 139941324639072:2074
bridge 139941324638592:158
entry 6:377
TargetToken(139941324360304):527
TargetToken(139941324360392):1411
bridge 139941324639792:1420
bridge 139941276496368:150
bridge 139941324639192:50
bridge 139941324639432:7
entry 7:201
TargetToken(139941324360920):9990
TargetToken(139941324361008):998737
bridge 139941276649976:9790
TargetToken(139941324361184):9789
[1ce3af25613c] jit-backend-counts}
