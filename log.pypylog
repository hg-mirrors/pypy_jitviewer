[d0e7d8d709c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a000 +0  4157415641554154415341524151415057565554535251504889E341BB503AF20041FFD34889DF4883E4F041BB100CD30041FFD3488D65D8415F415E415D415C5B5DC3
[d0e7d8f4034] jit-backend-dump}
[d0e7d8f674c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a043 +0  4157415641554154415341524151415057565554535251504889E341BB003AF20041FFD34889DF4883E4F041BB100CD30041FFD3488D65D8415F415E415D415C5B5DC3
[d0e7d8f99b6] jit-backend-dump}
[d0e7d8ff830] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a086 +0  4157415641554154415341524151415057565554535251504889E34881EC80000000F20F110424F20F114C2408F20F11542410F20F115C2418F20F11642420F20F116C2428F20F11742430F20F117C2438F2440F11442440F2440F114C2448F2440F11542450F2440F115C2458F2440F11642460F2440F116C2468F2440F11742470F2440F117C247841BB503AF20041FFD34889DF4883E4F041BB100CD30041FFD3488D65D8415F415E415D415C5B5DC3
[d0e7d904384] jit-backend-dump}
[d0e7d906196] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a137 +0  4157415641554154415341524151415057565554535251504889E34881EC80000000F20F110424F20F114C2408F20F11542410F20F115C2418F20F11642420F20F116C2428F20F11742430F20F117C2438F2440F11442440F2440F114C2448F2440F11542450F2440F115C2458F2440F11642460F2440F116C2468F2440F11742470F2440F117C247841BB003AF20041FFD34889DF4883E4F041BB100CD30041FFD3488D65D8415F415E415D415C5B5DC3
[d0e7d90a4e6] jit-backend-dump}
[d0e7d91000c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a210 +0  41BB6039F20041FFD3B803000000488D65D8415F415E415D415C5B5DC3
[d0e7d9121cc] jit-backend-dump}
[d0e7d91b0ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a22d +0  F20F11442410F20F114C2418F20F11542420F20F115C2428F20F11642430F20F116C2438F20F11742440F20F117C2448F2440F11442450F2440F114C2458F2440F11542460F2440F115C2468F2440F11642470F2440F116C2478F2440F11B42480000000F2440F11BC24880000004829C24C894DA848894D804C8955B04C8945A048897D98488975904889D741BB30C6CE0041FFE3
[d0e7d91efca] jit-backend-dump}
[d0e7d92a670] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a2c2 +0  4C8B4DA8488B4D804C8B55B04C8B45A0488B7D98488B7590F20F10442410F20F104C2418F20F10542420F20F105C2428F20F10642430F20F106C2438F20F10742440F20F107C2448F2440F10442450F2440F104C2458F2440F10542460F2440F105C2468F2440F10642470F2440F106C2478F2440F10B42480000000F2440F10BC24880000004885C07409488B142550C95401C349BB10A279E5D57F000041FFE3
[d0e7d92ea2c] jit-backend-dump}
[d0e7d932e9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a363 +0  57565251415041514883EC40F20F110424F20F114C2408F20F11542410F20F115C2418F20F11642420F20F116C2428F20F11742430F20F117C24384889E741BB50D2A80041FFD3488B0425400C9C024885C0753CF20F107C2438F20F10742430F20F106C2428F20F10642420F20F105C2418F20F10542410F20F104C2408F20F1004244883C44041594158595A5E5FC341BB003AF20041FFD3B8030000004883C478C3
[d0e7d937156] jit-backend-dump}
[d0e7d938ba2] {jit-backend-counts
[d0e7d9394fc] jit-backend-counts}
[d0e7fb5a273] {jit-backend
[d0e8032b45f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a
[d0e803559b7] jit-backend-dump}
[d0e80356de5] {jit-backend-addr
Loop 0 (<code object uninlined_call, file 'source.py', line 21> #19 FOR_ITER) has address 7fd5e579a43c to 7fd5e579a5fb (bootstrap 7fd5e579a406)
[d0e803590a1] jit-backend-addr}
[d0e8035a421] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a438 +0  30FFFFFF
[d0e8035c161] jit-backend-dump}
[d0e8035d487] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a4cf +0  28010000
[d0e8035eb7f] jit-backend-dump}
[d0e8035f647] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a4db +0  3B010000
[d0e80360bb9] jit-backend-dump}
[d0e803615df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a4e8 +0  4B010000
[d0e80362a49] jit-backend-dump}
[d0e80363415] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a4fc +0  55010000
[d0e80364879] jit-backend-dump}
[d0e80365233] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a516 +0  5B010000
[d0e80366895] jit-backend-dump}
[d0e80367333] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a51f +0  73010000
[d0e803688bd] jit-backend-dump}
[d0e80369259] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a53e +0  74010000
[d0e8036a6c9] jit-backend-dump}
[d0e8036b065] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a550 +0  7F010000
[d0e8036c4cf] jit-backend-dump}
[d0e8036ce23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a563 +0  87010000
[d0e8036e28d] jit-backend-dump}
[d0e8036ed5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a571 +0  94010000
[d0e8037030f] jit-backend-dump}
[d0e8037119d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a583 +0  B5010000
[d0e803726d9] jit-backend-dump}
[d0e80373069] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a5b1 +0  A0010000
[d0e803744d9] jit-backend-dump}
[d0e80374e51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a5d3 +0  9A010000
[d0e803762c1] jit-backend-dump}
[d0e80376c99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a5e5 +0  BE010000
[d0e80378349] jit-backend-dump}
[d0e803796ff] jit-backend}
[d0e8037b13f] {jit-log-opt-loop
# Loop 0 : loop with 73 ops
[p0, p1]
+54: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+58: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+62: i4 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+70: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+74: i6 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+81: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+85: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+89: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+93: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+97: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+101: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+105: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+109: p19 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+109: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, descr=TargetToken(140556656117424))
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+195: guard_value(i6, 3, descr=<Guard4>) [i6, p1, p0, p2, p3, i4, p5, i7, p10, p12, p14, p16, p18]
+205: guard_class(p14, 38308720, descr=<Guard5>) [p1, p0, p14, p2, p3, i4, p5, p10, p12, p16, p18]
+217: p22 = getfield_gc(p14, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+221: guard_nonnull(p22, descr=<Guard6>) [p1, p0, p14, p22, p2, p3, i4, p5, p10, p12, p16, p18]
+230: i23 = getfield_gc(p14, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+234: p24 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+238: guard_class(p24, 38488496, descr=<Guard7>) [p1, p0, p14, i23, p24, p22, p2, p3, i4, p5, p10, p12, p16, p18]
+250: p26 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+254: i27 = getfield_gc_pure(p26, descr=<FieldS tuple3.item0 8>)
+258: i28 = getfield_gc_pure(p26, descr=<FieldS tuple3.item1 16>)
+262: i29 = getfield_gc_pure(p26, descr=<FieldS tuple3.item2 24>)
+266: i31 = int_lt(i23, 0)
guard_false(i31, descr=<Guard8>) [p1, p0, p14, i23, i29, i28, i27, p2, p3, i4, p5, p10, p12, p16, p18]
+276: i32 = int_ge(i23, i29)
guard_false(i32, descr=<Guard9>) [p1, p0, p14, i23, i28, i27, p2, p3, i4, p5, p10, p12, p16, p18]
+285: i33 = int_mul(i23, i28)
+292: i34 = int_add(i27, i33)
+298: i36 = int_add(i23, 1)
+302: setfield_gc(p14, i36, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+306: guard_value(i4, 0, descr=<Guard10>) [i4, p1, p0, p2, p3, p5, p10, p12, p14, p18, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
+316: guard_nonnull_class(p10, ConstClass(W_IntObject), descr=<Guard11>) [p1, p0, p10, p2, p3, p5, p14, p18, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
+334: guard_value(p3, ConstPtr(ptr39), descr=<Guard12>) [p1, p0, p3, p2, p5, p10, p14, p18, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+353: i40 = getfield_gc_pure(p10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+357: i42 = int_add_ovf(i40, 1)
guard_no_overflow(, descr=<Guard13>) [p1, p0, p10, i42, p2, p5, p14, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+367: guard_not_invalidated(, descr=<Guard14>) [p1, p0, p2, p5, p14, i42, i34]
+367: i44 = getfield_raw(43780840, descr=<FieldS pypysig_long_struct.c_value 0>)
+375: i46 = int_lt(i44, 0)
guard_false(i46, descr=<Guard15>) [p1, p0, p2, p5, p14, i42, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+385: label(p0, p1, p2, p5, i42, i34, p14, i36, i29, i28, i27, descr=TargetToken(140556656117504))
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+422: i47 = int_ge(i36, i29)
guard_false(i47, descr=<Guard16>) [p1, p0, p14, i36, i28, i27, p2, p5, i34, i42]
+431: i48 = int_mul(i36, i28)
+438: i49 = int_add(i27, i48)
+444: i50 = int_add(i36, 1)
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+448: setfield_gc(p14, i50, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+452: i51 = int_add_ovf(i42, 1)
guard_no_overflow(, descr=<Guard17>) [p1, p0, i51, p2, p5, p14, i49, None, i42]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+465: guard_not_invalidated(, descr=<Guard18>) [p1, p0, p2, p5, p14, i51, i49, None, None]
+465: i53 = getfield_raw(43780840, descr=<FieldS pypysig_long_struct.c_value 0>)
+473: i54 = int_lt(i53, 0)
guard_false(i54, descr=<Guard19>) [p1, p0, p2, p5, p14, i51, i49, None, None]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+483: jump(p0, p1, p2, p5, i51, i49, p14, i50, i29, i28, i27, descr=TargetToken(140556656117504))
+501: --end of the loop--
[d0e804a30d1] jit-log-opt-loop}
[d0e842b177e] {jit-backend
[d0e8436c0d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a7c
[d0e8437f56c] jit-backend-dump}
[d0e843802c8] {jit-backend-addr
Loop 1 (<code object bridge, file 'source.py', line 27> #15 LOAD_FAST) has address 7fd5e579a7f8 to 7fd5e579a9f4 (bootstrap 7fd5e579a7c2)
[d0e84382392] jit-backend-addr}
[d0e843830f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a7f4 +0  20FFFFFF
[d0e84384e94] jit-backend-dump}
[d0e84385f8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a880 +0  70010000
[d0e843877c8] jit-backend-dump}
[d0e843882ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a892 +0  7C010000
[d0e8438995e] jit-backend-dump}
[d0e8438a3ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a89c +0  8E010000
[d0e8438b926] jit-backend-dump}
[d0e8438c2c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a8af +0  96010000
[d0e8439bf82] jit-backend-dump}
[d0e8439cf90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a8c0 +0  9F010000
[d0e8439e832] jit-backend-dump}
[d0e8439f210] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a8d3 +0  A4010000
[d0e843a094a] jit-backend-dump}
[d0e843a1436] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a90b +0  85010000
[d0e843a2a14] jit-backend-dump}
[d0e843a34ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a91d +0  8C010000
[d0e843a4988] jit-backend-dump}
[d0e843a535a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a92b +0  97010000
[d0e843a6800] jit-backend-dump}
[d0e843a7484] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a948 +0  AD010000
[d0e843a896c] jit-backend-dump}
[d0e843a937a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a973 +0  9B010000
[d0e843aaa7e] jit-backend-dump}
[d0e843ab552] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a986 +0  A0010000
[d0e843acb0c] jit-backend-dump}
[d0e843ad4f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a9bd +0  82010000
[d0e843ae97e] jit-backend-dump}
[d0e843af350] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a9ce +0  8A010000
[d0e843b07d2] jit-backend-dump}
[d0e843b11f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a9eb +0  A2010000
[d0e843b27b2] jit-backend-dump}
[d0e843b396a] jit-backend}
[d0e843b50e6] {jit-log-opt-loop
# Loop 1 : loop with 92 ops
[p0, p1]
+54: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+58: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+62: i4 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+70: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+74: i6 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+81: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+85: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+89: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+93: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+97: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+101: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+105: p17 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+105: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, descr=TargetToken(140556656121504))
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+184: guard_value(i6, 2, descr=<Guard20>) [i6, p1, p0, p2, p3, i4, p5, i7, p10, p12, p14, p16]
+194: guard_nonnull_class(p12, ConstClass(W_IntObject), descr=<Guard21>) [p1, p0, p12, p2, p3, i4, p5, p10, p14, p16]
+212: guard_value(i4, 0, descr=<Guard22>) [i4, p1, p0, p2, p3, p5, p10, p12, p16]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
+222: guard_value(p3, ConstPtr(ptr21), descr=<Guard23>) [p1, p0, p3, p2, p5, p10, p12, p16]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+241: i22 = getfield_gc_pure(p12, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+245: i24 = int_lt(i22, 10000)
guard_true(i24, descr=<Guard24>) [p1, p0, p12, p2, p5, p10]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+258: i26 = int_eq(i22, -9223372036854775808)
guard_false(i26, descr=<Guard25>) [p1, p0, p12, i22, p2, p5, p10]
+277: i28 = int_mod(i22, 2)
+304: i30 = int_rshift(i28, 63)
+311: i31 = int_and(2, i30)
+320: i32 = int_add(i28, i31)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+323: i33 = int_is_true(i32)
guard_false(i33, descr=<Guard26>) [p1, p0, p2, p5, p10, p12, i32]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
+333: guard_nonnull_class(p10, ConstClass(W_IntObject), descr=<Guard27>) [p1, p0, p10, p2, p5, p12, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+351: i36 = getfield_gc_pure(p10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+355: i38 = int_add_ovf(i36, 1)
guard_no_overflow(, descr=<Guard28>) [p1, p0, p10, i38, p2, p5, p12, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+365: i40 = int_add(i22, 1)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+376: guard_not_invalidated(, descr=<Guard29>) [p1, p0, p2, p5, i38, i40, None]
+376: i42 = getfield_raw(43780840, descr=<FieldS pypysig_long_struct.c_value 0>)
+384: i44 = int_lt(i42, 0)
guard_false(i44, descr=<Guard30>) [p1, p0, p2, p5, i38, i40, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+394: label(p0, p1, p2, p5, i38, i40, descr=TargetToken(140556656121584))
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+424: i45 = int_lt(i40, 10000)
guard_true(i45, descr=<Guard31>) [p1, p0, p2, p5, i38, i40]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+437: i46 = int_eq(i40, -9223372036854775808)
guard_false(i46, descr=<Guard32>) [p1, p0, i40, p2, p5, i38, None]
+456: i47 = int_mod(i40, 2)
+483: i48 = int_rshift(i47, 63)
+490: i49 = int_and(2, i48)
+498: i50 = int_add(i47, i49)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+501: i51 = int_is_true(i50)
guard_false(i51, descr=<Guard33>) [p1, p0, p2, p5, i50, i38, i40]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+511: i52 = int_add_ovf(i38, 1)
guard_no_overflow(, descr=<Guard34>) [p1, p0, i52, p2, p5, None, i38, i40]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+528: i53 = int_add(i40, 1)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+539: guard_not_invalidated(, descr=<Guard35>) [p1, p0, p2, p5, i53, i52, None, None, None]
+539: i54 = getfield_raw(43780840, descr=<FieldS pypysig_long_struct.c_value 0>)
+547: i55 = int_lt(i54, 0)
guard_false(i55, descr=<Guard36>) [p1, p0, p2, p5, i53, i52, None, None, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+557: jump(p0, p1, p2, p5, i52, i53, descr=TargetToken(140556656121584))
+562: --end of the loop--
[d0e84448eae] jit-log-opt-loop}
[d0e85322b25] {jit-backend
[d0e85385784] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579abb
[d0e8539120a] jit-backend-dump}
[d0e853923bc] {jit-backend-addr
bridge out of Guard 16 has address 7fd5e579abb9 to 7fd5e579adb2
[d0e85393ad2] jit-backend-addr}
[d0e85394658] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579abbc +0  A0FEFFFF
[d0e85395d96] jit-backend-dump}
[d0e853968e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579abfc +0  B2010000
[d0e85397ba5] jit-backend-dump}
[d0e85398401] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579ac0b +0  BC010000
[d0e8539952c] jit-backend-dump}
[d0e85399d06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579ac14 +0  CC010000
[d0e8539af85] jit-backend-dump}
[d0e8539bb06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a5b1 +0  04060000
[d0e8539cc6d] jit-backend-dump}
[d0e8539d95b] jit-backend}
[d0e8539e9aa] {jit-log-opt-bridge
# bridge out of Guard 16 with 28 ops
[p0, p1, p2, i3, i4, i5, p6, p7, i8, i9]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #38 POP_BLOCK')
+37: p10 = getfield_gc_pure(p7, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+49: setfield_gc(p2, ConstPtr(ptr11), descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+57: guard_class(p7, 38382184, descr=<Guard37>) [p0, p1, p7, p6, p10, i9, i8]
+71: i13 = getfield_gc_pure(p7, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+76: guard_value(i13, 2, descr=<Guard38>) [p0, p1, i13, p6, p10, i9, i8]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #39 LOAD_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #42 RETURN_VALUE')
+86: guard_isnull(p10, descr=<Guard39>) [p0, p1, p10, p6, i9, i8]
+95: p15 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+106: p16 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
p18 = new_with_vtable(ConstClass(W_IntObject))
+169: setfield_gc(p1, 1, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_frame_finished_execution 149>)
setfield_gc(p1, p6, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
setfield_gc(p1, ConstPtr(ptr20), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+273: setfield_gc(p1, 0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+281: setfield_gc(p1, ConstPtr(ptr22), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+289: setfield_gc(p1, 2, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+300: setfield_gc(p1, 42, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
setarrayitem_gc(p15, 0, p18, descr=<ArrayP 8>)
p27 = new_with_vtable(ConstClass(W_IntObject))
+373: setfield_gc(p27, i8, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
setarrayitem_gc(p15, 1, p27, descr=<ArrayP 8>)
+437: setarrayitem_gc(p15, 2, ConstPtr(ptr30), descr=<ArrayP 8>)
+446: setarrayitem_gc(p15, 3, ConstPtr(ptr32), descr=<ArrayP 8>)
+455: setarrayitem_gc(p15, 4, ConstPtr(ptr32), descr=<ArrayP 8>)
+464: setfield_gc(p18, i9, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+468: finish(p18, descr=<DoneWithThisFrameDescrRef object at 0x1879c60>)
+505: --end of the loop--
[d0e853d860a] jit-log-opt-bridge}
[d0e8a56c11b] {jit-backend
[d0e8aaa04c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579ae4b
[d0e8aad0247] jit-backend-dump}
[d0e8aad14a7] {jit-backend-addr
bridge out of Guard 33 has address 7fd5e579ae4b to 7fd5e579b270
[d0e8aad346f] jit-backend-addr}
[d0e8aad44a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579ae4e +0  70FEFFFF
[d0e8aad635b] jit-backend-dump}
[d0e8aad7675] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579ae8a +0  E2030000
[d0e8aad8e15] jit-backend-dump}
[d0e8aad98bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579aea1 +0  E4030000
[d0e8aadae37] jit-backend-dump}
[d0e8aadbaf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579aebb +0  FD030000
[d0e8aadd1ad] jit-backend-dump}
[d0e8aaddcb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579aec9 +0  0B040000
[d0e8aadf319] jit-backend-dump}
[d0e8aadff9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579aede +0  2C040000
[d0e8aae15c9] jit-backend-dump}
[d0e8aae20d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579aef0 +0  36040000
[d0e8aae361b] jit-backend-dump}
[d0e8aae3fdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b0f6 +0  4B020000
[d0e8aae5427] jit-backend-dump}
[d0e8aae5de1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b105 +0  58020000
[d0e8aae722d] jit-backend-dump}
[d0e8aae7bbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b119 +0  60020000
[d0e8aae92bb] jit-backend-dump}
[d0e8aae9d71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b136 +0  60020000
[d0e8aaeb2d1] jit-backend-dump}
[d0e8aaebc91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b171 +0  41020000
[d0e8aaed0dd] jit-backend-dump}
[d0e8aaeda6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b18c +0  43020000
[d0e8aaeeec5] jit-backend-dump}
[d0e8aaef861] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b1a0 +0  48020000
[d0e8aaf0cb3] jit-backend-dump}
[d0e8aaf16df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b1b1 +0  51020000
[d0e8aaf2d29] jit-backend-dump}
[d0e8aaf4049] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b1c3 +0  73020000
[d0e8aaf55af] jit-backend-dump}
[d0e8aaf5f2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b1ee +0  62020000
[d0e8aaf737f] jit-backend-dump}
[d0e8aaf7d09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b201 +0  67020000
[d0e8aaf9161] jit-backend-dump}
[d0e8aaf9ae5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b22f +0  52020000
[d0e8aafb0c9] jit-backend-dump}
[d0e8aafbbfd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b23c +0  5E020000
[d0e8aafd247] jit-backend-dump}
[d0e8aafdc43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b259 +0  76020000
[d0e8aaff0bf] jit-backend-dump}
[d0e8ab0006d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a9bd +0  8A040000
[d0e8ab014dd] jit-backend-dump}
[d0e8ab02695] jit-backend}
[d0e8ab03ea1] {jit-log-opt-bridge
# bridge out of Guard 33 with 137 ops
[p0, p1, p2, p3, i4, i5, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #37 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #40 LOAD_GLOBAL')
+37: p7 = getfield_gc(p1, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+48: guard_value(p7, ConstPtr(ptr8), descr=<Guard41>) [p0, p1, p7, p2, p3, i5, i6]
+67: p9 = getfield_gc(p7, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+71: guard_value(p9, ConstPtr(ptr10), descr=<Guard42>) [p0, p1, p9, p7, p2, p3, i5, i6]
+90: guard_not_invalidated(, descr=<Guard43>) [p0, p1, p7, p2, p3, i5, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #43 CALL_FUNCTION')
+90: p12 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+99: p13 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+103: i14 = force_token()
+103: p15 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+107: guard_isnull(p15, descr=<Guard44>) [p0, p1, p12, p15, p2, p3, p13, i14, i5, i6]
+116: i16 = getfield_gc(p12, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+120: i17 = int_is_zero(i16)
guard_true(i17, descr=<Guard45>) [p0, p1, p12, p2, p3, p13, i14, i5, i6]
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #0 LOAD_CONST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #3 STORE_FAST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #6 SETUP_LOOP')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #9 LOAD_GLOBAL')
+130: guard_not_invalidated(, descr=<Guard46>) [p0, p1, p12, p2, p3, p13, i14, i5, i6]
+130: p19 = getfield_gc(ConstPtr(ptr18), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+138: guard_value(p19, ConstPtr(ptr20), descr=<Guard47>) [p0, p1, p12, p19, p2, p3, p13, i14, i5, i6]
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #12 LOAD_CONST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #15 CALL_FUNCTION')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #18 GET_ITER')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+151: i22 = getfield_raw(43780840, descr=<FieldS pypysig_long_struct.c_value 0>)
+159: i24 = int_lt(i22, 0)
guard_false(i24, descr=<Guard48>) [p0, p1, p12, p2, p3, p13, i14, i5, i6]
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+169: i25 = force_token()
p27 = new_with_vtable(38380152)
p29 = new_array(0, descr=<ArrayP 8>)
p31 = new_array(5, descr=<ArrayP 8>)
p33 = new_with_vtable(ConstClass(W_IntObject))
p35 = new_with_vtable(ConstClass(W_IntObject))
p37 = new_with_vtable(38308720)
p39 = new_with_vtable(ConstClass(W_ListObject))
p41 = new_with_vtable(38380928)
+359: setfield_gc(p41, i14, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p12, p41, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+410: setfield_gc(p1, i25, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+421: setfield_gc(p27, 2, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_nlocals 112>)
+429: setfield_gc(p27, ConstPtr(ptr43), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+443: setfield_gc(p27, 19, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+451: setfield_gc(p27, p29, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+455: setfield_gc(p27, ConstPtr(ptr45), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+469: setfield_gc(p27, 3, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+480: setfield_gc(p27, 21, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_f_lineno 144>)
+490: setfield_gc(p27, p13, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+494: setfield_gc(p27, ConstPtr(ptr8), descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+508: setfield_gc(p33, 1, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+517: setarrayitem_gc(p31, 0, p33, descr=<ArrayP 8>)
+521: setarrayitem_gc(p31, 1, p35, descr=<ArrayP 8>)
+525: setfield_gc(p37, 1, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+533: setfield_gc(p39, ConstPtr(ptr52), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+541: setfield_gc(p39, ConstPtr(ptr53), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+555: setfield_gc(p37, p39, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+559: setarrayitem_gc(p31, 2, p37, descr=<ArrayP 8>)
+563: setfield_gc(p27, p31, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+567: p55 = call_assembler(p27, p12, descr=<Loop0>)
guard_not_forced(, descr=<Guard40>) [p0, p1, p12, p27, p55, p41, p2, p3, i5, i6]
+687: guard_no_exception(, descr=<Guard49>) [p0, p1, p12, p27, p55, p41, p2, p3, i5, i6]
+702: p56 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+713: guard_isnull(p56, descr=<Guard50>) [p0, p1, p12, p55, p27, p56, p41, p2, p3, i5, i6]
+722: i57 = getfield_gc(p12, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+726: setfield_gc(p27, ConstPtr(ptr58), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+741: i59 = int_is_true(i57)
guard_false(i59, descr=<Guard51>) [p0, p1, p55, p27, p12, p41, p2, p3, i5, i6]
+751: p60 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+755: p61 = getfield_gc(p27, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+759: i62 = getfield_gc(p27, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_escaped 148>)
setfield_gc(p12, p61, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+801: guard_false(i62, descr=<Guard52>) [p0, p1, p55, p60, p27, p12, p41, p2, p3, i5, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #46 INPLACE_ADD')
+810: setfield_gc(p41, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+825: guard_class(p55, ConstClass(W_IntObject), descr=<Guard53>) [p0, p1, p55, p2, p3, i5, i6]
+837: i65 = getfield_gc_pure(p55, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+841: i66 = int_add_ovf(i5, i65)
guard_no_overflow(, descr=<Guard54>) [p0, p1, p55, i66, p2, p3, i5, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #47 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #50 JUMP_FORWARD')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+857: i68 = int_add_ovf(i6, 1)
guard_no_overflow(, descr=<Guard55>) [p0, p1, i68, p2, p3, i66, None, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+874: guard_not_invalidated(, descr=<Guard56>) [p0, p1, p2, p3, i68, i66, None, None]
+874: i71 = getfield_raw(43780840, descr=<FieldS pypysig_long_struct.c_value 0>)
+882: i73 = int_lt(i71, 0)
guard_false(i73, descr=<Guard57>) [p0, p1, p2, p3, i68, i66, None, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+892: label(p1, p0, p2, p3, i66, i68, descr=TargetToken(140556656123584))
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+922: i75 = int_lt(i68, 10000)
guard_true(i75, descr=<Guard58>) [p0, p1, p2, p3, i68, i66]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+935: i77 = int_eq(i68, -9223372036854775808)
guard_false(i77, descr=<Guard59>) [p0, p1, i68, p2, p3, None, i66]
+954: i79 = int_mod(i68, 2)
+971: i81 = int_rshift(i79, 63)
+978: i82 = int_and(2, i81)
+987: i83 = int_add(i79, i82)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+990: i84 = int_is_true(i83)
guard_false(i84, descr=<Guard60>) [p0, p1, p2, p3, i83, i68, i66]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+1000: i86 = int_add_ovf(i66, 1)
guard_no_overflow(, descr=<Guard61>) [p0, p1, i86, p2, p3, None, i68, i66]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+1013: i88 = int_add(i68, 1)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+1024: guard_not_invalidated(, descr=<Guard62>) [p0, p1, p2, p3, i86, i88, None, None, None]
+1024: i90 = getfield_raw(43780840, descr=<FieldS pypysig_long_struct.c_value 0>)
+1032: i92 = int_lt(i90, 0)
guard_false(i92, descr=<Guard63>) [p0, p1, p2, p3, i86, i88, None, None, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+1042: jump(p1, p0, p2, p3, i86, i88, descr=TargetToken(140556656121584))
+1061: --end of the loop--
[d0e8abe8f9f] jit-log-opt-bridge}
[d0e8adedcd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a93a +0  E9A1010000
[d0e8adf23d5] jit-backend-dump}
[d0e8adf30f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579a9dd +0  E994010000
[d0e8adf4bad] jit-backend-dump}
[d0e8adf568d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579aea5 +0  E9F9030000
[d0e8adf6c77] jit-backend-dump}
[d0e8adf7631] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579aecd +0  E921040000
[d0e8adf8c51] jit-backend-dump}
[d0e8adf9689] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b1b5 +0  E966020000
[d0e8adfac61] jit-backend-dump}
[d0e8adfb5e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b24b +0  E968020000
[d0e8adfcaf7] jit-backend-dump}
[d0e9120bfcd] {jit-backend
[d0e913919c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b
[d0e913c0d91] jit-backend-dump}
[d0e913c2081] {jit-backend-addr
Loop 2 (<code object inlined_str_stuff, file 'source.py', line 40> #13 FOR_ITER) has address 7fd5e579b598 to 7fd5e579b953 (bootstrap 7fd5e579b562)
[d0e913c4781] jit-backend-addr}
[d0e913c58c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b594 +0  C0FEFFFF
[d0e913c76c1] jit-backend-dump}
[d0e913c8add] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b653 +0  FC020000
[d0e913ca157] jit-backend-dump}
[d0e913caccd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b65f +0  12030000
[d0e913cc3a1] jit-backend-dump}
[d0e913cce15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b66c +0  25030000
[d0e913ce351] jit-backend-dump}
[d0e913ced8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b680 +0  32030000
[d0e913d02c5] jit-backend-dump}
[d0e913d0cf1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b69a +0  3B030000
[d0e913d2143] jit-backend-dump}
[d0e913d2ccb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b6a3 +0  56030000
[d0e913d42fd] jit-backend-dump}
[d0e913d4e31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b6c2 +0  5A030000
[d0e913d6475] jit-backend-dump}
[d0e913d6ee9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b6d5 +0  67030000
[d0e913d840d] jit-backend-dump}
[d0e913d8db5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b6f3 +0  67030000
[d0e913da201] jit-backend-dump}
[d0e913dab8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b70a +0  6E030000
[d0e913e0f93] jit-backend-dump}
[d0e913e1fe3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b71f +0  96030000
[d0e913e36cf] jit-backend-dump}
[d0e913e40ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b75a +0  79030000
[d0e913e5601] jit-backend-dump}
[d0e913e5f67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b771 +0  7F030000
[d0e913e73d1] jit-backend-dump}
[d0e913e7d8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b7b3 +0  5B030000
[d0e913e9201] jit-backend-dump}
[d0e913e9bc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b81b +0  16030000
[d0e913eb229] jit-backend-dump}
[d0e913ebd03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b84d +0  01030000
[d0e913ed37d] jit-backend-dump}
[d0e913eddcd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b89a +0  F0020000
[d0e913ef1e3] jit-backend-dump}
[d0e913efb85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b8d8 +0  D0020000
[d0e913f0f9b] jit-backend-dump}
[d0e913f1925] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579b940 +0  8B020000
[d0e913f2dd1] jit-backend-dump}
[d0e913f4313] jit-backend}
[d0e913f5cb1] {jit-log-opt-loop
# Loop 2 : loop with 100 ops
[p0, p1]
+54: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+58: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+62: i4 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+70: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+74: i6 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+81: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+85: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+89: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+93: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+97: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+101: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+105: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+116: p20 = getarrayitem_gc(p8, 5, descr=<ArrayP 8>)
+127: p22 = getarrayitem_gc(p8, 6, descr=<ArrayP 8>)
+138: p24 = getarrayitem_gc(p8, 7, descr=<ArrayP 8>)
+142: p25 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+142: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, p20, p22, p24, descr=TargetToken(140556696702032))
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+235: guard_value(i6, 5, descr=<Guard64>) [i6, p1, p0, p2, p3, i4, p5, i7, p10, p12, p14, p16, p18, p20, p22, p24]
+245: guard_class(p18, 38308720, descr=<Guard65>) [p1, p0, p18, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+257: p28 = getfield_gc(p18, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+261: guard_nonnull(p28, descr=<Guard66>) [p1, p0, p18, p28, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+270: i29 = getfield_gc(p18, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+274: p30 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+278: guard_class(p30, 38488496, descr=<Guard67>) [p1, p0, p18, i29, p30, p28, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+290: p32 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+294: i33 = getfield_gc_pure(p32, descr=<FieldS tuple3.item0 8>)
+298: i34 = getfield_gc_pure(p32, descr=<FieldS tuple3.item1 16>)
+302: i35 = getfield_gc_pure(p32, descr=<FieldS tuple3.item2 24>)
+306: i37 = int_lt(i29, 0)
guard_false(i37, descr=<Guard68>) [p1, p0, p18, i29, i35, i34, i33, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+316: i38 = int_ge(i29, i35)
guard_false(i38, descr=<Guard69>) [p1, p0, p18, i29, i34, i33, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+325: i39 = int_mul(i29, i34)
+332: i40 = int_add(i33, i39)
+338: i42 = int_add(i29, 1)
+342: setfield_gc(p18, i42, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+346: guard_value(i4, 0, descr=<Guard70>) [i4, p1, p0, p2, p3, p5, p10, p12, p14, p16, p18, p22, p24, i40]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+356: guard_value(p3, ConstPtr(ptr44), descr=<Guard71>) [p1, p0, p3, p2, p5, p12, p14, p16, p18, p22, p24, i40]
+375: p45 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+386: guard_value(p45, ConstPtr(ptr46), descr=<Guard72>) [p1, p0, p45, p2, p5, p12, p14, p16, p18, p22, p24, i40]
+405: p47 = getfield_gc(p45, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+409: guard_value(p47, ConstPtr(ptr48), descr=<Guard73>) [p1, p0, p47, p45, p2, p5, p12, p14, p16, p18, p22, p24, i40]
+428: guard_not_invalidated(, descr=<Guard74>) [p1, p0, p45, p2, p5, p12, p14, p16, p18, p22, p24, i40]
+428: p50 = getfield_gc(ConstPtr(ptr49), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+436: guard_value(p50, ConstPtr(ptr51), descr=<Guard75>) [p1, p0, p50, p2, p5, p12, p14, p16, p18, p22, p24, i40]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+449: p53 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i40, descr=<Callr 8 i EF=3>)
+493: guard_no_exception(, descr=<Guard76>) [p1, p0, p53, p2, p5, p12, p14, p16, p18, p24, i40]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+508: p54 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+519: guard_class(p54, 38399200, descr=<Guard77>) [p1, p0, p54, p16, p2, p5, p12, p14, p18, p24, p53, i40]
+531: p56 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+535: i57 = getfield_gc(p56, descr=<FieldS list.length 8>)
+539: i59 = int_add(i57, 1)
+546: p60 = getfield_gc(p56, descr=<FieldP list.items 16>)
+546: i61 = arraylen_gc(p60, descr=<ArrayP 8>)
+546: call(ConstClass(_ll_list_resize_ge_trampoline__v717___simple_call__function__), p56, i59, descr=<Callv 0 ri EF=4>)
+582: guard_no_exception(, descr=<Guard78>) [p1, p0, i57, p53, p56, p2, p5, p12, p14, p16, p18, p24, None, i40]
+597: p64 = getfield_gc(p56, descr=<FieldP list.items 16>)
setarrayitem_gc(p64, i57, p53, descr=<ArrayP 8>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+683: i66 = getfield_raw(43780840, descr=<FieldS pypysig_long_struct.c_value 0>)
+691: i68 = int_lt(i66, 0)
guard_false(i68, descr=<Guard79>) [p1, p0, p2, p5, p12, p14, p16, p18, p24, None, i40]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+701: p69 = same_as(ConstPtr(ptr48))
+701: label(p0, p1, p2, p5, i40, p12, p14, p16, p18, p24, i42, i35, i34, i33, p56, descr=TargetToken(140556696702112))
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+731: i70 = int_ge(i42, i35)
guard_false(i70, descr=<Guard80>) [p1, p0, p18, i42, i34, i33, p2, p5, p12, p14, p16, p24, i40]
+751: i71 = int_mul(i42, i34)
+755: i72 = int_add(i33, i71)
+765: i73 = int_add(i42, 1)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+776: setfield_gc(p18, i73, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+787: guard_not_invalidated(, descr=<Guard81>) [p1, p0, p2, p5, p12, p14, p16, p18, p24, i72, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+787: p74 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i72, descr=<Callr 8 i EF=3>)
+813: guard_no_exception(, descr=<Guard82>) [p1, p0, p74, p2, p5, p12, p14, p16, p18, p24, i72, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+828: i75 = getfield_gc(p56, descr=<FieldS list.length 8>)
+839: i76 = int_add(i75, 1)
+846: p77 = getfield_gc(p56, descr=<FieldP list.items 16>)
+846: i78 = arraylen_gc(p77, descr=<ArrayP 8>)
+846: call(ConstClass(_ll_list_resize_ge_trampoline__v717___simple_call__function__), p56, i76, descr=<Callv 0 ri EF=4>)
+875: guard_no_exception(, descr=<Guard83>) [p1, p0, i75, p74, p56, p2, p5, p12, p14, p16, p18, p24, i72, None]
+890: p79 = getfield_gc(p56, descr=<FieldP list.items 16>)
setarrayitem_gc(p79, i75, p74, descr=<ArrayP 8>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+976: i80 = getfield_raw(43780840, descr=<FieldS pypysig_long_struct.c_value 0>)
+984: i81 = int_lt(i80, 0)
guard_false(i81, descr=<Guard84>) [p1, p0, p2, p5, p12, p14, p16, p18, p24, i72, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+994: jump(p0, p1, p2, p5, i72, p12, p14, p16, p18, p24, i73, i35, i34, i33, p56, descr=TargetToken(140556696702112))
+1009: --end of the loop--
[d0e914beb85] jit-log-opt-loop}
[d0e91ddd13d] {jit-backend
[d0e91e0341d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bbec +0  488B0425E00A9C024829E0483B0425E0EC4F01760D49BB63A379E5D57F000041FFD3554889E5534154415541564157488DA5000000004C8B7E404D0FB67C3F184983FF330F85000000004989FF4883C70148897E1848C74620000000004C897E28B80100000048890425107B540141BB503AF20041FFD3B801000000488D65D8415F415E415D415C5B5DC349BB00A079E5D57F000041FFD31D180355000000
[d0e91e0a4fd] jit-backend-dump}
[d0e91e0b193] {jit-backend-addr
Loop 3 (StrLiteralSearch at 11/51 [17, 8, 3, 1, 1, 1, 1, 51, 0, 19, 51, 1]) has address 7fd5e579bc22 to 7fd5e579bc77 (bootstrap 7fd5e579bbec)
[d0e91e0ceeb] jit-backend-addr}
[d0e91e0dc5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bc1e +0  70FFFFFF
[d0e91e0f6a5] jit-backend-dump}
[d0e91e1047f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bc32 +0  41000000
[d0e91e11bcb] jit-backend-dump}
[d0e91e12a71] jit-backend}
[d0e91e13d37] {jit-log-opt-loop
# Loop 3 : entry bridge with 10 ops
[i0, p1]
debug_merge_point(0, 'StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+54: p2 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+58: i3 = strgetitem(p2, i0)
+64: i5 = int_eq(i3, 51)
guard_true(i5, descr=<Guard85>) [i0, p1]
+74: i7 = int_add(i0, 1)
+81: setfield_gc(p1, i7, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+85: setfield_gc(p1, ConstPtr(ptr8), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+93: setfield_gc(p1, i0, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+97: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1879c40>)
+139: --end of the loop--
[d0e91e29451] jit-log-opt-loop}
[d0e9266372d] {jit-backend
[d0e9268c073] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bc8b +0  488DA50000000049BBB03107E8D57F00004D8B3B4983C70149BBB03107E8D57F00004D893B4883C7014C8B7E084C39FF0F8D000000004C8B76404D0FB6743E184983FE330F84000000004883C7014C39FF0F8C00000000B80000000048890425107B540141BB503AF20041FFD3B801000000488D65D8415F415E415D415C5B5DC349BB00A079E5D57F000041FFD31D18035600000049BB00A079E5D57F000041FFD31D18035700000049BB00A079E5D57F000041FFD31D180358000000
[d0e9268f9b9] jit-backend-dump}
[d0e9268ff35] {jit-backend-addr
bridge out of Guard 85 has address 7fd5e579bc8b to 7fd5e579bd0c
[d0e9269b5ef] jit-backend-addr}
[d0e9269bef1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bc8e +0  70FFFFFF
[d0e9269cc89] jit-backend-dump}
[d0e9269d493] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bcbd +0  4B000000
[d0e9269df29] jit-backend-dump}
[d0e9269e3d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bcd1 +0  4B000000
[d0e9269ed2f] jit-backend-dump}
[d0e9269f1a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bcde +0  52000000
[d0e9269fbbf] jit-backend-dump}
[d0e926a03a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bc32 +0  55000000
[d0e926a0ea5] jit-backend-dump}
[d0e926a1805] jit-backend}
[d0e926a21ab] {jit-log-opt-bridge
# bridge out of Guard 85 with 13 ops
[i0, p1]
+37: i3 = int_add(i0, 1)
+41: i4 = getfield_gc_pure(p1, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+45: i5 = int_lt(i3, i4)
guard_true(i5, descr=<Guard86>) [i3, p1]
debug_merge_point(0, 'StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+54: p6 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+58: i7 = strgetitem(p6, i3)
+64: i9 = int_eq(i7, 51)
guard_false(i9, descr=<Guard87>) [i3, p1]
+74: i11 = int_add(i3, 1)
+78: i12 = int_lt(i11, i4)
guard_false(i12, descr=<Guard88>) [i11, p1]
+87: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1879c40>)
+129: --end of the loop--
[d0e926aeccf] jit-log-opt-bridge}
[d0e929bf4d7] {jit-backend
[d0e929d10f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bd48 +0  488DA50000000049BBC83107E8D57F00004D8B3B4983C70149BBC83107E8D57F00004D893B4C8B7E404D0FB67C3F184983FF330F84000000004883C7014C8B7E084C39FF0F8C00000000B80000000048890425107B540141BB503AF20041FFD3B801000000488D65D8415F415E415D415C5B5DC349BB00A079E5D57F000041FFD31D18035900000049BB00A079E5D57F000041FFD31D18035A000000
[d0e929d4389] jit-backend-dump}
[d0e929d489d] {jit-backend-addr
bridge out of Guard 88 has address 7fd5e579bd48 to 7fd5e579bdbc
[d0e929d52eb] jit-backend-addr}
[d0e929d58ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bd4b +0  70FFFFFF
[d0e929d6415] jit-backend-dump}
[d0e929d6a3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bd7d +0  3B000000
[d0e929d75a1] jit-backend-dump}
[d0e929d7b23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bd8e +0  3E000000
[d0e929d858b] jit-backend-dump}
[d0e929d8b6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bcde +0  66000000
[d0e929d949b] jit-backend-dump}
[d0e929d9b33] jit-backend}
[d0e929da23b] {jit-log-opt-bridge
# bridge out of Guard 88 with 10 ops
[i0, p1]
debug_merge_point(0, 'StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+37: p2 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+41: i3 = strgetitem(p2, i0)
+47: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard89>) [i0, p1]
+57: i7 = int_add(i0, 1)
+61: i8 = getfield_gc_pure(p1, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+65: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard90>) [i7, p1]
+74: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1879c40>)
+116: --end of the loop--
[d0e929e3651] jit-log-opt-bridge}
[d0e92d4390b] {jit-backend
[d0e92d4e3fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bde4 +0  488DA50000000049BBE03107E8D57F0000498B334883C60149BBE03107E8D57F0000498933B80000000048890425107B540141BB503AF20041FFD3B801000000488D65D8415F415E415D415C5B5DC3
[d0e92d50c27] jit-backend-dump}
[d0e92d51189] {jit-backend-addr
bridge out of Guard 86 has address 7fd5e579bde4 to 7fd5e579be33
[d0e92d51acb] jit-backend-addr}
[d0e92d52073] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bde7 +0  70FFFFFF
[d0e92d52c5b] jit-backend-dump}
[d0e92d534d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bcbd +0  23010000
[d0e92d5af55] jit-backend-dump}
[d0e92d5b7c1] jit-backend}
[d0e92d5bf3f] {jit-log-opt-bridge
# bridge out of Guard 86 with 1 ops
[i0, p1]
+37: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1879c40>)
+79: --end of the loop--
[d0e92d60e07] jit-log-opt-bridge}
[d0e95d023e2] {jit-backend
[d0e96040dee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c
[d0e960a6f32] jit-backend-dump}
[d0e960a8528] {jit-backend-addr
Loop 4 (<code object inlined_str_stuff, file 'source.py', line 40> #44 FOR_ITER) has address 7fd5e579c04b to 7fd5e579cc54 (bootstrap 7fd5e579c015)
[d0e960aea44] jit-backend-addr}
[d0e960b00a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c047 +0  E0FDFFFF
[d0e960b2140] jit-backend-dump}
[d0e960b36be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c106 +0  4A0B0000
[d0e960b4de0] jit-backend-dump}
[d0e960b5908] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c11a +0  580B0000
[d0e960b6d96] jit-backend-dump}
[d0e960b775c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c127 +0  6B0B0000
[d0e960b8bc6] jit-backend-dump}
[d0e960b9592] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c13c +0  770B0000
[d0e960ba9fc] jit-backend-dump}
[d0e960bb3d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c14d +0  890B0000
[d0e960bcacc] jit-backend-dump}
[d0e960bd58e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c15f +0  9A0B0000
[d0e960beb3c] jit-backend-dump}
[d0e960bf4cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c171 +0  AA0B0000
[d0e960c0a56] jit-backend-dump}
[d0e960c13d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c184 +0  B70B0000
[d0e960c2838] jit-backend-dump}
[d0e960c31d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c19b +0  BE0B0000
[d0e960c4638] jit-backend-dump}
[d0e960c514e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c1b2 +0  C50B0000
[d0e960c67c8] jit-backend-dump}
[d0e960c75ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c1d2 +0  E20B0000
[d0e960c8ba4] jit-backend-dump}
[d0e960c9534] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c1fa +0  D80B0000
[d0e960ca9aa] jit-backend-dump}
[d0e960cb322] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c208 +0  E80B0000
[d0e960cc738] jit-backend-dump}
[d0e960cd17c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c21f +0  0B0C0000
[d0e960ce79c] jit-backend-dump}
[d0e960cf252] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c234 +0  140C0000
[d0e960d0776] jit-backend-dump}
[d0e960d1112] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c24e +0  190C0000
[d0e960d251c] jit-backend-dump}
[d0e960d2fe4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c356 +0  300B0000
[d0e960d441e] jit-backend-dump}
[d0e960d4d96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c365 +0  450B0000
[d0e960d61d6] jit-backend-dump}
[d0e960d6c98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c3fb +0  D30A0000
[d0e960d8264] jit-backend-dump}
[d0e960d8cd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c40a +0  E80A0000
[d0e960da262] jit-backend-dump}
[d0e960dabe6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c424 +0  F20A0000
[d0e960dc020] jit-backend-dump}
[d0e960dc980] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c44a +0  F00A0000
[d0e960dde14] jit-backend-dump}
[d0e960de774] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c457 +0  050B0000
[d0e960dfe0c] jit-backend-dump}
[d0e960e085c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c46b +0  130B0000
[d0e960e1e22] jit-backend-dump}
[d0e960e27a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c479 +0  290B0000
[d0e960e3c34] jit-backend-dump}
[d0e960e4648] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c4a6 +0  3F0B0000
[d0e960e5ae2] jit-backend-dump}
[d0e960e6442] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c4bc +0  4B0B0000
[d0e960e78d6] jit-backend-dump}
[d0e960e83d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c4d1 +0  5A0B0000
[d0e960edd8c] jit-backend-dump}
[d0e960eeb9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c4df +0  710B0000
[d0e960f033c] jit-backend-dump}
[d0e960f0e22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c4f6 +0  7E0B0000
[d0e960f2370] jit-backend-dump}
[d0e960f2d18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c510 +0  890B0000
[d0e960f41b8] jit-backend-dump}
[d0e960f4b5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c51a +0  A50B0000
[d0e960f60e4] jit-backend-dump}
[d0e960f6ba0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c524 +0  C20B0000
[d0e960f81ba] jit-backend-dump}
[d0e960f8c40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c537 +0  D50B0000
[d0e960fa0da] jit-backend-dump}
[d0e960faa64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c63c +0  F50A0000
[d0e960fbefe] jit-backend-dump}
[d0e960fc888] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c64b +0  0A0B0000
[d0e960fdd22] jit-backend-dump}
[d0e960fe862] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c654 +0  250B0000
[d0e960ffdec] jit-backend-dump}
[d0e961008f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c668 +0  340B0000
[d0e96101f10] jit-backend-dump}
[d0e961028d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c676 +0  460B0000
[d0e96103d6a] jit-backend-dump}
[d0e961047ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c6bf +0  370B0000
[d0e96105c78] jit-backend-dump}
[d0e96106644] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c6f1 +0  200B0000
[d0e96107bd4] jit-backend-dump}
[d0e961086ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c706 +0  260B0000
[d0e96109d6a] jit-backend-dump}
[d0e9610a82c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c717 +0  320B0000
[d0e9610bd86] jit-backend-dump}
[d0e9610c746] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c729 +0  3D0B0000
[d0e9610dbd4] jit-backend-dump}
[d0e9610e5a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c74f +0  330B0000
[d0e9610f9b0] jit-backend-dump}
[d0e96110370] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c766 +0  380B0000
[d0e96111ab0] jit-backend-dump}
[d0e961128f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c786 +0  510B0000
[d0e96113e86] jit-backend-dump}
[d0e96114834] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c790 +0  630B0000
[d0e96115c68] jit-backend-dump}
[d0e96116622] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c7a7 +0  6A0B0000
[d0e96117a50] jit-backend-dump}
[d0e961183ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c7bc +0  740B0000
[d0e9611981a] jit-backend-dump}
[d0e9611a2e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c7d5 +0  7B0B0000
[d0e9611b85a] jit-backend-dump}
[d0e9611c394] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c8e1 +0  8F0A0000
[d0e9611d810] jit-backend-dump}
[d0e9611e1d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c8f0 +0  A60A0000
[d0e9611f580] jit-backend-dump}
[d0e9611ff5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c986 +0  360A0000
[d0e961213c8] jit-backend-dump}
[d0e96121d76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c995 +0  4D0A0000
[d0e96123486] jit-backend-dump}
[d0e96123f72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c9af +0  590A0000
[d0e96125598] jit-backend-dump}
[d0e96125f58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c9d5 +0  590A0000
[d0e961273e6] jit-backend-dump}
[d0e96127d88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c9e2 +0  700A0000
[d0e9612ee20] jit-backend-dump}
[d0e9612fa56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c9f6 +0  800A0000
[d0e961310f4] jit-backend-dump}
[d0e96131bda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579ca04 +0  970A0000
[d0e961331dc] jit-backend-dump}
[d0e96133d6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579ca31 +0  AE0A0000
[d0e961351bc] jit-backend-dump}
[d0e96135b76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579ca47 +0  BA0A0000
[d0e96137010] jit-backend-dump}
[d0e961379a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579ca5c +0  C90A0000
[d0e96138e3a] jit-backend-dump}
[d0e961397be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579ca6a +0  E00A0000
[d0e9613aeda] jit-backend-dump}
[d0e9613b9ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579ca81 +0  ED0A0000
[d0e9613ceba] jit-backend-dump}
[d0e9613d8c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579ca9b +0  F80A0000
[d0e9613ed5c] jit-backend-dump}
[d0e9613f734] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579caa5 +0  140B0000
[d0e96140bc2] jit-backend-dump}
[d0e9614158e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579caaf +0  310B0000
[d0e96142a22] jit-backend-dump}
[d0e96143574] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579cac2 +0  440B0000
[d0e96144bf4] jit-backend-dump}
[d0e96145710] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579cbc7 +0  640A0000
[d0e96146c82] jit-backend-dump}
[d0e96147642] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579cbd6 +0  7A0A0000
[d0e96148ad0] jit-backend-dump}
[d0e96149496] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579cbdf +0  960A0000
[d0e9614a92a] jit-backend-dump}
[d0e9614b3a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579cbf3 +0  A60A0000
[d0e9614cade] jit-backend-dump}
[d0e9614d5a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579cc01 +0  B80A0000
[d0e9614eb06] jit-backend-dump}
[d0e9614f5d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579cc48 +0  AB0A0000
[d0e96150a7a] jit-backend-dump}
[d0e96151fd4] jit-backend}
[d0e96153a32] {jit-log-opt-loop
# Loop 4 : loop with 351 ops
[p0, p1]
+54: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+58: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+62: i4 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+70: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+74: i6 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+81: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+85: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+89: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+93: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+97: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+101: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+105: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+116: p20 = getarrayitem_gc(p8, 5, descr=<ArrayP 8>)
+127: p22 = getarrayitem_gc(p8, 6, descr=<ArrayP 8>)
+138: p24 = getarrayitem_gc(p8, 7, descr=<ArrayP 8>)
+142: p25 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+142: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, p20, p22, p24, descr=TargetToken(140556696704672))
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+235: guard_value(i6, 4, descr=<Guard97>) [i6, p1, p0, p2, p3, i4, p5, i7, p10, p12, p14, p16, p18, p20, p22, p24]
+245: guard_class(p16, 38308720, descr=<Guard98>) [p1, p0, p16, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+265: p28 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+269: guard_nonnull(p28, descr=<Guard99>) [p1, p0, p16, p28, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+278: i29 = getfield_gc(p16, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+282: p30 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+286: guard_class(p30, 38399200, descr=<Guard100>) [p1, p0, p16, i29, p30, p28, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+299: p32 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+303: i33 = getfield_gc(p32, descr=<FieldS list.length 8>)
+307: i34 = uint_ge(i29, i33)
guard_false(i34, descr=<Guard101>) [p1, p0, p16, i29, i33, p32, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+316: p35 = getfield_gc(p32, descr=<FieldP list.items 16>)
+320: p36 = getarrayitem_gc(p35, i29, descr=<ArrayP 8>)
+325: guard_nonnull(p36, descr=<Guard102>) [p1, p0, p16, i29, p36, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+334: i38 = int_add(i29, 1)
+338: setfield_gc(p16, i38, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+342: guard_value(i4, 0, descr=<Guard103>) [i4, p1, p0, p2, p3, p5, p10, p12, p14, p16, p20, p22, p24, p36]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+352: guard_value(p3, ConstPtr(ptr40), descr=<Guard104>) [p1, p0, p3, p2, p5, p10, p12, p16, p20, p22, p24, p36]
+371: p41 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+375: guard_value(p41, ConstPtr(ptr42), descr=<Guard105>) [p1, p0, p41, p2, p5, p10, p12, p16, p20, p22, p24, p36]
+394: p43 = getfield_gc(p41, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+398: guard_value(p43, ConstPtr(ptr44), descr=<Guard106>) [p1, p0, p43, p41, p2, p5, p10, p12, p16, p20, p22, p24, p36]
+417: guard_not_invalidated(, descr=<Guard107>) [p1, p0, p41, p2, p5, p10, p12, p16, p20, p22, p24, p36]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+417: p46 = getfield_gc(ConstPtr(ptr45), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+430: guard_value(p46, ConstPtr(ptr47), descr=<Guard108>) [p1, p0, p46, p2, p5, p10, p12, p16, p20, p22, p24, p36]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+449: p49 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+472: p50 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+476: i51 = force_token()
+476: p52 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+480: guard_isnull(p52, descr=<Guard109>) [p1, p0, p49, p52, p2, p5, p10, p12, p16, p50, i51, p36]
+489: i53 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+493: i54 = int_is_zero(i53)
guard_true(i54, descr=<Guard110>) [p1, p0, p49, p2, p5, p10, p12, p16, p50, i51, p36]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #0 LOAD_GLOBAL')
+503: guard_not_invalidated(, descr=<Guard111>) [p1, p0, p49, p2, p5, p10, p12, p16, p50, i51, p36]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #9 CALL_FUNCTION')
+503: i56 = getfield_gc(ConstPtr(ptr55), descr=<FieldS list.length 8>)
+516: i58 = int_ge(0, i56)
guard_true(i58, descr=<Guard112>) [p1, p0, p49, i56, p2, p5, p10, p12, p16, p50, i51, p36]
+526: i59 = force_token()
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #0 LOAD_GLOBAL')
+526: p61 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+534: guard_value(p61, ConstPtr(ptr62), descr=<Guard113>) [p1, p0, p49, p61, p2, p5, p10, p12, p16, i59, p50, i51, p36]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #3 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #6 LOAD_CONST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #9 BINARY_SUBSCR')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #10 CALL_FUNCTION')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #13 BUILD_TUPLE')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #16 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #19 BINARY_ADD')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #20 STORE_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #23 LOAD_GLOBAL')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #26 LOOKUP_METHOD')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #29 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #32 CALL_METHOD')
+547: p64 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+560: guard_class(p64, ConstClass(ObjectDictStrategy), descr=<Guard114>) [p1, p0, p49, p64, p2, p5, p10, p12, p16, i59, p50, i51, p36]
+573: p66 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+586: i67 = force_token()
p69 = new_array(3, descr=<ArrayP 8>)
p71 = new_with_vtable(38380928)
+678: setfield_gc(p71, i59, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p71, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+725: setfield_gc(p0, i67, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+736: setarrayitem_gc(p69, 0, ConstPtr(ptr73), descr=<ArrayP 8>)
+744: setarrayitem_gc(p69, 1, ConstPtr(ptr75), descr=<ArrayP 8>)
+758: setarrayitem_gc(p69, 2, ConstPtr(ptr77), descr=<ArrayP 8>)
+772: i79 = call_may_force(ConstClass(hash_tuple), p69, descr=<Calli 8 r EF=6>)
guard_not_forced(, descr=<Guard91>) [p1, p0, p49, p66, i79, p71, p2, p5, p10, p12, p16, i51, p69, p50, p36]
+837: guard_no_exception(, descr=<Guard115>) [p1, p0, p49, p66, i79, p71, p2, p5, p10, p12, p16, i51, p69, p50, p36]
+852: i80 = force_token()
p82 = new_with_vtable(38290296)
+922: setfield_gc(p0, i80, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+933: setfield_gc(p82, p69, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+944: i84 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v531___simple_call__function_l), p66, p82, i79, descr=<Calli 8 rri EF=6>)
guard_not_forced(, descr=<Guard92>) [p1, p0, p49, p82, i84, p66, p71, p2, p5, p10, p12, p16, i51, p50, p36]
+1002: guard_no_exception(, descr=<Guard116>) [p1, p0, p49, p82, i84, p66, p71, p2, p5, p10, p12, p16, i51, p50, p36]
+1017: i86 = int_and(i84, -9223372036854775808)
+1033: i87 = int_is_true(i86)
guard_false(i87, descr=<Guard117>) [p1, p0, p49, p82, i84, p66, p71, p2, p5, p10, p12, p16, i51, p50, p36]
+1043: p88 = getfield_gc(p66, descr=<FieldP dicttable.entries 24>)
+1054: p89 = getinteriorfield_gc(p88, i84, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+1063: guard_nonnull_class(p89, 38536280, descr=<Guard118>) [p1, p0, p49, p82, p89, p71, p2, p5, p10, p12, p16, i51, p50, p36]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #35 STORE_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #38 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #41 LOAD_CONST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #44 COMPARE_OP')
+1081: i92 = instance_ptr_eq(ConstPtr(ptr91), p89)
guard_false(i92, descr=<Guard119>) [p1, p0, p49, p71, p2, p5, p10, p12, p16, p89, p82, i51, p50, p36]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #50 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #53 RETURN_VALUE')
+1094: p93 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+1105: guard_isnull(p93, descr=<Guard120>) [p1, p0, p49, p89, p93, p71, p2, p5, p10, p12, p16, None, p82, i51, p50, p36]
+1114: i95 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+1118: i96 = int_is_true(i95)
guard_false(i96, descr=<Guard121>) [p1, p0, p49, p89, p71, p2, p5, p10, p12, p16, None, p82, i51, p50, p36]
+1128: p97 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #12 LOOKUP_METHOD')
+1128: setfield_gc(p71, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #18 CALL_METHOD')
+1143: guard_not_invalidated(, descr=<Guard122>) [p1, p0, p49, p2, p5, p10, p12, p16, p89, None, i51, p50, p36]
+1143: i99 = strlen(p36)
+1154: i101 = int_gt(9223372036854775807, i99)
guard_true(i101, descr=<Guard123>) [p1, p0, p49, p89, p36, p2, p5, p10, p12, p16, None, None, i51, p50, None]
+1173: p102 = getfield_gc_pure(p89, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+1177: i103 = getfield_gc_pure(p89, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+1181: i105 = getarrayitem_gc_pure(p102, 0, descr=<ArrayS 8>)
+1185: i107 = int_eq(i105, 17)
guard_true(i107, descr=<Guard124>) [p1, p0, p49, p89, p2, p5, p10, p12, p16, i99, i103, p102, None, None, i51, p50, p36]
+1195: i109 = getarrayitem_gc_pure(p102, 2, descr=<ArrayS 8>)
+1199: i111 = int_and(i109, 1)
+1206: i112 = int_is_true(i111)
guard_true(i112, descr=<Guard125>) [p1, p0, p49, p89, i109, p2, p5, p10, p12, p16, i99, i103, p102, None, None, i51, p50, p36]
+1216: i114 = getarrayitem_gc_pure(p102, 5, descr=<ArrayS 8>)
+1220: i116 = int_gt(i114, 1)
guard_false(i116, descr=<Guard126>) [p1, p0, p49, p89, p2, p5, p10, p12, p16, i99, i103, p102, None, None, i51, p50, p36]
+1230: i118 = getarrayitem_gc_pure(p102, 1, descr=<ArrayS 8>)
+1234: i120 = int_add(i118, 1)
+1238: i121 = getarrayitem_gc_pure(p102, i120, descr=<ArrayS 8>)
+1243: i123 = int_eq(i121, 19)
guard_true(i123, descr=<Guard127>) [p1, p0, p49, p89, i120, p2, p5, p10, p12, p16, i99, i103, p102, None, None, i51, p50, p36]
+1253: i125 = int_add(i120, 1)
+1260: i126 = getarrayitem_gc_pure(p102, i125, descr=<ArrayS 8>)
+1265: i128 = int_add(i120, 2)
+1269: i130 = int_lt(0, i99)
guard_true(i130, descr=<Guard128>) [p1, p0, p49, p89, i126, i128, p2, p5, p10, p12, p16, i99, i103, p102, None, None, i51, p50, p36]
+1279: guard_value(i128, 11, descr=<Guard129>) [p1, p0, p49, p89, i126, i128, p102, p2, p5, p10, p12, p16, i99, i103, None, None, None, i51, p50, p36]
+1289: guard_value(i126, 51, descr=<Guard130>) [p1, p0, p49, p89, i126, p102, p2, p5, p10, p12, p16, i99, i103, None, None, None, i51, p50, p36]
+1299: guard_value(p102, ConstPtr(ptr133), descr=<Guard131>) [p1, p0, p49, p89, p102, p2, p5, p10, p12, p16, i99, i103, None, None, None, i51, p50, p36]
debug_merge_point(2, 'StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+1318: i134 = force_token()
p136 = new_with_vtable(38342680)
p137 = new_with_vtable(38380928)
+1402: setfield_gc(p137, i51, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p137, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+1449: setfield_gc(p0, i134, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+1460: setfield_gc(p136, i99, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+1464: setfield_gc(p136, i103, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+1468: setfield_gc(p136, p36, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+1472: setfield_gc(p136, ConstPtr(ptr133), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
+1486: i138 = call_assembler(0, p136, descr=<Loop3>)
guard_not_forced(, descr=<Guard93>) [p1, p0, p49, p89, p136, i138, p137, p2, p5, p10, p12, p16, p50, p36]
+1579: guard_no_exception(, descr=<Guard132>) [p1, p0, p49, p89, p136, i138, p137, p2, p5, p10, p12, p16, p50, p36]
+1594: guard_false(i138, descr=<Guard133>) [p1, p0, p49, p89, p136, p137, p2, p5, p10, p12, p16, p50, p36]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #21 RETURN_VALUE')
+1603: p139 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+1614: guard_isnull(p139, descr=<Guard134>) [p1, p0, p49, p139, p137, p2, p5, p10, p12, p16, p50, p36]
+1623: i140 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+1627: i141 = int_is_true(i140)
guard_false(i141, descr=<Guard135>) [p1, p0, p49, p137, p2, p5, p10, p12, p16, p50, p36]
+1637: p142 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p49, p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+1677: setfield_gc(p137, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+1692: guard_not_invalidated(, descr=<Guard136>) [p1, p0, p2, p5, p10, p12, p16, None, p36]
+1692: i145 = getfield_raw(43780840, descr=<FieldS pypysig_long_struct.c_value 0>)
+1700: i147 = int_lt(i145, 0)
guard_false(i147, descr=<Guard137>) [p1, p0, p2, p5, p10, p12, p16, None, p36]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1710: label(p0, p1, p2, p5, p10, p12, p36, p16, i140, p49, p50, descr=TargetToken(140556696703072))
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1740: p148 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+1751: guard_nonnull(p148, descr=<Guard138>) [p1, p0, p16, p148, p2, p5, p10, p12, p36]
+1760: i149 = getfield_gc(p16, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+1764: p150 = getfield_gc(p148, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+1768: guard_class(p150, 38399200, descr=<Guard139>) [p1, p0, p16, i149, p150, p148, p2, p5, p10, p12, p36]
+1781: p151 = getfield_gc(p148, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+1785: i152 = getfield_gc(p151, descr=<FieldS list.length 8>)
+1789: i153 = uint_ge(i149, i152)
guard_false(i153, descr=<Guard140>) [p1, p0, p16, i149, i152, p151, p2, p5, p10, p12, p36]
+1798: p154 = getfield_gc(p151, descr=<FieldP list.items 16>)
+1802: p155 = getarrayitem_gc(p154, i149, descr=<ArrayP 8>)
+1807: guard_nonnull(p155, descr=<Guard141>) [p1, p0, p16, i149, p155, p2, p5, p10, p12, p36]
+1816: i156 = int_add(i149, 1)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+1820: p157 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+1831: setfield_gc(p16, i156, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+1835: guard_value(p157, ConstPtr(ptr42), descr=<Guard142>) [p1, p0, p157, p2, p5, p10, p12, p16, p155, None]
+1854: p158 = getfield_gc(p157, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1858: guard_value(p158, ConstPtr(ptr44), descr=<Guard143>) [p1, p0, p158, p157, p2, p5, p10, p12, p16, p155, None]
+1877: guard_not_invalidated(, descr=<Guard144>) [p1, p0, p157, p2, p5, p10, p12, p16, p155, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+1877: p159 = getfield_gc(ConstPtr(ptr45), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1890: guard_value(p159, ConstPtr(ptr47), descr=<Guard145>) [p1, p0, p159, p2, p5, p10, p12, p16, p155, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+1909: i160 = force_token()
+1909: i161 = int_is_zero(i140)
guard_true(i161, descr=<Guard146>) [p1, p0, p49, p2, p5, p10, p12, p16, p50, i160, p155, None]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #0 LOAD_GLOBAL')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #9 CALL_FUNCTION')
+1919: i162 = getfield_gc(ConstPtr(ptr55), descr=<FieldS list.length 8>)
+1932: i163 = int_ge(0, i162)
guard_true(i163, descr=<Guard147>) [p1, p0, p49, i162, p2, p5, p10, p12, p16, p50, i160, p155, None]
+1942: i164 = force_token()
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #0 LOAD_GLOBAL')
+1942: p165 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1950: guard_value(p165, ConstPtr(ptr62), descr=<Guard148>) [p1, p0, p49, p165, p2, p5, p10, p12, p16, i164, p50, i160, p155, None]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #3 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #6 LOAD_CONST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #9 BINARY_SUBSCR')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #10 CALL_FUNCTION')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #13 BUILD_TUPLE')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #16 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #19 BINARY_ADD')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #20 STORE_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #23 LOAD_GLOBAL')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #26 LOOKUP_METHOD')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #29 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #32 CALL_METHOD')
+1963: p166 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1976: guard_class(p166, ConstClass(ObjectDictStrategy), descr=<Guard149>) [p1, p0, p49, p166, p2, p5, p10, p12, p16, i164, p50, i160, p155, None]
+1988: p167 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+2001: i168 = force_token()
p169 = new_array(3, descr=<ArrayP 8>)
p170 = new_with_vtable(38380928)
+2093: setfield_gc(p170, i164, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p170, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+2144: setfield_gc(p0, i168, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2148: setarrayitem_gc(p169, 0, ConstPtr(ptr73), descr=<ArrayP 8>)
+2156: setarrayitem_gc(p169, 1, ConstPtr(ptr75), descr=<ArrayP 8>)
+2170: setarrayitem_gc(p169, 2, ConstPtr(ptr174), descr=<ArrayP 8>)
+2184: i175 = call_may_force(ConstClass(hash_tuple), p169, descr=<Calli 8 r EF=6>)
guard_not_forced(, descr=<Guard94>) [p1, p0, p49, p167, i175, p170, p2, p5, p10, p12, p16, p169, p50, i160, p155]
+2256: guard_no_exception(, descr=<Guard150>) [p1, p0, p49, p167, i175, p170, p2, p5, p10, p12, p16, p169, p50, i160, p155]
+2271: i176 = force_token()
p177 = new_with_vtable(38290296)
+2341: setfield_gc(p0, i176, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2352: setfield_gc(p177, p169, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+2363: i178 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v531___simple_call__function_l), p167, p177, i175, descr=<Calli 8 rri EF=6>)
guard_not_forced(, descr=<Guard95>) [p1, p0, p49, p177, i178, p167, p170, p2, p5, p10, p12, p16, p155, p50, i160]
+2421: guard_no_exception(, descr=<Guard151>) [p1, p0, p49, p177, i178, p167, p170, p2, p5, p10, p12, p16, p155, p50, i160]
+2436: i179 = int_and(i178, -9223372036854775808)
+2452: i180 = int_is_true(i179)
guard_false(i180, descr=<Guard152>) [p1, p0, p49, p177, i178, p167, p170, p2, p5, p10, p12, p16, p155, p50, i160]
+2462: p181 = getfield_gc(p167, descr=<FieldP dicttable.entries 24>)
+2473: p182 = getinteriorfield_gc(p181, i178, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+2482: guard_nonnull_class(p182, 38536280, descr=<Guard153>) [p1, p0, p49, p177, p182, p170, p2, p5, p10, p12, p16, p155, p50, i160]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #35 STORE_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #38 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #41 LOAD_CONST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #44 COMPARE_OP')
+2500: i183 = instance_ptr_eq(ConstPtr(ptr91), p182)
guard_false(i183, descr=<Guard154>) [p1, p0, p49, p170, p2, p5, p10, p12, p16, p177, p182, p155, p50, i160]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #50 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 229> #53 RETURN_VALUE')
+2513: p184 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+2524: guard_isnull(p184, descr=<Guard155>) [p1, p0, p49, p182, p184, p170, p2, p5, p10, p12, p16, p177, None, p155, p50, i160]
+2533: i185 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+2537: i186 = int_is_true(i185)
guard_false(i186, descr=<Guard156>) [p1, p0, p49, p182, p170, p2, p5, p10, p12, p16, p177, None, p155, p50, i160]
+2547: p187 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #12 LOOKUP_METHOD')
+2547: setfield_gc(p170, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #18 CALL_METHOD')
+2562: guard_not_invalidated(, descr=<Guard157>) [p1, p0, p49, p2, p5, p10, p12, p16, None, p182, p155, p50, i160]
+2562: i189 = strlen(p155)
+2573: i191 = int_gt(9223372036854775807, i189)
guard_true(i191, descr=<Guard158>) [p1, p0, p49, p182, p155, p2, p5, p10, p12, p16, None, None, None, p50, i160]
+2592: p192 = getfield_gc_pure(p182, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+2596: i193 = getfield_gc_pure(p182, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+2600: i194 = getarrayitem_gc_pure(p192, 0, descr=<ArrayS 8>)
+2604: i195 = int_eq(i194, 17)
guard_true(i195, descr=<Guard159>) [p1, p0, p49, p182, p2, p5, p10, p12, p16, p192, i189, i193, None, None, p155, p50, i160]
+2614: i196 = getarrayitem_gc_pure(p192, 2, descr=<ArrayS 8>)
+2618: i197 = int_and(i196, 1)
+2625: i198 = int_is_true(i197)
guard_true(i198, descr=<Guard160>) [p1, p0, p49, p182, i196, p2, p5, p10, p12, p16, p192, i189, i193, None, None, p155, p50, i160]
+2635: i199 = getarrayitem_gc_pure(p192, 5, descr=<ArrayS 8>)
+2639: i200 = int_gt(i199, 1)
guard_false(i200, descr=<Guard161>) [p1, p0, p49, p182, p2, p5, p10, p12, p16, p192, i189, i193, None, None, p155, p50, i160]
+2649: i201 = getarrayitem_gc_pure(p192, 1, descr=<ArrayS 8>)
+2653: i202 = int_add(i201, 1)
+2657: i203 = getarrayitem_gc_pure(p192, i202, descr=<ArrayS 8>)
+2662: i204 = int_eq(i203, 19)
guard_true(i204, descr=<Guard162>) [p1, p0, p49, p182, i202, p2, p5, p10, p12, p16, p192, i189, i193, None, None, p155, p50, i160]
+2672: i205 = int_add(i202, 1)
+2679: i206 = getarrayitem_gc_pure(p192, i205, descr=<ArrayS 8>)
+2684: i207 = int_add(i202, 2)
+2688: i209 = int_lt(0, i189)
guard_true(i209, descr=<Guard163>) [p1, p0, p49, p182, i206, i207, p2, p5, p10, p12, p16, p192, i189, i193, None, None, p155, p50, i160]
+2698: guard_value(i207, 11, descr=<Guard164>) [p1, p0, p49, p182, i206, i207, p192, p2, p5, p10, p12, p16, None, i189, i193, None, None, p155, p50, i160]
+2708: guard_value(i206, 51, descr=<Guard165>) [p1, p0, p49, p182, i206, p192, p2, p5, p10, p12, p16, None, i189, i193, None, None, p155, p50, i160]
+2718: guard_value(p192, ConstPtr(ptr133), descr=<Guard166>) [p1, p0, p49, p182, p192, p2, p5, p10, p12, p16, None, i189, i193, None, None, p155, p50, i160]
debug_merge_point(2, 'StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+2737: i210 = force_token()
p211 = new_with_vtable(38342680)
p212 = new_with_vtable(38380928)
+2821: setfield_gc(p212, i160, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p212, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+2868: setfield_gc(p0, i210, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2879: setfield_gc(p211, i189, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+2883: setfield_gc(p211, i193, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+2887: setfield_gc(p211, p155, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+2891: setfield_gc(p211, ConstPtr(ptr133), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
+2905: i213 = call_assembler(0, p211, descr=<Loop3>)
guard_not_forced(, descr=<Guard96>) [p1, p0, p49, p182, p211, i213, p212, p2, p5, p10, p12, p16, p155, p50]
+2998: guard_no_exception(, descr=<Guard167>) [p1, p0, p49, p182, p211, i213, p212, p2, p5, p10, p12, p16, p155, p50]
+3013: guard_false(i213, descr=<Guard168>) [p1, p0, p49, p182, p211, p212, p2, p5, p10, p12, p16, p155, p50]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #21 RETURN_VALUE')
+3022: p214 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+3033: guard_isnull(p214, descr=<Guard169>) [p1, p0, p49, p214, p212, p2, p5, p10, p12, p16, p155, p50]
+3042: i215 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+3046: i216 = int_is_true(i215)
guard_false(i216, descr=<Guard170>) [p1, p0, p49, p212, p2, p5, p10, p12, p16, p155, p50]
+3056: p217 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p49, p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+3094: setfield_gc(p212, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+3109: guard_not_invalidated(, descr=<Guard171>) [p1, p0, p2, p5, p10, p12, p16, p155, None]
+3109: i219 = getfield_raw(43780840, descr=<FieldS pypysig_long_struct.c_value 0>)
+3117: i220 = int_lt(i219, 0)
guard_false(i220, descr=<Guard172>) [p1, p0, p2, p5, p10, p12, p16, p155, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+3127: jump(p0, p1, p2, p5, p10, p12, p155, p16, i215, p49, p50, descr=TargetToken(140556696703072))
+3135: --end of the loop--
[d0e963e4a62] jit-log-opt-loop}
[d0e96518f8f] {jit-backend
[d0e9653113d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579d712 +0  488DA50000000049BB283207E8D57F00004D8B3B4983C70149BB283207E8D57F00004D893B4C8B7E404D0FB67C3F184983FF330F84000000004883C7014C8B7E084C39FF0F8C00000000B80000000048890425107B540141BB503AF20041FFD3B801000000488D65D8415F415E415D415C5B5DC349BB00A079E5D57F000041FFD31D1803AD00000049BB00A079E5D57F000041FFD31D1803AE000000
[d0e9653458b] jit-backend-dump}
[d0e96534ac7] {jit-backend-addr
bridge out of Guard 90 has address 7fd5e579d712 to 7fd5e579d786
[d0e965356dd] jit-backend-addr}
[d0e96535ccb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579d715 +0  70FFFFFF
[d0e96536869] jit-backend-dump}
[d0e96536f8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579d747 +0  3B000000
[d0e96537ad3] jit-backend-dump}
[d0e9653804d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579d758 +0  3E000000
[d0e96538a67] jit-backend-dump}
[d0e965392f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bd8e +0  80190000
[d0e96539bc5] jit-backend-dump}
[d0e9653a3cd] jit-backend}
[d0e9653abf7] {jit-log-opt-bridge
# bridge out of Guard 90 with 10 ops
[i0, p1]
debug_merge_point(0, 'StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+37: p2 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+41: i3 = strgetitem(p2, i0)
+47: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard173>) [i0, p1]
+57: i7 = int_add(i0, 1)
+61: i8 = getfield_gc_pure(p1, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+65: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard174>) [i7, p1]
+74: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1879c40>)
+116: --end of the loop--
[d0e96544d3d] jit-log-opt-bridge}
[d0e96a79d8b] {jit-backend
[d0e96aae5cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579d7c
[d0e96ab43b9] jit-backend-dump}
[d0e96ab496f] {jit-backend-addr
bridge out of Guard 133 has address 7fd5e579d7c6 to 7fd5e579d904
[d0e96ab5515] jit-backend-addr}
[d0e96ab5c29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579d7c9 +0  E0FDFFFF
[d0e96ab6851] jit-backend-dump}
[d0e96ab708b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579d7fb +0  05010000
[d0e96ab7b87] jit-backend-dump}
[d0e96ab80d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579d809 +0  1B010000
[d0e96ab89df] jit-backend-dump}
[d0e96ab8e97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579d84b +0  19010000
[d0e96ab9751] jit-backend-dump}
[d0e96ab9ecb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579c654 +0  6E110000
[d0e96aba79d] jit-backend-dump}
[d0e96abb0f9] jit-backend}
[d0e96abba99] {jit-log-opt-bridge
# bridge out of Guard 133 with 19 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy2/lib-python/2.7/re.py'. line 139> #21 RETURN_VALUE')
+37: p13 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+48: guard_isnull(p13, descr=<Guard175>) [p0, p1, p2, p13, p5, p6, p7, p8, p9, p10, p11, p12, p4, p3]
+57: i14 = getfield_gc(p2, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+61: i15 = int_is_true(i14)
guard_false(i15, descr=<Guard176>) [p0, p1, p2, p5, p6, p7, p8, p9, p10, p11, p12, p4, p3]
+71: p16 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p2, p11, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+104: setfield_gc(p5, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+119: guard_not_invalidated(, descr=<Guard177>) [p0, p1, p6, p7, p8, p9, p10, None, p12, None, None]
+119: i20 = getfield_raw(43780840, descr=<FieldS pypysig_long_struct.c_value 0>)
+127: i22 = int_lt(i20, 0)
guard_false(i22, descr=<Guard178>) [p0, p1, p6, p7, p8, p9, p10, None, p12, None, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
p24 = new_with_vtable(ConstClass(W_StringObject))
+200: setfield_gc(p24, p12, descr=<FieldP pypy.objspace.std.stringobject.W_StringObject.inst__value 8>)
+211: jump(p1, p0, p6, ConstPtr(ptr25), 0, p7, 4, 44, p8, p9, p24, p10, ConstPtr(ptr29), ConstPtr(ptr30), ConstPtr(ptr30), ConstPtr(ptr30), descr=TargetToken(140556696704672))
+318: --end of the loop--
[d0e96ad1975] jit-log-opt-bridge}
[d0e96b06a95] {jit-backend
[d0e96b14677] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579d985 +0  488DA50000000049BB583207E8D57F00004D8B3B4983C70149BB583207E8D57F00004D893B4989FF4883C70148897E1848C74620000000004C897E28B80100000048890425107B540141BB503AF20041FFD3B801000000488D65D8415F415E415D415C5B5DC3
[d0e96b1ee49] jit-backend-dump}
[d0e96b1f53f] {jit-backend-addr
bridge out of Guard 87 has address 7fd5e579d985 to 7fd5e579d9eb
[d0e96b1ffb1] jit-backend-addr}
[d0e96b20623] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579d988 +0  70FFFFFF
[d0e96b211b9] jit-backend-dump}
[d0e96b2187b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bcd1 +0  B01C0000
[d0e96b22165] jit-backend-dump}
[d0e96b227eb] jit-backend}
[d0e96b22f75] {jit-log-opt-bridge
# bridge out of Guard 87 with 5 ops
[i0, p1]
+37: i3 = int_add(i0, 1)
+44: setfield_gc(p1, i3, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+48: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+56: setfield_gc(p1, i0, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+60: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1879c40>)
+102: --end of the loop--
[d0e96b2931f] jit-log-opt-bridge}
[d0e96c4ce97] {jit-backend
[d0e96c5a3fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579d9eb +0  488DA50000000049BB703207E8D57F00004D8B3B4983C70149BB703207E8D57F00004D893B4989FF4883C70148897E1848C74620000000004C897E28B80100000048890425107B540141BB503AF20041FFD3B801000000488D65D8415F415E415D415C5B5DC3
[d0e96c5ce8b] jit-backend-dump}
[d0e96c5d3f3] {jit-backend-addr
bridge out of Guard 89 has address 7fd5e579d9eb to 7fd5e579da51
[d0e96c5de39] jit-backend-addr}
[d0e96c5e427] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579d9ee +0  70FFFFFF
[d0e96c5efcf] jit-backend-dump}
[d0e96c5f62b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fd5e579bd7d +0  6A1C0000
[d0e96c5ff59] jit-backend-dump}
[d0e96c605b3] jit-backend}
[d0e96c60d53] {jit-log-opt-bridge
# bridge out of Guard 89 with 5 ops
[i0, p1]
+37: i3 = int_add(i0, 1)
+44: setfield_gc(p1, i3, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+48: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+56: setfield_gc(p1, i0, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+60: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1879c40>)
+102: --end of the loop--
[d0e96c663ab] jit-log-opt-bridge}
[d0e96cb4901] {jit-backend-counts
TargetToken(140556656117424):4647
TargetToken(140556656117504):9292
TargetToken(140556656121504):201
TargetToken(140556656121584):4468
bridge 16:4446
bridge 33:4268
bridge 33:4268
TargetToken(140556696702032):1
TargetToken(140556696702112):1938
bridge 85:2882
bridge 88:2074
bridge 86:158
TargetToken(140556696704672):527
TargetToken(140556696703072):1411
bridge 90:1420
bridge 133:150
bridge 87:50
bridge 89:7
[d0e96cb9b99] jit-backend-counts}
