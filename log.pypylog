[230587c52823] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1c000 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000584889452058488945104889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[230587c63451] jit-backend-dump}
[230587c691fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1c085 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000488B1C25C802190348C70425C00219030000000048C70425C80219030000000048895D38584889452058488945104889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[230587c6bb6a] jit-backend-dump}
[230587c707c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1c12e +0  4889455848894D60488955684889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BBC069120141FFD3488B4558488B4D60488B5568488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[230587c72437] jit-backend-dump}
[230587c744c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1c191 +0  4889455848894D60488955684889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB006B120141FFD3488B442408F6400480488B4558488B4D60488B5568488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[230587c7619e] jit-backend-dump}
[230587c78f6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1c1fd +0  4883EC384889442408F20F114424184889EF48895C24284C89642430488B1C25C80219034C8B2425C002190348C70425C00219030000000048C70425C80219030000000041BBC069120141FFD3F20F10442418488B44240848891C25C80219034C892425C0021903488B5C24284C8B642430488D642438C3
[230587c7ad96] jit-backend-dump}
[230587c7d700] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1c
[230587c81da4] jit-backend-dump}
[230587c82f7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1c
[230587c85915] jit-backend-dump}
[230587c86b77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1c595 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000F20F1185C0000000F20F118DC8000000F20F1195D0000000F20F119DD8000000F20F11A5E0000000F20F11ADE8000000F20F11B5F0000000F20F11BDF8000000F2440F118500010000F2440F118D08010000F2440F119510010000F2440F119D18010000F2440F11A520010000F2440F11AD28010000F2440F11B530010000488B1C25C802190348C70425C00219030000000048C70425C80219030000000048895D38584889452058488945104889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[230587c95952] jit-backend-dump}
[230587c97358] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1c6bd
[230587c9a7a5] jit-backend-dump}
[230587c9bec1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1c81e
[230587c9f1fd] jit-backend-dump}
[230587ca01cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1c988 +0  488B0425C802190348C70425C00219030000000048C70425C8021903000000004889453848C745108064B5014889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[230587ca195f] jit-backend-dump}
[230587ca72e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1c9e
[230587cab5d6] jit-backend-dump}
[230587cad4e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1cbd6 +0  4889E74883EC0841BB9018210141FFD34883C408488B0425C00219034885C07501C34883C40849BB88C9C11F5C7F000041FFE3
[230587caea2c] jit-backend-dump}
[230587caef92] {jit-backend-counts
[230587caf375] jit-backend-counts}
[23058821c205] {jit-backend
[23058846e9f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1cce
[23058848539c] jit-backend-dump}
[230588485ca1] {jit-backend-addr
Loop 0 (<code object f, file 'source.py', line 4> #9 LOAD_FAST) has address 0x7f5c1fc1cd30 to 0x7f5c1fc1ce7b (bootstrap 0x7f5c1fc1cce0)
[23058848737f] jit-backend-addr}
[230588487cdd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1cdd6 +0  A1000000
[230588488b56] jit-backend-dump}
[230588489145] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1cde8 +0  B4000000
[230588489b2e] jit-backend-dump}
[230588489f5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1cdf2 +0  CF000000
[23058848a904] jit-backend-dump}
[23058848ad26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ce05 +0  E1000000
[23058848b640] jit-backend-dump}
[23058848ba76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ce16 +0  F5000000
[23058848c346] jit-backend-dump}
[23058848c8a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ce2d +0  28010000
[23058848d18c] jit-backend-dump}
[23058848d5c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ce59 +0  21010000
[23058848dec2] jit-backend-dump}
[23058848e346] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ce6f +0  55010000
[23058848ec39] jit-backend-dump}
[23058848f80a] jit-backend}
[230588491ca6] {jit-log-opt-loop
# Loop 0 (<code object f, file 'source.py', line 4> #9 LOAD_FAST) : loop with 54 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p16 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+168: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, descr=TargetToken(140033647686320))
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
+240: guard_value(i7, 1, descr=<Guard7f5c1fd429f8>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15]
+250: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard7f5c1fd433d0>) [p1, p0, p11, p2, p3, p4, i5, p6, p13, p15]
+268: guard_value(i5, 0, descr=<Guard7f5c1fd43358>) [i5, p1, p0, p2, p3, p4, p6, p11, p15]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #12 LOAD_CONST')
+278: guard_value(p4, ConstPtr(ptr20), descr=<Guard7f5c1fd432e0>) [p1, p0, p4, p2, p3, p6, p11, p15]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #15 COMPARE_OP')
+297: i21 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+301: i23 = int_lt(i21, 1103)
guard_true(i23, descr=<Guard7f5c1fd43268>) [p1, p0, p11, p2, p3, p6]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #21 LOAD_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #24 LOAD_CONST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #27 INPLACE_ADD')
+314: i25 = int_add(i21, 1)
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #28 STORE_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #31 JUMP_ABSOLUTE')
+319: guard_not_invalidated(descr=<Guard7f5c1fd431f0>) [p1, p0, p2, p3, p6, i25]
+319: i27 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+327: i29 = int_lt(i27, 0)
guard_false(i29, descr=<Guard7f5c1fd43178>) [p1, p0, p2, p3, p6, i25]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
+337: label(p0, p1, p2, p3, p6, i25, descr=TargetToken(140033647686408))
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #12 LOAD_CONST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #15 COMPARE_OP')
+368: i30 = int_lt(i25, 1103)
guard_true(i30, descr=<Guard7f5c1fd43100>) [p1, p0, p2, p3, p6, i25]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #21 LOAD_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #24 LOAD_CONST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #27 INPLACE_ADD')
+381: i31 = int_add(i25, 1)
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #28 STORE_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #31 JUMP_ABSOLUTE')
+385: guard_not_invalidated(descr=<Guard7f5c1fd43088>) [p1, p0, p2, p3, p6, i31, None]
+385: i33 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+393: i34 = int_lt(i33, 0)
guard_false(i34, descr=<Guard7f5c1fd43010>) [p1, p0, p2, p3, p6, i31, None]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
+403: jump(p0, p1, p2, p3, p6, i31, descr=TargetToken(140033647686408))
+411: --end of the loop--
[230588512b10] jit-log-opt-loop}
[2305887fbbbc] {jit-backend
[23058892381b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d
[23058893b3d8] jit-backend-dump}
[23058893be12] {jit-backend-addr
Loop 1 (<code object inlined_call, file 'source.py', line 14> #9 LOAD_FAST) has address 0x7f5c1fc1d150 to 0x7f5c1fc1d32b (bootstrap 0x7f5c1fc1d100)
[23058893d792] jit-backend-addr}
[23058893e191] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d1f6 +0  31010000
[23058893f084] jit-backend-dump}
[23058893f9d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d208 +0  44010000
[2305889405b9] jit-backend-dump}
[230588940a6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d212 +0  5F010000
[230588941535] jit-backend-dump}
[230588941a65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d225 +0  71010000
[230588942454] jit-backend-dump}
[23058894288b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d236 +0  85010000
[230588943260] jit-backend-dump}
[2305889436ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d24d +0  93010000
[230588944065] jit-backend-dump}
[230588944560] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d264 +0  A1010000
[230588944ee8] jit-backend-dump}
[230588945500] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d2b8 +0  97010000
[230588945f60] jit-backend-dump}
[2305889463c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d2c6 +0  AE010000
[230588946d92] jit-backend-dump}
[23058894726f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d2dd +0  E1010000
[230588947c20] jit-backend-dump}
[230588948089] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d309 +0  DA010000
[2305889489f3] jit-backend-dump}
[230588948e86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d31f +0  0E020000
[2305889497f6] jit-backend-dump}
[23058894a593] jit-backend}
[23058894beea] {jit-log-opt-loop
# Loop 1 (<code object inlined_call, file 'source.py', line 14> #9 LOAD_FAST) : loop with 77 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p16 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+168: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, descr=TargetToken(140033647687464))
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
+240: guard_value(i7, 1, descr=<Guard7f5c1fd6f1f0>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15]
+250: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard7f5c1fd84d40>) [p1, p0, p11, p2, p3, p4, i5, p6, p13, p15]
+268: guard_value(i5, 0, descr=<Guard7f5c1fd84cc8>) [i5, p1, p0, p2, p3, p4, p6, p11, p15]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #12 LOAD_CONST')
+278: guard_value(p4, ConstPtr(ptr20), descr=<Guard7f5c1fd84c50>) [p1, p0, p4, p2, p3, p6, p11, p15]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #15 COMPARE_OP')
+297: i21 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+301: i23 = int_lt(i21, 1103)
guard_true(i23, descr=<Guard7f5c1fd84bd8>) [p1, p0, p11, p2, p3, p6]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #21 LOAD_GLOBAL')
+314: p24 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+318: guard_value(p24, ConstPtr(ptr25), descr=<Guard7f5c1fd84b60>) [p1, p0, p24, p2, p3, p6, p11]
+337: p26 = getfield_gc(p24, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+341: guard_value(p26, ConstPtr(ptr27), descr=<Guard7f5c1fd84ae8>) [p1, p0, p26, p24, p2, p3, p6, p11]
+360: guard_not_invalidated(descr=<Guard7f5c1fd84a70>) [p1, p0, p24, p2, p3, p6, p11]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #24 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #27 CALL_FUNCTION')
+360: p29 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+424: p30 = getfield_gc(p29, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+428: p31 = force_token()
+431: p32 = getfield_gc(p29, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+435: guard_isnull(p32, descr=<Guard7f5c1fd849f8>) [p1, p0, p29, p32, p2, p3, p6, p11, p31, p30]
+444: i33 = getfield_gc(p29, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+448: i34 = int_is_zero(i33)
guard_true(i34, descr=<Guard7f5c1fd84980>) [p1, p0, p29, p2, p3, p6, p11, p31, p30]
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #0 LOAD_FAST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #3 LOAD_CONST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #6 BINARY_ADD')
+458: i36 = int_add(i21, 1)
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #7 RETURN_VALUE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #30 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #33 JUMP_ABSOLUTE')
+463: guard_not_invalidated(descr=<Guard7f5c1fd84908>) [p1, p0, p2, p3, p6, i36, None, None]
+463: i39 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+471: i41 = int_lt(i39, 0)
guard_false(i41, descr=<Guard7f5c1fd84890>) [p1, p0, p2, p3, p6, i36, None, None]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
+481: p42 = same_as(ConstPtr(ptr27))
+481: label(p0, p1, p2, p3, p6, i36, descr=TargetToken(140033647687552))
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #12 LOAD_CONST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #15 COMPARE_OP')
+512: i43 = int_lt(i36, 1103)
guard_true(i43, descr=<Guard7f5c1fd84818>) [p1, p0, p2, p3, p6, i36]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #21 LOAD_GLOBAL')
+525: guard_not_invalidated(descr=<Guard7f5c1fd847a0>) [p1, p0, p2, p3, p6, i36]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #24 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #27 CALL_FUNCTION')
+525: p44 = force_token()
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #0 LOAD_FAST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #3 LOAD_CONST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #6 BINARY_ADD')
+525: i45 = int_add(i36, 1)
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #7 RETURN_VALUE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #30 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #33 JUMP_ABSOLUTE')
+529: i46 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+537: i47 = int_lt(i46, 0)
guard_false(i47, descr=<Guard7f5c1fd84728>) [p1, p0, p2, p3, p6, i45, None]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
+547: jump(p0, p1, p2, p3, p6, i45, descr=TargetToken(140033647687552))
+555: --end of the loop--
[2305889955f6] jit-log-opt-loop}
[2305889b471c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d268 +0  E9C1010000
[2305889b64ed] jit-backend-dump}
[2305889b6c05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d2cf +0  E9C9010000
[2305889b77a6] jit-backend-dump}
[2305889b7bf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d30d +0  E9FA010000
[2305889b87c0] jit-backend-dump}
[230588d6c246] {jit-backend
[230588e769ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d
[230588ed281a] jit-backend-dump}
[230588ed386c] {jit-backend-addr
Loop 2 (<code object uninlined_call, file 'source.py', line 21> #19 FOR_ITER) has address 0x7f5c1fc1d6b8 to 0x7f5c1fc1d897 (bootstrap 0x7f5c1fc1d668)
[230588ed7ace] jit-backend-addr}
[230588ed8bcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d76d +0  26010000
[230588eda1fd] jit-backend-dump}
[230588eda898] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d779 +0  3F010000
[230588edbe82] jit-backend-dump}
[230588edc5c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d786 +0  57010000
[230588edcf83] jit-backend-dump}
[230588edd3a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d79b +0  67010000
[230588ede403] jit-backend-dump}
[230588ede848] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d7b5 +0  72010000
[230588edf13b] jit-backend-dump}
[230588edf557] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d7be +0  8E010000
[230588ee058e] jit-backend-dump}
[230588ee09b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d7dd +0  94010000
[230588ee12ac] jit-backend-dump}
[230588ee16dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d7ef +0  A7010000
[230588ee22d7] jit-backend-dump}
[230588ee2afd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d802 +0  B9010000
[230588ee3700] jit-backend-dump}
[230588ee474c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d810 +0  D0010000
[230588ee504e] jit-backend-dump}
[230588ee5d0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d822 +0  08020000
[230588ee6611] jit-backend-dump}
[230588ee6a60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d850 +0  FF010000
[230588ee79d0] jit-backend-dump}
[230588ee8457] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d872 +0  02020000
[230588ee8ef9] jit-backend-dump}
[230588ee96e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d884 +0  3A020000
[230588eea120] jit-backend-dump}
[230588eec4f8] jit-backend}
[230588ef2086] {jit-log-opt-loop
# Loop 2 (<code object uninlined_call, file 'source.py', line 21> #19 FOR_ITER) : loop with 74 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+183: p20 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+183: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, p19, descr=TargetToken(140033647688080))
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+255: guard_value(i7, 3, descr=<Guard7f5c1fd84ea8>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17, p19]
+265: guard_class(p15, 25719440, descr=<Guard7f5c1fd94890>) [p1, p0, p15, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+277: p23 = getfield_gc(p15, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+281: guard_nonnull(p23, descr=<Guard7f5c1fd947a0>) [p1, p0, p15, p23, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+290: i24 = getfield_gc(p15, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+294: p25 = getfield_gc(p23, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+298: guard_class(p25, 26050592, descr=<Guard7f5c1fd94728>) [p1, p0, p15, i24, p25, p23, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+311: p27 = getfield_gc(p23, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+315: i28 = getfield_gc_pure(p27, descr=<FieldS tuple3.item0 8>)
+319: i29 = getfield_gc_pure(p27, descr=<FieldS tuple3.item1 16>)
+323: i30 = getfield_gc_pure(p27, descr=<FieldS tuple3.item2 24>)
+327: i32 = int_lt(i24, 0)
guard_false(i32, descr=<Guard7f5c1fd946b0>) [p1, p0, p15, i24, i30, i29, i28, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+337: i33 = int_ge(i24, i30)
guard_false(i33, descr=<Guard7f5c1fd94638>) [p1, p0, p15, i24, i29, i28, p2, p3, p4, i5, p6, p11, p13, p17, p19]
+346: i34 = int_mul(i24, i29)
+353: i35 = int_add(i28, i34)
+359: i37 = int_add(i24, 1)
+363: setfield_gc(p15, i37, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+367: guard_value(i5, 0, descr=<Guard7f5c1fd945c0>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, p19, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
+377: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard7f5c1fd94548>) [p1, p0, p11, p2, p3, p4, p6, p15, p19, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
+395: guard_value(p4, ConstPtr(ptr40), descr=<Guard7f5c1fd944d0>) [p1, p0, p4, p2, p3, p6, p11, p15, p19, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+414: i41 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+418: i43 = int_add_ovf(i41, 1)
guard_no_overflow(descr=<Guard7f5c1fd94458>) [p1, p0, p11, i43, p2, p3, p6, p15, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+428: guard_not_invalidated(descr=<Guard7f5c1fd943e0>) [p1, p0, p2, p3, p6, p15, i43, i35]
+428: i45 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+436: i47 = int_lt(i45, 0)
guard_false(i47, descr=<Guard7f5c1fd94368>) [p1, p0, p2, p3, p6, p15, i43, i35]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+446: label(p0, p1, p2, p3, p6, i43, i35, p15, i37, i30, i29, i28, descr=TargetToken(140033647688168))
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+483: i48 = int_ge(i37, i30)
guard_false(i48, descr=<Guard7f5c1fd942f0>) [p1, p0, p15, i37, i29, i28, p2, p3, p6, i43, i35]
+492: i49 = int_mul(i37, i29)
+499: i50 = int_add(i28, i49)
+505: i51 = int_add(i37, 1)
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+509: setfield_gc(p15, i51, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+513: i52 = int_add_ovf(i43, 1)
guard_no_overflow(descr=<Guard7f5c1fd94278>) [p1, p0, i52, p2, p3, p6, p15, i50, i43, None]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+526: guard_not_invalidated(descr=<Guard7f5c1fd94200>) [p1, p0, p2, p3, p6, p15, i52, i50, None, None]
+526: i54 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+534: i55 = int_lt(i54, 0)
guard_false(i55, descr=<Guard7f5c1fd94188>) [p1, p0, p2, p3, p6, p15, i52, i50, None, None]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+544: jump(p0, p1, p2, p3, p6, i52, i50, p15, i51, i30, i29, i28, descr=TargetToken(140033647688168))
+559: --end of the loop--
[230588fa6ce3] jit-log-opt-loop}
[2305893ba1d3] {jit-backend
[23058947f3b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1dc
[230589489b4a] jit-backend-dump}
[23058948a2e7] {jit-backend-addr
Loop 3 (<code object bridge, file 'source.py', line 27> #15 LOAD_FAST) has address 0x7f5c1fc1dc58 to 0x7f5c1fc1de77 (bootstrap 0x7f5c1fc1dc08)
[23058948b8a8] jit-backend-addr}
[23058948c054] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1dd02 +0  71010000
[23058948cd6b] jit-backend-dump}
[23058948d318] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1dd14 +0  84010000
[23058948dd55] jit-backend-dump}
[23058948e1df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1dd1e +0  9F010000
[230589498778] jit-backend-dump}
[230589498c88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1dd31 +0  B1010000
[2305894995a2] jit-backend-dump}
[2305894999ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1dd42 +0  C5010000
[23058949a2e9] jit-backend-dump}
[23058949a72b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1dd55 +0  D7010000
[23058949aff8] jit-backend-dump}
[23058949b449] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1dd8d +0  C4010000
[23058949bd80] jit-backend-dump}
[23058949c1d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1dd9f +0  D7010000
[23058949cad7] jit-backend-dump}
[23058949cf31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ddad +0  EE010000
[23058949d7ee] jit-backend-dump}
[23058949ddcb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ddca +0  1B020000
[23058949e6cd] jit-backend-dump}
[23058949eb2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ddf6 +0  14020000
[23058949f44d] jit-backend-dump}
[23058949f854] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1de09 +0  26020000
[2305894a01f3] jit-backend-dump}
[2305894a0638] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1de40 +0  14020000
[2305894a0eea] jit-backend-dump}
[2305894a12eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1de51 +0  28020000
[2305894a1b97] jit-backend-dump}
[2305894a201e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1de6e +0  55020000
[2305894a2973] jit-backend-dump}
[2305894a33b8] jit-backend}
[2305894a42a6] {jit-log-opt-loop
# Loop 3 (<code object bridge, file 'source.py', line 27> #15 LOAD_FAST) : loop with 93 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p18 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+172: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, descr=TargetToken(140033647688784))
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+244: guard_value(i7, 2, descr=<Guard7f5c1fd94980>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17]
+254: guard_nonnull_class(p13, ConstClass(W_IntObject), descr=<Guard7f5c1fd959e8>) [p1, p0, p13, p2, p3, p4, i5, p6, p11, p15, p17]
+272: guard_value(i5, 0, descr=<Guard7f5c1fd95970>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p17]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
+282: guard_value(p4, ConstPtr(ptr22), descr=<Guard7f5c1fd958f8>) [p1, p0, p4, p2, p3, p6, p11, p13, p17]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+301: i23 = getfield_gc_pure(p13, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+305: i25 = int_lt(i23, 10000)
guard_true(i25, descr=<Guard7f5c1fd95880>) [p1, p0, p13, p2, p3, p6, p11]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+318: i27 = int_eq(i23, -9223372036854775808)
guard_false(i27, descr=<Guard7f5c1fd95808>) [p1, p0, p13, i23, p2, p3, p6, p11]
+337: i29 = int_mod(i23, 2)
+364: i31 = int_rshift(i29, 63)
+371: i32 = int_and(2, i31)
+380: i33 = int_add(i29, i32)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+383: i34 = int_is_true(i33)
guard_false(i34, descr=<Guard7f5c1fd95790>) [p1, p0, p2, p3, p6, p11, p13, i33]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
+393: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard7f5c1fd95718>) [p1, p0, p11, p2, p3, p6, p13, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+411: i37 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+415: i39 = int_add_ovf(i37, 1)
guard_no_overflow(descr=<Guard7f5c1fd956a0>) [p1, p0, p11, i39, p2, p3, p6, p13, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+425: i41 = int_add(i23, 1)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+436: guard_not_invalidated(descr=<Guard7f5c1fd95628>) [p1, p0, p2, p3, p6, i41, i39, None]
+436: i43 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+444: i45 = int_lt(i43, 0)
guard_false(i45, descr=<Guard7f5c1fd955b0>) [p1, p0, p2, p3, p6, i41, i39, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+454: label(p0, p1, p2, p3, p6, i39, i41, descr=TargetToken(140033647688872))
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+485: i46 = int_lt(i41, 10000)
guard_true(i46, descr=<Guard7f5c1fd95538>) [p1, p0, p2, p3, p6, i41, i39]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+498: i47 = int_eq(i41, -9223372036854775808)
guard_false(i47, descr=<Guard7f5c1fd954c0>) [p1, p0, i41, p2, p3, p6, None, i39]
+517: i48 = int_mod(i41, 2)
+544: i49 = int_rshift(i48, 63)
+551: i50 = int_and(2, i49)
+559: i51 = int_add(i48, i50)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+562: i52 = int_is_true(i51)
guard_false(i52, descr=<Guard7f5c1fd95448>) [p1, p0, p2, p3, p6, i51, i41, i39]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+572: i53 = int_add_ovf(i39, 1)
guard_no_overflow(descr=<Guard7f5c1fd953d0>) [p1, p0, i53, p2, p3, p6, None, i41, i39]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+589: i54 = int_add(i41, 1)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+600: guard_not_invalidated(descr=<Guard7f5c1fd95358>) [p1, p0, p2, p3, p6, i53, i54, None, None, None]
+600: i55 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+608: i56 = int_lt(i55, 0)
guard_false(i56, descr=<Guard7f5c1fd952e0>) [p1, p0, p2, p3, p6, i53, i54, None, None, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+618: jump(p0, p1, p2, p3, p6, i53, i54, descr=TargetToken(140033647688872))
+623: --end of the loop--
[2305894edfe2] jit-log-opt-loop}
[2305895ae455] {jit-backend
[23058963bda8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e
[230589642385] jit-backend-dump}
[230589642d27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e134 +0  22000000
[2305896439e3] jit-backend-dump}
[230589643e58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e13f +0  22000000
[2305896447f7] jit-backend-dump}
[230589644cdd] {jit-backend-addr
bridge out of Guard 0x7f5c1fd942f0 has address 0x7f5c1fc1e130 to 0x7f5c1fc1e33e
[230589645a78] jit-backend-addr}
[230589645fef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e199 +0  A1010000
[230589646941] jit-backend-dump}
[230589646d78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e1a2 +0  BD010000
[230589647662] jit-backend-dump}
[230589647dac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1d850 +0  DC080000
[23058964869f] jit-backend-dump}
[23058964902a] jit-backend}
[230589649b54] {jit-log-opt-bridge
# bridge out of Guard 7f5c1fd942f0 with 28 ops
[p0, p1, p2, i3, i4, i5, p6, p7, p8, i9, i10]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #38 POP_BLOCK')
+76: p11 = getfield_gc_pure(p8, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+87: i12 = getfield_gc_pure(p8, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+91: setfield_gc(p2, ConstPtr(ptr13), descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+99: guard_value(i12, 2, descr=<Guard7f5c1fd95c40>) [p0, p1, i12, p6, p7, p11, i10, i9]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #39 LOAD_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #42 RETURN_VALUE')
+109: guard_isnull(p11, descr=<Guard7f5c2296e098>) [p0, p1, p11, p6, p7, i10, i9]
+118: p15 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+129: p16 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
p18 = new_with_vtable(ConstClass(W_IntObject))
+193: setfield_gc(p1, 1, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_frame_finished_execution 141>)
setfield_gc(p1, p6, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
setfield_gc(p1, p7, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
setfield_gc(p1, ConstPtr(ptr20), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+306: setfield_gc(p1, 0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+314: setfield_gc(p1, ConstPtr(ptr22), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+322: setfield_gc(p1, 2, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+330: setfield_gc(p1, 42, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
setarrayitem_gc(p15, 0, p18, descr=<ArrayP 8>)
p27 = new_with_vtable(ConstClass(W_IntObject))
+382: setfield_gc(p27, i10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
setarrayitem_gc(p15, 1, p27, descr=<ArrayP 8>)
+425: setarrayitem_gc(p15, 2, ConstPtr(ptr30), descr=<ArrayP 8>)
+433: setarrayitem_gc(p15, 3, ConstPtr(ptr32), descr=<ArrayP 8>)
+441: setarrayitem_gc(p15, 4, ConstPtr(ptr32), descr=<ArrayP 8>)
+449: setfield_gc(p18, i9, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+453: finish(p18, descr=<DoneWithThisFrameDescrRef object at 0x1ea9920>)
+526: --end of the loop--
[23058966a2b4] jit-log-opt-bridge}
[230589ae6ce5] {jit-backend
[230589c5404d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e
[230589c706d9] jit-backend-dump}
[230589c714e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e56c +0  26000000
[230589c72607] jit-backend-dump}
[230589c72ba8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e577 +0  26000000
[230589c735c1] jit-backend-dump}
[230589c73b24] {jit-backend-addr
bridge out of Guard 0x7f5c1fd95448 has address 0x7f5c1fc1e568 to 0x7f5c1fc1ea92
[230589c749b2] jit-backend-addr}
[230589c75234] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e5ce +0  C0040000
[230589c75bdf] jit-backend-dump}
[230589c76166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e5e5 +0  CE040000
[230589c76b37] jit-backend-dump}
[230589c770ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e62b +0  D2040000
[230589c779fb] jit-backend-dump}
[230589c77e26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e639 +0  E9040000
[230589c787aa] jit-backend-dump}
[230589c78cd5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e64e +0  1E050000
[230589c79665] jit-backend-dump}
[230589c79a63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e660 +0  31050000
[230589c7a37a] jit-backend-dump}
[230589c7a784] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e918 +0  9E020000
[230589c7b08c] jit-backend-dump}
[230589c7b493] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e927 +0  B4020000
[230589c7bdb5] jit-backend-dump}
[230589c7c1d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e93b +0  C5020000
[230589c7cab8] jit-backend-dump}
[230589c7cec5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e958 +0  CD020000
[230589c7d7b8] jit-backend-dump}
[230589c7dbb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e989 +0  C1020000
[230589c80948] jit-backend-dump}
[230589c80ea2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e9a4 +0  CB020000
[230589c81803] jit-backend-dump}
[230589c81c0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e9b8 +0  DC020000
[230589c824f7] jit-backend-dump}
[230589c828fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e9c9 +0  F0020000
[230589c83218] jit-backend-dump}
[230589c842c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e9db +0  28030000
[230589c84be2] jit-backend-dump}
[230589c84fef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ea06 +0  22030000
[230589c858c8] jit-backend-dump}
[230589c85cdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ea19 +0  34030000
[230589c865ee] jit-backend-dump}
[230589c86a01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ea50 +0  22030000
[230589c872d9] jit-backend-dump}
[230589c8772e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ea61 +0  36030000
[230589c88036] jit-backend-dump}
[230589c8847b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ea7e +0  63030000
[230589c88d59] jit-backend-dump}
[230589c89532] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1de40 +0  24070000
[230589c89e46] jit-backend-dump}
[230589c8ab5a] jit-backend}
[230589c8be49] {jit-log-opt-bridge
# bridge out of Guard 7f5c1fd95448 with 137 ops
[p0, p1, p2, p3, p4, i5, i6, i7]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #37 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #40 LOAD_GLOBAL')
+76: p8 = getfield_gc(p1, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+87: guard_value(p8, ConstPtr(ptr9), descr=<Guard7f5c2296e278>) [p0, p1, p8, p2, p3, p4, i7, i6]
+106: p10 = getfield_gc(p8, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+110: guard_value(p10, ConstPtr(ptr11), descr=<Guard7f5c22991358>) [p0, p1, p10, p8, p2, p3, p4, i7, i6]
+129: guard_not_invalidated(descr=<Guard7f5c229912e0>) [p0, p1, p8, p2, p3, p4, i7, i6]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #43 CALL_FUNCTION')
+129: p13 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+179: p14 = getfield_gc(p13, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+183: p15 = force_token()
+186: p16 = getfield_gc(p13, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+190: guard_isnull(p16, descr=<Guard7f5c22991268>) [p0, p1, p13, p16, p2, p3, p4, p14, p15, i7, i6]
+199: i17 = getfield_gc(p13, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+203: i18 = int_is_zero(i17)
guard_true(i18, descr=<Guard7f5c229911f0>) [p0, p1, p13, p2, p3, p4, p14, p15, i7, i6]
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #0 LOAD_CONST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #3 STORE_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #6 SETUP_LOOP')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #9 LOAD_GLOBAL')
+213: guard_not_invalidated(descr=<Guard7f5c22991178>) [p0, p1, p13, p2, p3, p4, p14, p15, i7, i6]
+213: p20 = getfield_gc(ConstPtr(ptr19), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+221: guard_value(p20, ConstPtr(ptr21), descr=<Guard7f5c22991100>) [p0, p1, p13, p20, p2, p3, p4, p14, p15, i7, i6]
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #12 LOAD_CONST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #15 CALL_FUNCTION')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #18 GET_ITER')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+234: i23 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+242: i25 = int_lt(i23, 0)
guard_false(i25, descr=<Guard7f5c22991088>) [p0, p1, p13, p2, p3, p4, p14, p15, i7, i6]
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+252: p26 = force_token()
p28 = new_with_vtable(25799520)
p30 = new_array(5, descr=<ArrayP 8>)
p32 = new_with_vtable(ConstClass(W_IntObject))
p34 = new_with_vtable(ConstClass(W_IntObject))
p36 = new_with_vtable(25719440)
p38 = new_with_vtable(ConstClass(W_ListObject))
p40 = new_array(0, descr=<ArrayP 8>)
p42 = new_with_vtable(25703224)
+427: setfield_gc(p42, p15, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p13, p42, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p1, p26, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+495: setfield_gc(p28, ConstPtr(ptr43), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+509: setfield_gc(p28, 19, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+517: setfield_gc(p28, p14, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+521: setfield_gc(p32, 1, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+530: setarrayitem_gc(p30, 0, p32, descr=<ArrayP 8>)
+534: setarrayitem_gc(p30, 1, p34, descr=<ArrayP 8>)
+538: setfield_gc(p38, ConstPtr(ptr48), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+546: setfield_gc(p38, ConstPtr(ptr49), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+560: setfield_gc(p36, p38, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+564: setfield_gc(p36, 1, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+572: setarrayitem_gc(p30, 2, p36, descr=<ArrayP 8>)
+576: setfield_gc(p28, p30, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+580: setfield_gc(p28, 21, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_f_lineno 136>)
+590: setfield_gc(p28, ConstPtr(ptr53), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+604: setfield_gc(p28, p40, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+608: setfield_gc(p28, ConstPtr(ptr9), descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+622: setfield_gc(p28, 3, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
p55 = call_assembler(p28, p13, descr=<Loop2>)
guard_not_forced(descr=<Guard7f5c2298eca0>) [p0, p1, p13, p28, p55, p42, p2, p3, p4, i7, i6]
+948: keepalive(p28)
+948: guard_no_exception(descr=<Guard7f5c22991010>) [p0, p1, p13, p28, p55, p42, p2, p3, p4, i7, i6]
+963: p56 = getfield_gc(p13, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+974: guard_isnull(p56, descr=<Guard7f5c22990f98>) [p0, p1, p55, p13, p28, p56, p42, p2, p3, p4, i7, i6]
+983: i57 = getfield_gc(p13, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+987: setfield_gc(p28, ConstPtr(ptr58), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+1002: i59 = int_is_true(i57)
guard_false(i59, descr=<Guard7f5c22990f20>) [p0, p1, p55, p28, p13, p42, p2, p3, p4, i7, i6]
+1012: p60 = getfield_gc(p13, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+1016: p61 = getfield_gc(p28, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+1020: i62 = getfield_gc(p28, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_escaped 140>)
setfield_gc(p13, p61, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+1052: guard_false(i62, descr=<Guard7f5c22990ea8>) [p0, p1, p55, p60, p28, p13, p42, p2, p3, p4, i7, i6]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #46 INPLACE_ADD')
+1061: setfield_gc(p42, ConstPtr(ptr63), descr=<FieldP JitVirtualRef.virtual_token 8>)
+1076: guard_class(p55, ConstClass(W_IntObject), descr=<Guard7f5c22990e30>) [p0, p1, p55, p2, p3, p4, i7, i6]
+1088: i65 = getfield_gc_pure(p55, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+1092: i66 = int_add_ovf(i7, i65)
guard_no_overflow(descr=<Guard7f5c22990db8>) [p0, p1, p55, i66, p2, p3, p4, i7, i6]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #47 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #50 JUMP_FORWARD')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+1108: i68 = int_add_ovf(i6, 1)
guard_no_overflow(descr=<Guard7f5c22990d40>) [p0, p1, i68, p2, p3, p4, i66, None, i6]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+1125: guard_not_invalidated(descr=<Guard7f5c22990cc8>) [p0, p1, p2, p3, p4, i68, i66, None, None]
+1125: i71 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+1133: i73 = int_lt(i71, 0)
guard_false(i73, descr=<Guard7f5c22990c50>) [p0, p1, p2, p3, p4, i68, i66, None, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+1143: label(p1, p0, p2, p3, p4, i66, i68, descr=TargetToken(140033694065200))
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+1173: i75 = int_lt(i68, 10000)
guard_true(i75, descr=<Guard7f5c22990bd8>) [p0, p1, p2, p3, p4, i68, i66]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+1186: i77 = int_eq(i68, -9223372036854775808)
guard_false(i77, descr=<Guard7f5c22990b60>) [p0, p1, i68, p2, p3, p4, None, i66]
+1205: i79 = int_mod(i68, 2)
+1232: i81 = int_rshift(i79, 63)
+1239: i82 = int_and(2, i81)
+1247: i83 = int_add(i79, i82)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+1250: i84 = int_is_true(i83)
guard_false(i84, descr=<Guard7f5c22990ae8>) [p0, p1, p2, p3, p4, i83, i68, i66]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+1260: i86 = int_add_ovf(i66, 1)
guard_no_overflow(descr=<Guard7f5c22990a70>) [p0, p1, i86, p2, p3, p4, None, i68, i66]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+1277: i88 = int_add(i68, 1)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+1288: guard_not_invalidated(descr=<Guard7f5c229909f8>) [p0, p1, p2, p3, p4, i86, i88, None, None, None]
+1288: i90 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+1296: i92 = int_lt(i90, 0)
guard_false(i92, descr=<Guard7f5c22990980>) [p0, p1, p2, p3, p4, i86, i88, None, None, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+1306: jump(p1, p0, p2, p3, p4, i86, i88, descr=TargetToken(140033647688872))
+1322: --end of the loop--
[230589d074a6] jit-log-opt-bridge}
[230589edd70d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ddbc +0  E903020000
[230589ee23a0] jit-backend-dump}
[230589ee2979] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1de60 +0  E93D020000
[230589ee347d] jit-backend-dump}
[230589ee3af7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e5e9 +0  E9EE040000
[230589ee4666] jit-backend-dump}
[230589ee4b08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e63d +0  E909050000
[230589ee547d] jit-backend-dump}
[230589ee5873] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1e9cd +0  E910030000
[230589ee61a7] jit-backend-dump}
[230589ee6660] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1ea70 +0  E94B030000
[230589ee6f77] jit-backend-dump}
[23058a3b5326] {jit-backend
[23058a46c37b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1efb
[23058a488498] jit-backend-dump}
[23058a488eea] {jit-backend-addr
Loop 4 (<code object inlined_str_stuff, file 'source.py', line 40> #13 FOR_ITER) has address 0x7f5c1fc1f000 to 0x7f5c1fc1f47c (bootstrap 0x7f5c1fc1efb0)
[23058a48ab9b] jit-backend-addr}
[23058a48b4af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f0e4 +0  94030000
[23058a48c40a] jit-backend-dump}
[23058a48ca78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f0f8 +0  A5030000
[23058a48d4b8] jit-backend-dump}
[23058a48d90c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f105 +0  BD030000
[23058a48e255] jit-backend-dump}
[23058a48e6a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f11b +0  CC030000
[23058a48efc3] jit-backend-dump}
[23058a48f3ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f135 +0  D7030000
[23058a48fcc6] jit-backend-dump}
[23058a4900fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f13e +0  F3030000
[23058a4909ff] jit-backend-dump}
[23058a490e2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f15d +0  F9030000
[23058a491722] jit-backend-dump}
[23058a491b44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f170 +0  0B040000
[23058a49243a] jit-backend-dump}
[23058a492859] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f187 +0  19040000
[23058a493131] jit-backend-dump}
[23058a493553] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f19f +0  26040000
[23058a493e40] jit-backend-dump}
[23058a49441a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f1b4 +0  5B040000
[23058a494d07] jit-backend-dump}
[23058a49514c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f21b +0  19040000
[23058a495a3f] jit-backend-dump}
[23058a495e4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f233 +0  26040000
[23058a49673f] jit-backend-dump}
[23058a496b58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f29b +0  E3030000
[23058a49743c] jit-backend-dump}
[23058a49784f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f2f2 +0  B1030000
[23058a49813c] jit-backend-dump}
[23058a498555] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f31d +0  AB030000
[23058a498ea1] jit-backend-dump}
[23058a4992f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f39e +0  74030000
[23058a499c1e] jit-backend-dump}
[23058a49c13d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f402 +0  35030000
[23058a49cd25] jit-backend-dump}
[23058a49d17a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f45b +0  01030000
[23058a49da5e] jit-backend-dump}
[23058a49e816] jit-backend}
[23058a49f698] {jit-log-opt-loop
# Loop 4 (<code object inlined_str_stuff, file 'source.py', line 40> #13 FOR_ITER) : loop with 101 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+183: p21 = getarrayitem_gc(p9, 5, descr=<ArrayP 8>)
+194: p23 = getarrayitem_gc(p9, 6, descr=<ArrayP 8>)
+205: p25 = getarrayitem_gc(p9, 7, descr=<ArrayP 8>)
+216: p26 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+216: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, p19, p21, p23, p25, descr=TargetToken(140033694066168))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+302: guard_value(i7, 5, descr=<Guard7f5c229a76a0>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17, p19, p21, p23, p25]
+312: guard_class(p19, 25719440, descr=<Guard7f5c229a6548>) [p1, p0, p19, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+332: p29 = getfield_gc(p19, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+336: guard_nonnull(p29, descr=<Guard7f5c229a65c0>) [p1, p0, p19, p29, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+345: i30 = getfield_gc(p19, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+349: p31 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+353: guard_class(p31, 26050592, descr=<Guard7f5c229a63e0>) [p1, p0, p19, i30, p31, p29, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+367: p33 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+371: i34 = getfield_gc_pure(p33, descr=<FieldS tuple3.item0 8>)
+375: i35 = getfield_gc_pure(p33, descr=<FieldS tuple3.item1 16>)
+379: i36 = getfield_gc_pure(p33, descr=<FieldS tuple3.item2 24>)
+383: i38 = int_lt(i30, 0)
guard_false(i38, descr=<Guard7f5c229a7628>) [p1, p0, p19, i30, i36, i35, i34, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+393: i39 = int_ge(i30, i36)
guard_false(i39, descr=<Guard7f5c229a75b0>) [p1, p0, p19, i30, i35, i34, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+402: i40 = int_mul(i30, i35)
+409: i41 = int_add(i34, i40)
+415: i43 = int_add(i30, 1)
+419: setfield_gc(p19, i43, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+423: guard_value(i5, 0, descr=<Guard7f5c229a7538>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+433: guard_value(p4, ConstPtr(ptr45), descr=<Guard7f5c229a7448>) [p1, p0, p4, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
+452: p46 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+456: guard_value(p46, ConstPtr(ptr47), descr=<Guard7f5c229a7358>) [p1, p0, p46, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
+475: p48 = getfield_gc(p46, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+480: guard_value(p48, ConstPtr(ptr49), descr=<Guard7f5c229a72e0>) [p1, p0, p48, p46, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
+499: guard_not_invalidated(descr=<Guard7f5c229a71f0>) [p1, p0, p46, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
+499: p51 = getfield_gc(ConstPtr(ptr50), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+507: guard_value(p51, ConstPtr(ptr52), descr=<Guard7f5c229a7100>) [p1, p0, p51, p2, p3, p6, p13, p15, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+520: p54 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i41, descr=<Callr 8 i EF=3>)
+608: guard_no_exception(descr=<Guard7f5c229a7088>) [p1, p0, p54, p2, p3, p6, p13, p15, p17, p19, p25, i41]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+623: p55 = getfield_gc(p17, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+634: guard_class(p55, 25936624, descr=<Guard7f5c229a6458>) [p1, p0, p55, p17, p2, p3, p6, p13, p15, p19, p25, p54, i41]
+647: p57 = getfield_gc(p17, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+651: i58 = getfield_gc(p57, descr=<FieldS list.length 8>)
+655: i60 = int_add(i58, 1)
+659: p61 = getfield_gc(p57, descr=<FieldP list.items 16>)
+659: i62 = arraylen_gc(p61, descr=<ArrayP 8>)
+659: call(ConstClass(_ll_list_resize_ge_trampoline__v1054___simple_call__function_), p57, i60, descr=<Callv 0 ri EF=4>)
+736: guard_no_exception(descr=<Guard7f5c229a7010>) [p1, p0, i58, p54, p57, p2, p3, p6, p13, p15, p17, p19, p25, None, i41]
+751: p65 = getfield_gc(p57, descr=<FieldP list.items 16>)
setarrayitem_gc(p65, i58, p54, descr=<ArrayP 8>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+820: i67 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+828: i69 = int_lt(i67, 0)
guard_false(i69, descr=<Guard7f5c229a6f98>) [p1, p0, p2, p3, p6, p13, p15, p17, p19, p25, None, i41]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+838: p70 = same_as(ConstPtr(ptr49))
+838: label(p0, p1, p2, p3, p6, i41, p13, p15, p17, p19, p25, i43, i36, i35, i34, p57, descr=TargetToken(140033694066080))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+868: i71 = int_ge(i43, i36)
guard_false(i71, descr=<Guard7f5c229a6cc8>) [p1, p0, p19, i43, i35, i34, p2, p3, p6, p13, p15, p17, p25, i41]
+881: i72 = int_mul(i43, i35)
+896: i73 = int_add(i34, i72)
+906: i74 = int_add(i43, 1)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+917: setfield_gc(p19, i74, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+928: guard_not_invalidated(descr=<Guard7f5c229a6980>) [p1, p0, p2, p3, p6, p13, p15, p17, p19, p25, i73, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+928: p75 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i73, descr=<Callr 8 i EF=3>)
+995: guard_no_exception(descr=<Guard7f5c229a7790>) [p1, p0, p75, p2, p3, p6, p13, p15, p17, p19, p25, i73, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+1010: i76 = getfield_gc(p57, descr=<FieldS list.length 8>)
+1021: i77 = int_add(i76, 1)
+1025: p78 = getfield_gc(p57, descr=<FieldP list.items 16>)
+1025: i79 = arraylen_gc(p78, descr=<ArrayP 8>)
+1025: call(ConstClass(_ll_list_resize_ge_trampoline__v1054___simple_call__function_), p57, i77, descr=<Callv 0 ri EF=4>)
+1095: guard_no_exception(descr=<Guard7f5c229a7880>) [p1, p0, i76, p75, p57, p2, p3, p6, p13, p15, p17, p19, p25, i73, None]
+1110: p80 = getfield_gc(p57, descr=<FieldP list.items 16>)
setarrayitem_gc(p80, i76, p75, descr=<ArrayP 8>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+1181: i81 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+1189: i82 = int_lt(i81, 0)
guard_false(i82, descr=<Guard7f5c229a7808>) [p1, p0, p2, p3, p6, p13, p15, p17, p19, p25, i73, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+1199: jump(p0, p1, p2, p3, p6, i73, p13, p15, p17, p19, p25, i74, i36, i35, i34, p57, descr=TargetToken(140033694066080))
+1228: --end of the loop--
[23058a519316] jit-log-opt-loop}
[23058a9b27f2] {jit-backend
[23058aa64710] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f7a8 +0  4881EC9800000048896C24604889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B0425709619034829E0483B042550B90403760D49BBD6CBC11F5C7F000041FFD349BB8812AA225C7F00004D8B3B4D8D770149BB8812AA225C7F00004D89334C8BB5400100004D8B7E404C8BAD380100004F0FB6642F184983FC330F85000000004D8D65014D89661849C74620000000004D896E2848C745580100000048C74510A0ABFA0148C74520000000004889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C349BBF0A29B225C7F0000415349BB98F7C11F5C7F0000415349BB00C0C11F5C7F000041FFE3
[23058aa69522] jit-backend-dump}
[23058aa69bae] {jit-backend-addr
Loop 5 (re StrLiteralSearch at 11/51 [17, 8, 3, 1, 1, 1, 1, 51, 0, 19, 51, 1]) has address 0x7f5c1fc1f7f8 to 0x7f5c1fc1f893 (bootstrap 0x7f5c1fc1f7a8)
[23058aa6ae3d] jit-backend-addr}
[23058aa6b636] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f834 +0  5B000000
[23058aa6c2ba] jit-backend-dump}
[23058aa6cc7d] jit-backend}
[23058aa6e188] {jit-log-opt-loop
# Loop 5 (re StrLiteralSearch at 11/51 [17, 8, 3, 1, 1, 1, 1, 51, 0, 19, 51, 1]) : entry bridge with 10 ops
[i0, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+110: p2 = getfield_gc_pure(p1, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+121: i3 = strgetitem(p2, i0)
+134: i5 = int_eq(i3, 51)
guard_true(i5, descr=<Guard7f5c229ba2f0>) [i0, p1]
+144: i7 = int_add(i0, 1)
+148: setfield_gc(p1, i7, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+152: setfield_gc(p1, ConstPtr(ptr8), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+160: setfield_gc(p1, i0, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+164: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1faaba0>)
+235: --end of the loop--
[23058aa7ad10] jit-log-opt-loop}
[23058ac2d927] {jit-backend
[23058ac60a58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f8f
[23058ac6519f] jit-backend-dump}
[23058ac65a86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f8fc +0  1C000000
[23058ac66648] jit-backend-dump}
[23058ac66ad2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f907 +0  1C000000
[23058ac7259a] jit-backend-dump}
[23058ac72bd6] {jit-backend-addr
bridge out of Guard 0x7f5c229ba2f0 has address 0x7f5c1fc1f8f8 to 0x7f5c1fc1f9be
[23058ac7395c] jit-backend-addr}
[23058ac73f2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f951 +0  69000000
[23058ac74887] jit-backend-dump}
[23058ac74d0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f965 +0  7A000000
[23058ac756e9] jit-backend-dump}
[23058ac75ae4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f973 +0  91000000
[23058ac7640a] jit-backend-dump}
[23058ac76b86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f834 +0  C0000000
[23058ac77444] jit-backend-dump}
[23058ac77e7e] jit-backend}
[23058ac78846] {jit-log-opt-bridge
# bridge out of Guard 7f5c229ba2f0 with 13 ops
[i0, p1]
+76: i3 = int_add(i0, 1)
+80: i4 = getfield_gc_pure(p1, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+84: i5 = int_lt(i3, i4)
guard_true(i5, descr=<Guard7f5c229ba980>) [i3, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+93: p6 = getfield_gc_pure(p1, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+97: i7 = strgetitem(p6, i3)
+103: i9 = int_eq(i7, 51)
guard_false(i9, descr=<Guard7f5c229babd8>) [i3, p1]
+113: i11 = int_add(i3, 1)
+118: i12 = int_lt(i11, i4)
guard_false(i12, descr=<Guard7f5c229bab60>) [i11, p1]
+127: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1faaba0>)
+198: --end of the loop--
[23058ac8464f] jit-log-opt-bridge}
[23058afd1ea4] {jit-backend
[23058b0021f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1fa
[23058b0062c0] jit-backend-dump}
[23058b0069ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1fa64 +0  1C000000
[23058b00758b] jit-backend-dump}
[23058b007a38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1fa6f +0  1C000000
[23058b008370] jit-backend-dump}
[23058b008eb2] {jit-backend-addr
bridge out of Guard 0x7f5c229bab60 has address 0x7f5c1fc1fa60 to 0x7f5c1fc1fb18
[23058b009a9e] jit-backend-addr}
[23058b009fa4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1fabc +0  58000000
[23058b00a8a0] jit-backend-dump}
[23058b00accb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1facd +0  6C000000
[23058b00b5e4] jit-backend-dump}
[23058b00bbd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f973 +0  E9000000
[23058b00c572] jit-backend-dump}
[23058b00cd92] jit-backend}
[23058b00d6b2] {jit-log-opt-bridge
# bridge out of Guard 7f5c229bab60 with 10 ops
[i0, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+76: p2 = getfield_gc_pure(p1, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+80: i3 = strgetitem(p2, i0)
+86: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard7f5c229bacc8>) [i0, p1]
+96: i7 = int_add(i0, 1)
+100: i8 = getfield_gc_pure(p1, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+104: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard7f5c229bae30>) [i7, p1]
+113: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1faaba0>)
+184: --end of the loop--
[23058b017609] jit-log-opt-bridge}
[23058b3bd91c] {jit-backend
[23058b3c9115] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1fb78 +0  48817D50FFFFFF007D2448C7442408FFFFFF0049BB68FBC11F5C7F00004C891C2449BB75C2C11F5C7F000041FFD349BBD012AA225C7F00004D8B334D8D660149BBD012AA225C7F00004D892348C745580000000048C74510A0ABFA0148C74520000000004889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[23058b3d8303] jit-backend-dump}
[23058b3d8b65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1fb7c +0  1C000000
[23058b3d984d] jit-backend-dump}
[23058b3d9cd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1fb87 +0  1C000000
[23058b3da5c1] jit-backend-dump}
[23058b3daa80] {jit-backend-addr
bridge out of Guard 0x7f5c229ba980 has address 0x7f5c1fc1fb78 to 0x7f5c1fc1fc0b
[23058b3db52e] jit-backend-addr}
[23058b3dbb8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f951 +0  23020000
[23058b3dc4ad] jit-backend-dump}
[23058b3dccbe] jit-backend}
[23058b3dd546] {jit-log-opt-bridge
# bridge out of Guard 7f5c229ba980 with 1 ops
[i0, p1]
+76: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1faaba0>)
+147: --end of the loop--
[23058b3e0173] jit-log-opt-bridge}
[23058c203f45] {jit-backend
[23058c500a0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc201b
[23058c550f86] jit-backend-dump}
[23058c551b72] {jit-backend-addr
Loop 6 (<code object inlined_str_stuff, file 'source.py', line 40> #44 FOR_ITER) has address 0x7f5c1fc20200 to 0x7f5c1fc20f63 (bootstrap 0x7f5c1fc201b0)
[23058c5533e7] jit-backend-addr}
[23058c553ebb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc202dd +0  820C0000
[23058c554f13] jit-backend-dump}
[23058c555613] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc202e9 +0  9B0C0000
[23058c556406] jit-backend-dump}
[23058c556890] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc202f6 +0  B30C0000
[23058c5571bc] jit-backend-dump}
[23058c557607] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2030b +0  C30C0000
[23058c557f65] jit-backend-dump}
[23058c558390] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2031c +0  D70C0000
[23058c558c83] jit-backend-dump}
[23058c5590a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2032e +0  EA0C0000
[23058c5599b2] jit-backend-dump}
[23058c559dd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20340 +0  FD0C0000
[23058c55a726] jit-backend-dump}
[23058c55ab8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20353 +0  0F0D0000
[23058c55b4a9] jit-backend-dump}
[23058c55b8d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2036a +0  1D0D0000
[23058c55c1c4] jit-backend-dump}
[23058c55c5f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20382 +0  2A0D0000
[23058c55ced6] jit-backend-dump}
[23058c55d4bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc203a2 +0  540D0000
[23058c55dde9] jit-backend-dump}
[23058c55e229] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc203fd +0  1E0D0000
[23058c55eb25] jit-backend-dump}
[23058c55ef4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2040b +0  350D0000
[23058c55f83d] jit-backend-dump}
[23058c55fcc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20423 +0  670D0000
[23058c5605ce] jit-backend-dump}
[23058c5609f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2043e +0  710D0000
[23058c5612f2] jit-backend-dump}
[23058c56172e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc205a2 +0  320C0000
[23058c562033] jit-backend-dump}
[23058c562461] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc205b1 +0  480C0000
[23058c565c68] jit-backend-dump}
[23058c5661ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc205cb +0  530C0000
[23058c566ae1] jit-backend-dump}
[23058c566f06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc205f1 +0  520C0000
[23058c5677e4] jit-backend-dump}
[23058c567bf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc205fe +0  6A0C0000
[23058c568567] jit-backend-dump}
[23058c56899e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20612 +0  7B0C0000
[23058c569291] jit-backend-dump}
[23058c5696be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20620 +0  920C0000
[23058c569fbd] jit-backend-dump}
[23058c56a438] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2064f +0  AD0C0000
[23058c56ad0e] jit-backend-dump}
[23058c56b11e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20665 +0  BC0C0000
[23058c56b9fc] jit-backend-dump}
[23058c56be00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2067a +0  CC0C0000
[23058c56c705] jit-backend-dump}
[23058c56cb29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20688 +0  E30C0000
[23058c56d40b] jit-backend-dump}
[23058c56d841] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2069f +0  F10C0000
[23058c56e128] jit-backend-dump}
[23058c56e53e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc206b6 +0  FF0C0000
[23058c56ee22] jit-backend-dump}
[23058c56f241] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc206c0 +0  1A0D0000
[23058c56fb1c] jit-backend-dump}
[23058c56ff35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc206ca +0  350D0000
[23058c570849] jit-backend-dump}
[23058c570c97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc206dd +0  470D0000
[23058c5715f5] jit-backend-dump}
[23058c571a14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc208c3 +0  860B0000
[23058c572322] jit-backend-dump}
[23058c57272c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc208d2 +0  9C0B0000
[23058c57300a] jit-backend-dump}
[23058c573408] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc208db +0  B80B0000
[23058c573ce9] jit-backend-dump}
[23058c574102] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc208ef +0  C90B0000
[23058c5749f5] jit-backend-dump}
[23058c574e02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc208fd +0  E00B0000
[23058c575734] jit-backend-dump}
[23058c575bbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2093e +0  E90B0000
[23058c5764c5] jit-backend-dump}
[23058c5768d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20971 +0  DB0B0000
[23058c5771b9] jit-backend-dump}
[23058c5775d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20986 +0  EB0B0000
[23058c577eae] jit-backend-dump}
[23058c5782be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20998 +0  FE0B0000
[23058c578bb6] jit-backend-dump}
[23058c578fd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc209aa +0  110C0000
[23058c5798dd] jit-backend-dump}
[23058c579cf9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc209d0 +0  100C0000
[23058c57a5d4] jit-backend-dump}
[23058c57a9f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc209e7 +0  1E0C0000
[23058c57b2f8] jit-backend-dump}
[23058c57baad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20a07 +0  480C0000
[23058c57c402] jit-backend-dump}
[23058c57c806] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20a14 +0  600C0000
[23058c57d108] jit-backend-dump}
[23058c57d506] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20a2c +0  6D0C0000
[23058c57de11] jit-backend-dump}
[23058c580b3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20a47 +0  770C0000
[23058c5816dc] jit-backend-dump}
[23058c581afe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20bb0 +0  330B0000
[23058c5823e5] jit-backend-dump}
[23058c582804] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20bbf +0  490B0000
[23058c5830fd] jit-backend-dump}
[23058c583501] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20bd9 +0  540B0000
[23058c583e7c] jit-backend-dump}
[23058c5842aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20bff +0  530B0000
[23058c584ba0] jit-backend-dump}
[23058c584fb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20c0c +0  6B0B0000
[23058c585885] jit-backend-dump}
[23058c585c9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20c20 +0  7C0B0000
[23058c58658b] jit-backend-dump}
[23058c58698f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20c2e +0  930B0000
[23058c587291] jit-backend-dump}
[23058c587706] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20c5b +0  B00B0000
[23058c587ffc] jit-backend-dump}
[23058c588412] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20c71 +0  BF0B0000
[23058c588d08] jit-backend-dump}
[23058c58912a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20c86 +0  CF0B0000
[23058c589a0b] jit-backend-dump}
[23058c589e24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20c94 +0  E60B0000
[23058c58a70e] jit-backend-dump}
[23058c58ab24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20cab +0  F40B0000
[23058c58b423] jit-backend-dump}
[23058c58b839] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20cc4 +0  000C0000
[23058c58c138] jit-backend-dump}
[23058c58c562] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20cce +0  1B0C0000
[23058c58ce5b] jit-backend-dump}
[23058c58d280] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20cd8 +0  360C0000
[23058c58db58] jit-backend-dump}
[23058c58df68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20ceb +0  480C0000
[23058c58e846] jit-backend-dump}
[23058c58ec68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20ecf +0  890A0000
[23058c58f552] jit-backend-dump}
[23058c58f968] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20ede +0  9F0A0000
[23058c59027f] jit-backend-dump}
[23058c5906b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20ee7 +0  BB0A0000
[23058c590f9a] jit-backend-dump}
[23058c5913c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20efb +0  CC0A0000
[23058c591cc9] jit-backend-dump}
[23058c5920f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20f09 +0  E30A0000
[23058c5929db] jit-backend-dump}
[23058c592e44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20f49 +0  ED0A0000
[23058c593734] jit-backend-dump}
[23058c594a58] jit-backend}
[23058c59644c] {jit-log-opt-loop
# Loop 6 (<code object inlined_str_stuff, file 'source.py', line 40> #44 FOR_ITER) : loop with 336 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+183: p21 = getarrayitem_gc(p9, 5, descr=<ArrayP 8>)
+194: p23 = getarrayitem_gc(p9, 6, descr=<ArrayP 8>)
+205: p25 = getarrayitem_gc(p9, 7, descr=<ArrayP 8>)
+216: p26 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+216: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, p19, p21, p23, p25, descr=TargetToken(140033694067400))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+295: guard_value(i7, 4, descr=<Guard7f5c229baea8>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17, p19, p21, p23, p25]
+305: guard_class(p17, 25719440, descr=<Guard7f5c1fbd87a0>) [p1, p0, p17, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+317: p29 = getfield_gc(p17, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+321: guard_nonnull(p29, descr=<Guard7f5c1fbd8728>) [p1, p0, p17, p29, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+330: i30 = getfield_gc(p17, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+334: p31 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+338: guard_class(p31, 25936624, descr=<Guard7f5c1fbd86b0>) [p1, p0, p17, i30, p31, p29, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+351: p33 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+355: i34 = getfield_gc(p33, descr=<FieldS list.length 8>)
+359: i35 = uint_ge(i30, i34)
guard_false(i35, descr=<Guard7f5c1fbd8638>) [p1, p0, p17, i30, i34, p33, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+368: p36 = getfield_gc(p33, descr=<FieldP list.items 16>)
+372: p37 = getarrayitem_gc(p36, i30, descr=<ArrayP 8>)
+377: guard_nonnull(p37, descr=<Guard7f5c1fbd85c0>) [p1, p0, p17, i30, p37, p2, p3, p4, i5, p6, p11, p13, p15, p19, p21, p23, p25]
+386: i39 = int_add(i30, 1)
+390: setfield_gc(p17, i39, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+394: guard_value(i5, 0, descr=<Guard7f5c1fbd8548>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, p17, p21, p23, p25, p37]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+404: guard_value(p4, ConstPtr(ptr41), descr=<Guard7f5c1fbd8458>) [p1, p0, p4, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
+423: p42 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+427: guard_value(p42, ConstPtr(ptr43), descr=<Guard7f5c1fbd8368>) [p1, p0, p42, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
+446: p44 = getfield_gc(p42, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+451: guard_value(p44, ConstPtr(ptr45), descr=<Guard7f5c1fbd82f0>) [p1, p0, p44, p42, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
+470: guard_not_invalidated(descr=<Guard7f5c1fbd8200>) [p1, p0, p42, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+470: p47 = getfield_gc(ConstPtr(ptr46), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+483: guard_value(p47, ConstPtr(ptr48), descr=<Guard7f5c1fbd8110>) [p1, p0, p47, p2, p3, p6, p11, p13, p17, p21, p23, p25, p37]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+502: p50 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+573: p51 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+577: p52 = force_token()
+580: p53 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+584: guard_isnull(p53, descr=<Guard7f5c1fbd8020>) [p1, p0, p50, p53, p2, p3, p6, p11, p13, p17, p52, p51, p37]
+593: i54 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+597: i55 = int_is_zero(i54)
guard_true(i55, descr=<Guard7f5c1fbd1f88>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, p52, p51, p37]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #0 LOAD_GLOBAL')
+607: guard_not_invalidated(descr=<Guard7f5c1fbd1f10>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, p52, p51, p37]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #9 CALL_FUNCTION')
+607: p56 = force_token()
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #0 LOAD_GLOBAL')
+610: p58 = getfield_gc(ConstPtr(ptr57), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+618: guard_value(p58, ConstPtr(ptr59), descr=<Guard7f5c1fbd1e98>) [p1, p0, p50, p58, p2, p3, p6, p11, p13, p17, p56, p52, p51, p37]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #3 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #6 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #9 BINARY_SUBSCR')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #10 CALL_FUNCTION')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #13 BUILD_TUPLE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #16 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #19 BINARY_ADD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #20 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #23 LOAD_GLOBAL')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #26 LOOKUP_METHOD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #29 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #32 CALL_METHOD')
+631: p61 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+644: guard_class(p61, ConstClass(ObjectDictStrategy), descr=<Guard7f5c1fbd1e20>) [p1, p0, p50, p61, p2, p3, p6, p11, p13, p17, p56, p52, p51, p37]
+658: p63 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+671: p64 = force_token()
p66 = new_with_vtable(25703296)
p68 = new_array(3, descr=<ArrayP 8>)
p70 = new_with_vtable(25703224)
+775: setfield_gc(p70, p56, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p50, p70, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p0, p64, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+845: setarrayitem_gc(p68, 0, ConstPtr(ptr72), descr=<ArrayP 8>)
+853: setarrayitem_gc(p68, 1, ConstPtr(ptr74), descr=<ArrayP 8>)
+867: setarrayitem_gc(p68, 2, ConstPtr(ptr76), descr=<ArrayP 8>)
+881: setfield_gc(p66, p68, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+885: i79 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v1272___simple_call__function_), p63, p66, 4468289130109010315, descr=<Calli 8 rri EF=6>)
guard_not_forced(descr=<Guard7f5c2298f720>) [p1, p0, p50, p66, i79, p63, p70, p2, p3, p6, p11, p13, p17, p52, p37, p51]
+1014: guard_no_exception(descr=<Guard7f5c1fbd1da8>) [p1, p0, p50, p66, i79, p63, p70, p2, p3, p6, p11, p13, p17, p52, p37, p51]
+1029: i81 = int_and(i79, -9223372036854775808)
+1045: i82 = int_is_true(i81)
guard_false(i82, descr=<Guard7f5c1fbd1d30>) [p1, p0, p50, p66, i79, p63, p70, p2, p3, p6, p11, p13, p17, p52, p37, p51]
+1055: p83 = getfield_gc(p63, descr=<FieldP dicttable.entries 24>)
+1066: p84 = getinteriorfield_gc(p83, i79, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+1075: guard_nonnull_class(p84, 26257632, descr=<Guard7f5c1fbd1cb8>) [p1, p0, p50, p66, p84, p70, p2, p3, p6, p11, p13, p17, p52, p37, p51]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #35 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #38 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #41 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #44 COMPARE_OP')
+1093: i87 = instance_ptr_eq(ConstPtr(ptr86), p84)
guard_false(i87, descr=<Guard7f5c1fbd1c40>) [p1, p0, p50, p70, p2, p3, p6, p11, p13, p17, p84, p66, p52, p37, p51]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #50 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #53 RETURN_VALUE')
+1106: p88 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+1117: guard_isnull(p88, descr=<Guard7f5c1fbd1bc8>) [p1, p0, p50, p84, p88, p70, p2, p3, p6, p11, p13, p17, None, p66, p52, p37, p51]
+1126: i90 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+1130: i91 = int_is_true(i90)
guard_false(i91, descr=<Guard7f5c1fbd1b50>) [p1, p0, p50, p84, p70, p2, p3, p6, p11, p13, p17, None, p66, p52, p37, p51]
+1140: p92 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #12 LOOKUP_METHOD')
+1140: setfield_gc(p70, ConstPtr(ptr93), descr=<FieldP JitVirtualRef.virtual_token 8>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #18 CALL_METHOD')
+1156: guard_not_invalidated(descr=<Guard7f5c1fbd1ad8>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, p84, None, p52, p37, p51]
+1156: i94 = strlen(p37)
+1168: i96 = int_gt(9223372036854775807, i94)
guard_true(i96, descr=<Guard7f5c1fbd1a60>) [p1, p0, p50, p84, p37, p2, p3, p6, p11, p13, p17, None, None, p52, None, p51]
+1187: p97 = getfield_gc_pure(p84, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+1191: i98 = getfield_gc_pure(p84, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+1195: i100 = getarrayitem_gc_pure(p97, 0, descr=<ArrayS 8>)
+1199: i102 = int_eq(i100, 17)
guard_true(i102, descr=<Guard7f5c1fbd1970>) [p1, p0, p50, p84, p2, p3, p6, p11, p13, p17, p97, i94, i98, None, None, p52, p37, p51]
+1209: i104 = getarrayitem_gc_pure(p97, 2, descr=<ArrayS 8>)
+1213: i106 = int_and(i104, 1)
+1220: i107 = int_is_true(i106)
guard_true(i107, descr=<Guard7f5c1fbd1880>) [p1, p0, p50, p84, i104, p2, p3, p6, p11, p13, p17, p97, i94, i98, None, None, p52, p37, p51]
+1230: i109 = getarrayitem_gc_pure(p97, 5, descr=<ArrayS 8>)
+1234: i111 = int_gt(i109, 1)
guard_false(i111, descr=<Guard7f5c1fbd1790>) [p1, p0, p50, p84, p2, p3, p6, p11, p13, p17, p97, i94, i98, None, None, p52, p37, p51]
+1244: i113 = getarrayitem_gc_pure(p97, 1, descr=<ArrayS 8>)
+1248: i115 = int_add(i113, 1)
+1252: i116 = getarrayitem_gc_pure(p97, i115, descr=<ArrayS 8>)
+1257: i118 = int_eq(i116, 19)
guard_true(i118, descr=<Guard7f5c1fbd16a0>) [p1, p0, p50, p84, i115, p2, p3, p6, p11, p13, p17, p97, i94, i98, None, None, p52, p37, p51]
+1267: i120 = int_add(i115, 1)
+1271: i121 = getarrayitem_gc_pure(p97, i120, descr=<ArrayS 8>)
+1276: i123 = int_add(i115, 2)
+1280: i125 = int_lt(0, i94)
guard_true(i125, descr=<Guard7f5c1fbd15b0>) [p1, p0, p50, p84, i121, i123, p2, p3, p6, p11, p13, p17, p97, i94, i98, None, None, p52, p37, p51]
+1290: guard_value(i123, 11, descr=<Guard7f5c1fbd14c0>) [p1, p0, p50, p84, i121, i123, p97, p2, p3, p6, p11, p13, p17, None, i94, i98, None, None, p52, p37, p51]
+1300: guard_value(i121, 51, descr=<Guard7f5c1fbd13d0>) [p1, p0, p50, p84, i121, p97, p2, p3, p6, p11, p13, p17, None, i94, i98, None, None, p52, p37, p51]
+1310: guard_value(p97, ConstPtr(ptr128), descr=<Guard7f5c1fbd12e0>) [p1, p0, p50, p84, p97, p2, p3, p6, p11, p13, p17, None, i94, i98, None, None, p52, p37, p51]
debug_merge_point(2, 3, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+1329: p129 = force_token()
p131 = new_with_vtable(25802448)
p132 = new_with_vtable(25703224)
+1414: setfield_gc(p132, p52, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p50, p132, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p0, p129, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+1484: setfield_gc(p131, ConstPtr(ptr128), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
+1498: setfield_gc(p131, p37, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+1502: setfield_gc(p131, i98, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+1506: setfield_gc(p131, i94, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
i133 = call_assembler(0, p131, descr=<Loop5>)
guard_not_forced(descr=<Guard7f5c2298f620>) [p1, p0, p50, p84, p131, i133, p132, p2, p3, p6, p11, p13, p17, p51, p37]
+1815: guard_no_exception(descr=<Guard7f5c1fbd1268>) [p1, p0, p50, p84, p131, i133, p132, p2, p3, p6, p11, p13, p17, p51, p37]
+1830: guard_false(i133, descr=<Guard7f5c1fbd11f0>) [p1, p0, p50, p84, p131, p132, p2, p3, p6, p11, p13, p17, p51, p37]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #21 RETURN_VALUE')
+1839: p134 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+1850: guard_isnull(p134, descr=<Guard7f5c1fbd1100>) [p1, p0, p50, p134, p132, p2, p3, p6, p11, p13, p17, p51, p37]
+1859: i135 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+1863: i136 = int_is_true(i135)
guard_false(i136, descr=<Guard7f5c1fbd1088>) [p1, p0, p50, p132, p2, p3, p6, p11, p13, p17, p51, p37]
+1873: p137 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p50, p51, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+1904: setfield_gc(p132, ConstPtr(ptr93), descr=<FieldP JitVirtualRef.virtual_token 8>)
+1920: guard_not_invalidated(descr=<Guard7f5c1fbd1010>) [p1, p0, p2, p3, p6, p11, p13, p17, None, p37]
+1920: i139 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+1928: i141 = int_lt(i139, 0)
guard_false(i141, descr=<Guard7f5c1fbd0f98>) [p1, p0, p2, p3, p6, p11, p13, p17, None, p37]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1938: label(p0, p1, p2, p3, p6, p11, p13, p37, p17, i135, p50, p51, descr=TargetToken(140033694067488))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1969: p142 = getfield_gc(p17, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+1980: guard_nonnull(p142, descr=<Guard7f5c1fbd0f20>) [p1, p0, p17, p142, p2, p3, p6, p11, p13, p37]
+1989: i143 = getfield_gc(p17, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+1993: p144 = getfield_gc(p142, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+1998: guard_class(p144, 25936624, descr=<Guard7f5c1fbd0ea8>) [p1, p0, p17, i143, p144, p142, p2, p3, p6, p11, p13, p37]
+2010: p145 = getfield_gc(p142, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+2015: i146 = getfield_gc(p145, descr=<FieldS list.length 8>)
+2019: i147 = uint_ge(i143, i146)
guard_false(i147, descr=<Guard7f5c1fbd0e30>) [p1, p0, p17, i143, i146, p145, p2, p3, p6, p11, p13, p37]
+2028: p148 = getfield_gc(p145, descr=<FieldP list.items 16>)
+2032: p149 = getarrayitem_gc(p148, i143, descr=<ArrayP 8>)
+2037: guard_nonnull(p149, descr=<Guard7f5c1fbd0db8>) [p1, p0, p17, i143, p149, p2, p3, p6, p11, p13, p37]
+2046: i150 = int_add(i143, 1)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+2050: p151 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+2061: setfield_gc(p17, i150, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+2065: guard_value(p151, ConstPtr(ptr43), descr=<Guard7f5c1fbd0d40>) [p1, p0, p151, p2, p3, p6, p11, p13, p17, p149, None]
+2084: p152 = getfield_gc(p151, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+2088: guard_value(p152, ConstPtr(ptr45), descr=<Guard7f5c1fbd0cc8>) [p1, p0, p152, p151, p2, p3, p6, p11, p13, p17, p149, None]
+2107: guard_not_invalidated(descr=<Guard7f5c1fbd0c50>) [p1, p0, p151, p2, p3, p6, p11, p13, p17, p149, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+2107: p153 = getfield_gc(ConstPtr(ptr46), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+2120: guard_value(p153, ConstPtr(ptr48), descr=<Guard7f5c1fbd0bd8>) [p1, p0, p153, p2, p3, p6, p11, p13, p17, p149, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+2139: p154 = force_token()
+2142: i155 = int_is_zero(i135)
guard_true(i155, descr=<Guard7f5c1fbd0ae8>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, p51, p154, p149, None]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #0 LOAD_GLOBAL')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #9 CALL_FUNCTION')
+2152: p156 = force_token()
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #0 LOAD_GLOBAL')
+2155: p157 = getfield_gc(ConstPtr(ptr57), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+2163: guard_value(p157, ConstPtr(ptr59), descr=<Guard7f5c1fbd0a70>) [p1, p0, p50, p157, p2, p3, p6, p11, p13, p17, p156, p51, p154, p149, None]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #3 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #6 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #9 BINARY_SUBSCR')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #10 CALL_FUNCTION')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #13 BUILD_TUPLE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #16 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #19 BINARY_ADD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #20 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #23 LOAD_GLOBAL')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #26 LOOKUP_METHOD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #29 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #32 CALL_METHOD')
+2176: p158 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+2189: guard_class(p158, ConstClass(ObjectDictStrategy), descr=<Guard7f5c1fbd09f8>) [p1, p0, p50, p158, p2, p3, p6, p11, p13, p17, p156, p51, p154, p149, None]
+2203: p159 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+2216: p160 = force_token()
p161 = new_with_vtable(25703296)
p162 = new_array(3, descr=<ArrayP 8>)
p163 = new_with_vtable(25703224)
+2320: setfield_gc(p163, p156, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p50, p163, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p0, p160, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2388: setarrayitem_gc(p162, 0, ConstPtr(ptr72), descr=<ArrayP 8>)
+2396: setarrayitem_gc(p162, 1, ConstPtr(ptr74), descr=<ArrayP 8>)
+2410: setarrayitem_gc(p162, 2, ConstPtr(ptr167), descr=<ArrayP 8>)
+2424: setfield_gc(p161, p162, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+2428: i169 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v1272___simple_call__function_), p159, p161, 4468289130109010315, descr=<Calli 8 rri EF=6>)
guard_not_forced(descr=<Guard7f5c2298f520>) [p1, p0, p50, p161, i169, p159, p163, p2, p3, p6, p11, p13, p17, p51, p149, p154]
+2564: guard_no_exception(descr=<Guard7f5c1fbd0980>) [p1, p0, p50, p161, i169, p159, p163, p2, p3, p6, p11, p13, p17, p51, p149, p154]
+2579: i170 = int_and(i169, -9223372036854775808)
+2595: i171 = int_is_true(i170)
guard_false(i171, descr=<Guard7f5c1fbd0908>) [p1, p0, p50, p161, i169, p159, p163, p2, p3, p6, p11, p13, p17, p51, p149, p154]
+2605: p172 = getfield_gc(p159, descr=<FieldP dicttable.entries 24>)
+2616: p173 = getinteriorfield_gc(p172, i169, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+2625: guard_nonnull_class(p173, 26257632, descr=<Guard7f5c1fbd0890>) [p1, p0, p50, p161, p173, p163, p2, p3, p6, p11, p13, p17, p51, p149, p154]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #35 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #38 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #41 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #44 COMPARE_OP')
+2643: i174 = instance_ptr_eq(ConstPtr(ptr86), p173)
guard_false(i174, descr=<Guard7f5c1fbd0818>) [p1, p0, p50, p163, p2, p3, p6, p11, p13, p17, p161, p173, p51, p149, p154]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #50 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 226> #53 RETURN_VALUE')
+2656: p175 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+2667: guard_isnull(p175, descr=<Guard7f5c1fbd07a0>) [p1, p0, p50, p173, p175, p163, p2, p3, p6, p11, p13, p17, p161, None, p51, p149, p154]
+2676: i176 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+2680: i177 = int_is_true(i176)
guard_false(i177, descr=<Guard7f5c1fbd0728>) [p1, p0, p50, p173, p163, p2, p3, p6, p11, p13, p17, p161, None, p51, p149, p154]
+2690: p178 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #12 LOOKUP_METHOD')
+2690: setfield_gc(p163, ConstPtr(ptr93), descr=<FieldP JitVirtualRef.virtual_token 8>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #18 CALL_METHOD')
+2705: guard_not_invalidated(descr=<Guard7f5c1fbd06b0>) [p1, p0, p50, p2, p3, p6, p11, p13, p17, None, p173, p51, p149, p154]
+2705: i179 = strlen(p149)
+2716: i181 = int_gt(9223372036854775807, i179)
guard_true(i181, descr=<Guard7f5c1fbd0638>) [p1, p0, p50, p173, p149, p2, p3, p6, p11, p13, p17, None, None, p51, None, p154]
+2735: p182 = getfield_gc_pure(p173, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+2739: i183 = getfield_gc_pure(p173, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+2743: i184 = getarrayitem_gc_pure(p182, 0, descr=<ArrayS 8>)
+2747: i185 = int_eq(i184, 17)
guard_true(i185, descr=<Guard7f5c1fbd0548>) [p1, p0, p50, p173, p2, p3, p6, p11, p13, p17, p182, i179, i183, None, None, p51, p149, p154]
+2757: i186 = getarrayitem_gc_pure(p182, 2, descr=<ArrayS 8>)
+2761: i187 = int_and(i186, 1)
+2768: i188 = int_is_true(i187)
guard_true(i188, descr=<Guard7f5c1fbd0458>) [p1, p0, p50, p173, i186, p2, p3, p6, p11, p13, p17, p182, i179, i183, None, None, p51, p149, p154]
+2778: i189 = getarrayitem_gc_pure(p182, 5, descr=<ArrayS 8>)
+2782: i190 = int_gt(i189, 1)
guard_false(i190, descr=<Guard7f5c1fbd0368>) [p1, p0, p50, p173, p2, p3, p6, p11, p13, p17, p182, i179, i183, None, None, p51, p149, p154]
+2792: i191 = getarrayitem_gc_pure(p182, 1, descr=<ArrayS 8>)
+2796: i192 = int_add(i191, 1)
+2800: i193 = getarrayitem_gc_pure(p182, i192, descr=<ArrayS 8>)
+2805: i194 = int_eq(i193, 19)
guard_true(i194, descr=<Guard7f5c1fbd0278>) [p1, p0, p50, p173, i192, p2, p3, p6, p11, p13, p17, p182, i179, i183, None, None, p51, p149, p154]
+2815: i195 = int_add(i192, 1)
+2820: i196 = getarrayitem_gc_pure(p182, i195, descr=<ArrayS 8>)
+2825: i197 = int_add(i192, 2)
+2830: i199 = int_lt(0, i179)
guard_true(i199, descr=<Guard7f5c1fbd0188>) [p1, p0, p50, p173, i196, i197, p2, p3, p6, p11, p13, p17, p182, i179, i183, None, None, p51, p149, p154]
+2840: guard_value(i197, 11, descr=<Guard7f5c1fbd0098>) [p1, p0, p50, p173, i196, i197, p182, p2, p3, p6, p11, p13, p17, None, i179, i183, None, None, p51, p149, p154]
+2850: guard_value(i196, 51, descr=<Guard7f5c1fbc3f88>) [p1, p0, p50, p173, i196, p182, p2, p3, p6, p11, p13, p17, None, i179, i183, None, None, p51, p149, p154]
+2860: guard_value(p182, ConstPtr(ptr128), descr=<Guard7f5c1fbc3e98>) [p1, p0, p50, p173, p182, p2, p3, p6, p11, p13, p17, None, i179, i183, None, None, p51, p149, p154]
debug_merge_point(2, 3, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+2879: p200 = force_token()
p201 = new_with_vtable(25802448)
p202 = new_with_vtable(25703224)
+2964: setfield_gc(p202, p154, descr=<FieldP JitVirtualRef.virtual_token 8>)
setfield_gc(p50, p202, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
setfield_gc(p0, p200, descr=<FieldP pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+3032: setfield_gc(p201, ConstPtr(ptr128), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
+3046: setfield_gc(p201, p149, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+3050: setfield_gc(p201, i183, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+3054: setfield_gc(p201, i179, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
i203 = call_assembler(0, p201, descr=<Loop5>)
guard_not_forced(descr=<Guard7f5c2298f420>) [p1, p0, p50, p173, p201, i203, p202, p2, p3, p6, p11, p13, p17, p51, p149]
+3363: guard_no_exception(descr=<Guard7f5c1fbc3e20>) [p1, p0, p50, p173, p201, i203, p202, p2, p3, p6, p11, p13, p17, p51, p149]
+3378: guard_false(i203, descr=<Guard7f5c1fbc3da8>) [p1, p0, p50, p173, p201, p202, p2, p3, p6, p11, p13, p17, p51, p149]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #21 RETURN_VALUE')
+3387: p204 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+3398: guard_isnull(p204, descr=<Guard7f5c1fbc3cb8>) [p1, p0, p50, p204, p202, p2, p3, p6, p11, p13, p17, p51, p149]
+3407: i205 = getfield_gc(p50, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+3411: i206 = int_is_true(i205)
guard_false(i206, descr=<Guard7f5c1fbc3c40>) [p1, p0, p50, p202, p2, p3, p6, p11, p13, p17, p51, p149]
+3421: p207 = getfield_gc(p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p50, p51, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+3452: setfield_gc(p202, ConstPtr(ptr93), descr=<FieldP JitVirtualRef.virtual_token 8>)
+3467: guard_not_invalidated(descr=<Guard7f5c1fbc3bc8>) [p1, p0, p2, p3, p6, p11, p13, p17, None, p149]
+3467: i208 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+3475: i209 = int_lt(i208, 0)
guard_false(i209, descr=<Guard7f5c1fbc3b50>) [p1, p0, p2, p3, p6, p11, p13, p17, None, p149]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+3485: jump(p0, p1, p2, p3, p6, p11, p13, p149, p17, i205, p50, p51, descr=TargetToken(140033694067488))
+3507: --end of the loop--
[23058c7140ee] jit-log-opt-loop}
[23058c83678c] {jit-backend
[23058d3eae4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21a
[23058d4002ed] jit-backend-dump}
[23058d4011c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21a94 +0  1C000000
[23058d401f81] jit-backend-dump}
[23058d402440] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21a9f +0  1C000000
[23058d402dbf] jit-backend-dump}
[23058d4032c3] {jit-backend-addr
bridge out of Guard 0x7f5c229bae30 has address 0x7f5c1fc21a90 to 0x7f5c1fc21b48
[23058d404672] jit-backend-addr}
[23058d404edc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21aec +0  58000000
[23058d40584c] jit-backend-dump}
[23058d405e02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21afd +0  6C000000
[23058d4066ce] jit-backend-dump}
[23058d406d4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1facd +0  BF1F0000
[23058d40761b] jit-backend-dump}
[23058d408468] jit-backend}
[23058d40a00b] {jit-log-opt-bridge
# bridge out of Guard 7f5c229bae30 with 10 ops
[i0, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+76: p2 = getfield_gc_pure(p1, descr=<FieldP rpython.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+80: i3 = strgetitem(p2, i0)
+86: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard7f5c1fbd8818>) [i0, p1]
+96: i7 = int_add(i0, 1)
+100: i8 = getfield_gc_pure(p1, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+104: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard7f5c1fbd8980>) [i7, p1]
+113: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1faaba0>)
+184: --end of the loop--
[23058d418407] jit-log-opt-bridge}
[23058d914d6e] {jit-backend
[23058d9d5eba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21bf
[23058d9dd7e8] jit-backend-dump}
[23058d9de506] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21bfc +0  2B000000
[23058d9df38b] jit-backend-dump}
[23058d9df8c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21c07 +0  2B000000
[23058d9e03cb] jit-backend-dump}
[23058d9e08f2] {jit-backend-addr
bridge out of Guard 0x7f5c1fbd11f0 has address 0x7f5c1fc21bf8 to 0x7f5c1fc21d65
[23058d9e188c] jit-backend-addr}
[23058d9e2056] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21c54 +0  0D010000
[23058d9e2a78] jit-backend-dump}
[23058d9e3031] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21c62 +0  24010000
[23058d9e3a14] jit-backend-dump}
[23058d9e457a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21ca4 +0  2C010000
[23058d9e4f0b] jit-backend-dump}
[23058d9e5608] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc208db +0  19130000
[23058d9e5fa7] jit-backend-dump}
[23058d9e6dd6] jit-backend}
[23058d9f32c3] {jit-log-opt-bridge
# bridge out of Guard 7f5c1fbd11f0 with 19 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/.virtualenvs/jitviewer/lib-python/2/re.py'. line 139> #21 RETURN_VALUE')
+76: p14 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 96>)
+87: guard_isnull(p14, descr=<Guard7f5c1fbd91f0>) [p0, p1, p2, p14, p5, p6, p7, p8, p9, p10, p11, p12, p13, p3, p4]
+96: i15 = getfield_gc(p2, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 64>)
+100: i16 = int_is_true(i15)
guard_false(i16, descr=<Guard7f5c1fbd99e8>) [p0, p1, p2, p5, p6, p7, p8, p9, p10, p11, p12, p13, p3, p4]
+110: p17 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p2, p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 80>)
+143: setfield_gc(p5, ConstPtr(ptr18), descr=<FieldP JitVirtualRef.virtual_token 8>)
+158: guard_not_invalidated(descr=<Guard7f5c1fbd9970>) [p0, p1, p6, p7, p8, p9, p10, p11, None, p13, None, None]
+158: i21 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+166: i23 = int_lt(i21, 0)
guard_false(i23, descr=<Guard7f5c1fbd98f8>) [p0, p1, p6, p7, p8, p9, p10, p11, None, p13, None, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
p25 = new_with_vtable(ConstClass(W_StringObject))
+240: setfield_gc(p25, p13, descr=<FieldP pypy.objspace.std.stringobject.W_StringObject.inst__value 8>)
+251: jump(p1, p0, p6, p7, ConstPtr(ptr26), 0, p8, 4, 44, p9, p10, p25, p11, ConstPtr(ptr30), ConstPtr(ptr31), ConstPtr(ptr31), ConstPtr(ptr31), descr=TargetToken(140033694067400))
+365: --end of the loop--
[23058da0e72e] jit-log-opt-bridge}
[23058da5eef2] {jit-backend
[23058da6ff69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21e10 +0  48817D50FFFFFF007D2448C7442408FFFFFF0049BB001EC21F5C7F00004C891C2449BB75C2C11F5C7F000041FFD349BB6013AA225C7F00004D8B3B4D8D6F0149BB6013AA225C7F00004D892B4D8D6C24014D896E1849C74620000000004D89662848C745580100000048C74510A0ABFA0148C74520000000004889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[23058da734a4] jit-backend-dump}
[23058da73ae0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21e14 +0  1C000000
[23058da7458e] jit-backend-dump}
[23058da749fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21e1f +0  1C000000
[23058da753ae] jit-backend-dump}
[23058da758a0] {jit-backend-addr
bridge out of Guard 0x7f5c229babd8 has address 0x7f5c1fc21e10 to 0x7f5c1fc21eb8
[23058da76494] jit-backend-addr}
[23058da76b41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f965 +0  A7240000
[23058da77536] jit-backend-dump}
[23058da77dc7] jit-backend}
[23058da7867c] {jit-log-opt-bridge
# bridge out of Guard 7f5c229babd8 with 5 ops
[i0, p1]
+76: i3 = int_add(i0, 1)
+81: setfield_gc(p1, i3, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+85: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+93: setfield_gc(p1, i0, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+97: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1faaba0>)
+168: --end of the loop--
[23058da7f7a7] jit-log-opt-bridge}
[23058dba159e] {jit-backend
[23058dbae963] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21ec8 +0  48817D50FFFFFF007D2448C7442408FFFFFF0049BBB81EC21F5C7F00004C891C2449BB75C2C11F5C7F000041FFD349BB7813AA225C7F00004D8B3B4D8D6F0149BB7813AA225C7F00004D892B4D8D6A014D896E1849C74620000000004D89562848C745580100000048C74510A0ABFA0148C74520000000004889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[23058dbb8bef] jit-backend-dump}
[23058dbb93e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21ecc +0  1C000000
[23058dbb9f2e] jit-backend-dump}
[23058dbba34d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21ed7 +0  1C000000
[23058dbbacf8] jit-backend-dump}
[23058dbbb1e4] {jit-backend-addr
bridge out of Guard 0x7f5c229bacc8 has address 0x7f5c1fc21ec8 to 0x7f5c1fc21f6f
[23058dbbbda0] jit-backend-addr}
[23058dbbc3fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1fabc +0  08240000
[23058dbbcd48] jit-backend-dump}
[23058dbbd61e] jit-backend}
[23058dbbe0ec] {jit-log-opt-bridge
# bridge out of Guard 7f5c229bacc8 with 5 ops
[i0, p1]
+76: i3 = int_add(i0, 1)
+80: setfield_gc(p1, i3, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+84: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+92: setfield_gc(p1, i0, descr=<FieldS rpython.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+96: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1faaba0>)
+167: --end of the loop--
[23058dbc48ae] jit-log-opt-bridge}
[23058dbe7190] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f1a3 +0  E946040000
[23058dbe890e] jit-backend-dump}
[23058dbe8f0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc1f350 +0  E99C030000
[23058dbe99aa] jit-backend-dump}
[23058dbea080] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20386 +0  E94A0D0000
[23058dbeaaa2] jit-backend-dump}
[23058dbeafd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2040f +0  E9550D0000
[23058dbeb963] jit-backend-dump}
[23058dbebdde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20634 +0  E9A20C0000
[23058dbec733] jit-backend-dump}
[23058dbecb3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20930 +0  E9D10B0000
[23058dbed46e] jit-backend-dump}
[23058dbed925] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc209eb +0  E93E0C0000
[23058dbee2a0] jit-backend-dump}
[23058dbee6a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20c41 +0  E9A40B0000
[23058dbef0a9] jit-backend-dump}
[23058dbef4a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc20f3b +0  E9D50A0000
[23058dbefe02] jit-backend-dump}
[23058dbf02d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc21c96 +0  E914010000
[23058dbf0c0a] jit-backend-dump}
[23058ddea987] {jit-backend
[23058debc609] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc220b
[23058decf469] jit-backend-dump}
[23058decfd30] {jit-backend-addr
Loop 7 (<code object double_loop, file 'source.py', line 47> #38 FOR_ITER) has address 0x7f5c1fc22100 to 0x7f5c1fc22337 (bootstrap 0x7f5c1fc220b0)
[23058ded1080] jit-backend-addr}
[23058ded185f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc221d6 +0  5D010000
[23058ded27ae] jit-backend-dump}
[23058ded2d4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc221e2 +0  76010000
[23058ded37eb] jit-backend-dump}
[23058ded3c13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc221ef +0  8E010000
[23058ded4620] jit-backend-dump}
[23058ded4a6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc22204 +0  9E010000
[23058ded53d0] jit-backend-dump}
[23058ded57fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2221e +0  A9010000
[23058ded61bd] jit-backend-dump}
[23058ded65ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc22227 +0  C5010000
[23058ded6ee4] jit-backend-dump}
[23058ded7318] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc22246 +0  CB010000
[23058ded7c9c] jit-backend-dump}
[23058ded80bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc22258 +0  DE010000
[23058ded89ec] jit-backend-dump}
[23058ded8e02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc22272 +0  E9010000
[23058ded96fb] jit-backend-dump}
[23058ded9b17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc22282 +0  FE010000
[23058deda3e9] jit-backend-dump}
[23058deda814] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2228f +0  16020000
[23058dedb0c9] jit-backend-dump}
[23058dedb649] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc222a1 +0  4E020000
[23058dedbf72] jit-backend-dump}
[23058dedc376] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc222b4 +0  60020000
[23058dedcc3f] jit-backend-dump}
[23058dedd037] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc222e2 +0  57020000
[23058dedd9c2] jit-backend-dump}
[23058deddddb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc22303 +0  5B020000
[23058dede6c8] jit-backend-dump}
[23058dedeadb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2230f +0  74020000
[23058dedf3a1] jit-backend-dump}
[23058dedf837] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc22321 +0  AC020000
[23058dee0145] jit-backend-dump}
[23058dee0bef] jit-backend}
[23058dee3e02] {jit-log-opt-loop
# Loop 7 (<code object double_loop, file 'source.py', line 47> #38 FOR_ITER) : loop with 87 ops
[p0, p1]
+110: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+172: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+183: p21 = getarrayitem_gc(p9, 5, descr=<ArrayP 8>)
+187: p23 = getarrayitem_gc(p9, 6, descr=<ArrayP 8>)
+198: p25 = getarrayitem_gc(p9, 7, descr=<ArrayP 8>)
+209: p26 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+209: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, p19, p21, p23, p25, descr=TargetToken(140033694068016))
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+288: guard_value(i7, 5, descr=<Guard7f5c1fbd9a60>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17, p19, p21, p23, p25]
+298: guard_class(p19, 25719440, descr=<Guard7f5c1fbf71f0>) [p1, p0, p19, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+310: p29 = getfield_gc(p19, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+314: guard_nonnull(p29, descr=<Guard7f5c1fbf7178>) [p1, p0, p19, p29, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+323: i30 = getfield_gc(p19, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+327: p31 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+331: guard_class(p31, 26050592, descr=<Guard7f5c1fbf7100>) [p1, p0, p19, i30, p31, p29, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+344: p33 = getfield_gc(p29, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+348: i34 = getfield_gc_pure(p33, descr=<FieldS tuple3.item0 8>)
+352: i35 = getfield_gc_pure(p33, descr=<FieldS tuple3.item1 16>)
+356: i36 = getfield_gc_pure(p33, descr=<FieldS tuple3.item2 24>)
+360: i38 = int_lt(i30, 0)
guard_false(i38, descr=<Guard7f5c1fbf7088>) [p1, p0, p19, i30, i36, i35, i34, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+370: i39 = int_ge(i30, i36)
guard_false(i39, descr=<Guard7f5c1fbf7010>) [p1, p0, p19, i30, i35, i34, p2, p3, p4, i5, p6, p11, p13, p15, p17, p21, p23, p25]
+379: i40 = int_mul(i30, i35)
+386: i41 = int_add(i34, i40)
+392: i43 = int_add(i30, 1)
+396: setfield_gc(p19, i43, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+400: guard_value(i5, 0, descr=<Guard7f5c1fbf6f98>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #41 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #44 LOAD_FAST')
+410: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard7f5c1fbf6ea8>) [p1, p0, p11, p2, p3, p4, p6, p13, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #47 LOAD_FAST')
+428: guard_nonnull_class(p13, ConstClass(W_IntObject), descr=<Guard7f5c1fbf6db8>) [p1, p0, p13, p2, p3, p4, p6, p11, p17, p19, p23, p25, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #50 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #53 BINARY_ADD')
+454: i47 = getfield_gc_pure(p13, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+458: i48 = int_add_ovf(i47, i41)
guard_no_overflow(descr=<Guard7f5c1fbf6d40>) [p1, p0, p13, i48, p2, p3, p4, p6, p11, p17, p19, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #54 INPLACE_ADD')
+470: i49 = getfield_gc_pure(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+474: i50 = int_add_ovf(i49, i48)
guard_no_overflow(descr=<Guard7f5c1fbf6c50>) [p1, p0, p11, i50, p2, p3, p4, p6, p13, p17, p19, i48, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #55 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #58 JUMP_ABSOLUTE')
+483: guard_not_invalidated(descr=<Guard7f5c1fbf6bd8>) [p1, p0, p2, p3, p4, p6, p13, p17, p19, i50, None, i41]
+483: i53 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+491: i55 = int_lt(i53, 0)
guard_false(i55, descr=<Guard7f5c1fbf6b60>) [p1, p0, p2, p3, p4, p6, p13, p17, p19, i50, None, i41]
+501: guard_value(p4, ConstPtr(ptr56), descr=<Guard7f5c1fbf6ae8>) [p1, p0, p4, p2, p3, p6, p13, p17, p19, i50, None, i41]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+520: label(p0, p1, p2, p3, p6, i50, p13, i41, p17, p19, i43, i36, i35, i34, i47, descr=TargetToken(140033694068104))
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+557: i57 = int_ge(i43, i36)
guard_false(i57, descr=<Guard7f5c1fbf69f8>) [p1, p0, p19, i43, i35, i34, p2, p3, p6, p13, p17, i50, i41]
+566: i58 = int_mul(i43, i35)
+573: i59 = int_add(i34, i58)
+579: i60 = int_add(i43, 1)
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #41 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #44 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #47 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #50 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #53 BINARY_ADD')
+583: setfield_gc(p19, i60, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+587: i61 = int_add_ovf(i47, i59)
guard_no_overflow(descr=<Guard7f5c1fbf6980>) [p1, p0, p13, i61, p2, p3, p6, p17, p19, i59, i50, None]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #54 INPLACE_ADD')
+599: i62 = int_add_ovf(i50, i61)
guard_no_overflow(descr=<Guard7f5c1fbf6890>) [p1, p0, i62, p2, p3, p6, p13, p17, p19, i61, i59, i50, None]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #55 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #58 JUMP_ABSOLUTE')
+611: guard_not_invalidated(descr=<Guard7f5c1fbf67a0>) [p1, p0, p2, p3, p6, p13, p17, p19, i62, None, i59, None, None]
+611: i63 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+619: i64 = int_lt(i63, 0)
guard_false(i64, descr=<Guard7f5c1fbf66b0>) [p1, p0, p2, p3, p6, p13, p17, p19, i62, None, i59, None, None]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+629: jump(p0, p1, p2, p3, p6, i62, p13, i59, p17, p19, i60, i36, i35, i34, i47, descr=TargetToken(140033694068104))
+647: --end of the loop--
[23058df30903] jit-log-opt-loop}
[23058e5812d4] {jit-backend
[23058e684039] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc226c8 +0  48817D50FFFFFF007D2448C7442408FFFFFF0049BBF825C21F5C7F00004C891C2449BB75C2C11F5C7F000041FFD349BBD813AA225C7F0000498B034C8D700149BBD813AA225C7F00004D89334C8BB558010000498B46104D8B7E1848C74210000000004983FF040F85000000004C8B3C25409519034983FF000F8C000000004C8BBD7801000041813F704500000F8500000000498B57104885D20F84000000004D8B77084C8B621041813C24005305000F85000000004C8B6208498B5424084D8B5424104D8B4C24184983FE000F8C000000004D39CE0F8D000000004D89F14D0FAFF24C01F24D8D71014C8B8D380100004D8B51084D89770849BBC8E048205C7F00004D39DA0F85000000004D8B721049BBA82E4E205C7F00004D39DE0F85000000004C8B142540D7CE014981FA30C3D4010F850000000049BBF013AA225C7F00004D8B3B4D8D4F0149BBF013AA225C7F00004D890B48898548010000488B0425C8EEB501488DB880000000483B3C25E8EEB501761B49BBB826C21F5C7F00004C891C2449BBE3C9C11F5C7F000041FFD348893C25C8EEB50148C700F0940200488D782048C707680B00004C8D4F1049C701680B00004C896F084D8D691049C74500680B000049895108498D551048C702704500004C8D7A1849C707E86B000048C740180400000048C740083E0000004C8B95480100004C8950104C8B95680100004D89550849C747104004F10149BBA0ADBF1F5C7F00004D895F084C897A1049BB60F14E205C7F00004D89DC41BA000000004889855801000041B80500000048C78568010000250000004889FB4C898D480100004C89AD7001000048C785800100000000000048C785880100000000000048C785900100000000000049BBB221C21F5C7F000041FFE349BBE072BF1F5C7F0000415349BB0826C21F5C7F0000415349BB00C0C11F5C7F000041FFE349BBC0D4C01F5C7F0000415349BB1826C21F5C7F0000415349BB00C0C11F5C7F000041FFE349BB48D4C01F5C7F0000415349BB2826C21F5C7F0000415349BB00C0C11F5C7F000041FFE349BBD0D3C01F5C7F0000415349BB3826C21F5C7F0000415349BB00C0C11F5C7F000041FFE349BB58D3C01F5C7F0000415349BB4826C21F5C7F0000415349BB00C0C11F5C7F000041FFE349BBE0D2C01F5C7F0000415349BB5826C21F5C7F0000415349BB00C0C11F5C7F000041FFE349BBF0D1C01F5C7F0000415349BB6826C21F5C7F0000415349BB00C0C11F5C7F000041FFE349BB78D1C01F5C7F0000415349BB7826C21F5C7F0000415349BB00C0C11F5C7F000041FFE349BB00D1C01F5C7F0000415349BB8826C21F5C7F0000415349BB00C0C11F5C7F000041FFE349BB88D0C01F5C7F0000415349BB9826C21F5C7F0000415349BB00C0C11F5C7F000041FFE349BB10D0C01F5C7F0000415349BBA826C21F5C7F0000415349BB00C0C11F5C7F000041FFE3
[23058e69c416] jit-backend-dump}
[23058e69d66a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc226cc +0  28000000
[23058e69e9ed] jit-backend-dump}
[23058e69eff6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc226d7 +0  28000000
[23058e69fc2c] jit-backend-dump}
[23058e6a01dc] {jit-backend-addr
bridge out of Guard 0x7f5c1fbf69f8 has address 0x7f5c1fc226c8 to 0x7f5c1fc22952
[23058e6a162f] jit-backend-addr}
[23058e6a1eba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc22731 +0  1D020000
[23058e6a2965] jit-backend-dump}
[23058e6a3038] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc22743 +0  55020000
[23058e6a3a7e] jit-backend-dump}
[23058e6a3f79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc22757 +0  66020000
[23058e6a4936] jit-backend-dump}
[23058e6a4d8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc22764 +0  7E020000
[23058e6a5780] jit-backend-dump}
[23058e6a5be6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc2277a +0  8D020000
[23058e6a6631] jit-backend-dump}
[23058e6a6a8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc22797 +0  95020000
[23058e6a74ae] jit-backend-dump}
[23058e6a791a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc227a0 +0  B1020000
[23058e6a828d] jit-backend-dump}
[23058e6a86f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc227d0 +0  A6020000
[23058e6a9086] jit-backend-dump}
[23058e6a94d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc227e7 +0  B4020000
[23058e6a9e8f] jit-backend-dump}
[23058e6aa2fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc227fc +0  C4020000
[23058e6aac88] jit-backend-dump}
[23058e6aba94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @7f5c1fc222e2 +0  E2030000
[23058e6ac44b] jit-backend-dump}
[23058e6ad27a] jit-backend}
[23058e6ae1ff] {jit-log-opt-bridge
# bridge out of Guard 7f5c1fbf69f8 with 60 ops
[p0, p1, p2, i3, i4, i5, p6, p7, p8, p9, p10, i11, i12]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #61 POP_BLOCK')
+76: p13 = getfield_gc_pure(p8, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+87: i14 = getfield_gc_pure(p8, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+91: setfield_gc(p2, ConstPtr(ptr15), descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+99: guard_value(i14, 4, descr=<Guard7f5c1fbf72e0>) [p0, p1, i14, p6, p7, p13, p9, p10, i11, i12]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #62 JUMP_ABSOLUTE')
+109: guard_not_invalidated(descr=<Guard7f5c1fc0d4c0>) [p0, p1, p6, p7, p13, p9, p10, i11, i12]
+109: i18 = getfield_raw(52008256, descr=<FieldS pypysig_long_struct.c_value 0>)
+117: i20 = int_lt(i18, 0)
guard_false(i20, descr=<Guard7f5c1fc0d448>) [p0, p1, p6, p7, p13, p9, p10, i11, i12]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #19 FOR_ITER')
+127: guard_class(p10, 25719440, descr=<Guard7f5c1fc0d3d0>) [p0, p1, p10, p6, p7, p13, p9, i11, i12]
+147: p22 = getfield_gc(p10, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+151: guard_nonnull(p22, descr=<Guard7f5c1fc0d358>) [p0, p1, p10, p22, p6, p7, p13, p9, i11, i12]
+160: i23 = getfield_gc(p10, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+164: p24 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+168: guard_class(p24, 26050592, descr=<Guard7f5c1fc0d2e0>) [p0, p1, p10, i23, p24, p22, p6, p7, p13, p9, i11, i12]
+182: p26 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+186: i27 = getfield_gc_pure(p26, descr=<FieldS tuple3.item0 8>)
+191: i28 = getfield_gc_pure(p26, descr=<FieldS tuple3.item1 16>)
+196: i29 = getfield_gc_pure(p26, descr=<FieldS tuple3.item2 24>)
+201: i31 = int_lt(i23, 0)
guard_false(i31, descr=<Guard7f5c1fc0d1f0>) [p0, p1, p10, i23, i29, i28, i27, p6, p7, p13, p9, i11, i12]
+211: i32 = int_ge(i23, i29)
guard_false(i32, descr=<Guard7f5c1fc0d178>) [p0, p1, p10, i23, i28, i27, p6, p7, p13, p9, i11, i12]
+220: i33 = int_mul(i23, i28)
+227: i34 = int_add(i27, i33)
+230: i36 = int_add(i23, 1)
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #22 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #25 SETUP_LOOP')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #28 LOAD_GLOBAL')
+234: p37 = getfield_gc(p1, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+245: setfield_gc(p10, i36, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+249: guard_value(p37, ConstPtr(ptr38), descr=<Guard7f5c1fc0d100>) [p0, p1, p37, p6, p7, p10, i34, p13, i11, i12]
+268: p39 = getfield_gc(p37, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+272: guard_value(p39, ConstPtr(ptr40), descr=<Guard7f5c1fc0d088>) [p0, p1, p39, p37, p6, p7, p10, i34, p13, i11, i12]
+291: p42 = getfield_gc(ConstPtr(ptr41), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+299: guard_value(p42, ConstPtr(ptr43), descr=<Guard7f5c1fc0d010>) [p0, p1, p42, p6, p7, p10, i34, p13, i11, i12]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #31 LOAD_CONST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #34 CALL_FUNCTION')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #37 GET_ITER')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+312: p44 = same_as(ConstPtr(ptr40))
+312: label(p1, p0, p6, p7, p13, i11, i34, i12, p10, descr=TargetToken(140033694068280))
p46 = new_with_vtable(25870864)
p48 = new_with_vtable(ConstClass(W_IntObject))
p50 = new_with_vtable(ConstClass(W_IntObject))
+438: setfield_gc(p48, i11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
p52 = new_with_vtable(ConstClass(W_IntObject))
+454: setfield_gc(p50, i34, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
p54 = new_with_vtable(25719440)
p56 = new_with_vtable(ConstClass(W_ListObject))
+480: setfield_gc(p46, 4, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+488: setfield_gc(p46, 62, descr=<FieldU pypy.interpreter.pyopcode.FrameBlock.inst_handlerposition 8>)
+496: setfield_gc(p46, p13, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+507: setfield_gc(p52, i12, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+518: setfield_gc(p56, ConstPtr(ptr59), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+526: setfield_gc(p56, ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+540: setfield_gc(p54, p56, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+544: jump(p1, p0, p6, p7, ConstPtr(ptr61), 0, p46, 5, 37, p48, p50, p52, p10, p54, ConstPtr(ptr65), ConstPtr(ptr66), ConstPtr(ptr66), descr=TargetToken(140033694068016))
+650: --end of the loop--
[23058e6ee25f] jit-log-opt-bridge}
[23058ed33766] {jit-backend-counts
entry 0:1
TargetToken(140033647686320):1
TargetToken(140033647686408):41
entry 1:1
TargetToken(140033647687464):1
TargetToken(140033647687552):41
entry 2:4647
TargetToken(140033647688080):4647
TargetToken(140033647688168):9292
entry 3:201
TargetToken(140033647688784):201
TargetToken(140033647688872):4468
bridge 140033648050928:4446
bridge 140033648055368:4268
TargetToken(140033694065200):4268
entry 4:1
TargetToken(140033694066168):1
TargetToken(140033694066080):1938
entry 5:3173
bridge 140033694343920:2882
bridge 140033694346080:2074
bridge 140033694345600:158
entry 6:377
TargetToken(140033694067400):527
TargetToken(140033694067488):1411
bridge 140033694346800:1420
bridge 140033646203376:150
bridge 140033694346200:50
bridge 140033694346440:7
entry 7:201
TargetToken(140033694068016):9990
TargetToken(140033694068104):998737
bridge 140033646356984:9790
TargetToken(140033694068280):9789
[23058ed3d252] jit-backend-counts}
