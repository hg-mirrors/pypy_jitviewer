[2d44fa884aa8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8000 +0  4157415641554154415341524151415057565554535251504889E341BBB0D1E20041FFD34889DF41BBC04AF60041FFD3488D65D8415F415E415D415C5B5DC3
[2d44fa89d396] jit-backend-dump}
[2d44fa89fa66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a803f +0  4157415641554154415341524151415057565554535251504889E341BB60D2E20041FFD34889DF41BBC04AF60041FFD3488D65D8415F415E415D415C5B5DC3
[2d44fa8a2c46] jit-backend-dump}
[2d44fa8ab6ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a807e +0  4883EC40488944243848894C24304889542428488974242048897C24184C894424104C894C24084C891424488B7C244841BBE0C3ED0041FFD3488B442438488B4C2430488B542428488B742420488B7C24184C8B4424104C8B4C24084C8B1424488D642440C20800
[2d44fa8af180] jit-backend-dump}
[2d44fa8b4e7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a80e6 +0  4883EC40488944243848894C24304889542428488974242048897C24184C894424104C894C24084C891424488B7C244841BB00F2ED0041FFD3488B442448F6400480488B442438488B4C2430488B542428488B742420488B7C24184C8B4424104C8B4C24084C8B1424488D642440C20800
[2d44fa8b85f4] jit-backend-dump}
[2d44fa8be252] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8157 +0  4157415641554154415341524151415057565554535251504889E34881EC80000000F20F110424F20F114C2408F20F11542410F20F115C2418F20F11642420F20F116C2428F20F11742430F20F117C2438F2440F11442440F2440F114C2448F2440F11542450F2440F115C2458F2440F11642460F2440F116C2468F2440F11742470F2440F117C247841BBB0D1E20041FFD34889DF41BBC04AF60041FFD3488D65D8415F415E415D415C5B5DC3
[2d44fa8c2656] jit-backend-dump}
[2d44fa8c448c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8204 +0  4157415641554154415341524151415057565554535251504889E34881EC80000000F20F110424F20F114C2408F20F11542410F20F115C2418F20F11642420F20F116C2428F20F11742430F20F117C2438F2440F11442440F2440F114C2448F2440F11542450F2440F115C2458F2440F11642460F2440F116C2468F2440F11742470F2440F117C247841BB60D2E20041FFD34889DF41BBC04AF60041FFD3488D65D8415F415E415D415C5B5DC3
[2d44fa8c844c] jit-backend-dump}
[2d44fa8ccfa6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a82b
[2d44fa8d3a50] jit-backend-dump}
[2d44fa8d6abc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a
[2d44fa8dce82] jit-backend-dump}
[2d44fa8e1f1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a85b0 +0  41BBC0D1E20041FFD3B803000000488D65D8415F415E415D415C5B5DC3
[2d44fa8e41f0] jit-backend-dump}
[2d44fa8eae74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a85cd +0  F20F11442410F20F114C2418F20F11542420F20F115C2428F20F11642430F20F116C2438F20F11742440F20F117C2448F2440F11442450F2440F114C2458F2440F11542460F2440F115C2468F2440F11642470F2440F116C2478F2440F11B42480000000F2440F11BC24880000004829C24C8945A04C894DA848894D804889759048897D984C8955B04889D741BB20BDF20041FFE3
[2d44fa9056ac] jit-backend-dump}
[2d44fa90d026] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8662 +0  4C8B45A04C8B4DA8488B4D80488B7590488B7D984C8B55B0F20F10442410F20F104C2418F20F10542420F20F105C2428F20F10642430F20F106C2438F20F10742440F20F107C2448F2440F10442450F2440F104C2458F2440F10542460F2440F105C2468F2440F10642470F2440F106C2478F2440F10B42480000000F2440F10BC24880000004885C07409488B1425F00C7101C349BBB0855AF3A27F000041FFE3
[2d44fa91123e] jit-backend-dump}
[2d44fa915612] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8703 +0  57565251415041514883EC40F20F110424F20F114C2408F20F11542410F20F115C2418F20F11642420F20F116C2428F20F11742430F20F117C24384889E741BBB0A05A0041FFD3488B04256003D3024885C0753CF20F107C2438F20F10742430F20F106C2428F20F10642420F20F105C2418F20F10542410F20F104C2408F20F1004244883C44041594158595A5E5FC341BB60D2E20041FFD3B8030000004883C478C3
[2d44fa919650] jit-backend-dump}
[2d44fa91b054] {jit-backend-counts
[2d44fa91b8b2] jit-backend-counts}
[2d44fb25969a] {jit-backend
[2d44fb315b3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a87a
[2d44fb322c82] jit-backend-dump}
[2d44fb323888] {jit-backend-addr
Loop 0 (<code object f, file 'source.py', line 4> #9 LOAD_FAST) has address 7fa2f35a87dc to 7fa2f35a891b (bootstrap 7fa2f35a87a6)
[2d44fb3258aa] jit-backend-addr}
[2d44fb3269fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a87d8 +0  40FFFFFF
[2d44fb328568] jit-backend-dump}
[2d44fb329582] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a887b +0  9C000000
[2d44fb32ad34] jit-backend-dump}
[2d44fb32b790] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a888d +0  A7000000
[2d44fb32cbd6] jit-backend-dump}
[2d44fb32d51e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8897 +0  B8000000
[2d44fb32e9b2] jit-backend-dump}
[2d44fb32f2be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a88aa +0  BF000000
[2d44fb3306d4] jit-backend-dump}
[2d44fb330fce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a88bb +0  C7000000
[2d44fb3323f6] jit-backend-dump}
[2d44fb333098] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a88d1 +0  DF000000
[2d44fb33476c] jit-backend-dump}
[2d44fb3351ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a88fc +0  CB000000
[2d44fb3365a2] jit-backend-dump}
[2d44fb349706] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8912 +0  E4000000
[2d44fb34b260] jit-backend-dump}
[2d44fb34c610] jit-backend}
[2d44fb34e64a] {jit-log-opt-loop
# Loop 0 (<code object f, file 'source.py', line 4> #9 LOAD_FAST) : loop with 53 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+92: i4 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+96: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+100: i6 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+108: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+112: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+116: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+120: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+124: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+128: p15 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+128: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, descr=TargetToken(140337845502144))
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
+207: guard_value(i4, 1, descr=<Guard4>) [i4, p1, p0, p2, p3, p5, i6, i7, p10, p12, p14]
+217: guard_nonnull_class(p10, ConstClass(W_IntObject), descr=<Guard5>) [p1, p0, p10, p2, p3, p5, i6, p12, p14]
+235: guard_value(i6, 0, descr=<Guard6>) [i6, p1, p0, p2, p3, p5, p10, p14]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #12 LOAD_CONST')
+245: guard_value(p2, ConstPtr(ptr19), descr=<Guard7>) [p1, p0, p2, p3, p5, p10, p14]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #15 COMPARE_OP')
+264: i20 = getfield_gc_pure(p10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+268: i22 = int_lt(i20, 1103)
guard_true(i22, descr=<Guard8>) [p1, p0, p10, p3, p5]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #21 LOAD_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #24 LOAD_CONST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #27 INPLACE_ADD')
+281: i24 = int_add(i20, 1)
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #28 STORE_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #31 JUMP_ABSOLUTE')
+285: guard_not_invalidated(, descr=<Guard9>) [p1, p0, p3, p5, i24]
+285: i26 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+293: i28 = int_lt(i26, 0)
guard_false(i28, descr=<Guard10>) [p1, p0, p3, p5, i24]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
+303: label(p0, p1, p3, p5, i24, descr=TargetToken(140337845502224))
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #12 LOAD_CONST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #15 COMPARE_OP')
+333: i29 = int_lt(i24, 1103)
guard_true(i29, descr=<Guard11>) [p1, p0, p3, p5, i24]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #21 LOAD_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #24 LOAD_CONST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #27 INPLACE_ADD')
+346: i30 = int_add(i24, 1)
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #28 STORE_FAST')
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #31 JUMP_ABSOLUTE')
+350: guard_not_invalidated(, descr=<Guard12>) [p1, p0, p3, p5, i30, None]
+350: i32 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+358: i33 = int_lt(i32, 0)
guard_false(i33, descr=<Guard13>) [p1, p0, p3, p5, i30, None]
debug_merge_point(0, 0, '<code object f. file 'source.py'. line 4> #9 LOAD_FAST')
+368: jump(p0, p1, p3, p5, i30, descr=TargetToken(140337845502224))
+373: --end of the loop--
[2d44fb44ac8c] jit-log-opt-loop}
[2d44fba06d12] {jit-backend
[2d44fba9fcbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8a1f
[2d44fbaaf822] jit-backend-dump}
[2d44fbab0dac] {jit-backend-addr
Loop 1 (<code object inlined_call, file 'source.py', line 14> #9 LOAD_FAST) has address 7fa2f35a8a55 to 7fa2f35a8bea (bootstrap 7fa2f35a8a1f)
[2d44fbab2b04] jit-backend-addr}
[2d44fbab3764] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8a51 +0  40FFFFFF
[2d44fbab53d2] jit-backend-dump}
[2d44fbab60ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8aed +0  F9000000
[2d44fbab791c] jit-backend-dump}
[2d44fbab8342] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8aff +0  04010000
[2d44fbab9944] jit-backend-dump}
[2d44fbaba322] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8b09 +0  15010000
[2d44fbabb84c] jit-backend-dump}
[2d44fbabc1d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8b1c +0  1C010000
[2d44fbabd5a4] jit-backend-dump}
[2d44fbabde8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8b2d +0  24010000
[2d44fbabf2ae] jit-backend-dump}
[2d44fbabfba2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8b44 +0  24010000
[2d44fbac1144] jit-backend-dump}
[2d44fbac1b22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8b5b +0  25010000
[2d44fbac2f20] jit-backend-dump}
[2d44fbac3aa8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8b7c +0  35010000
[2d44fbac4f9c] jit-backend-dump}
[2d44fbac58d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8b8a +0  42010000
[2d44fbac6c64] jit-backend-dump}
[2d44fbac759a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8ba0 +0  5F010000
[2d44fbac899e] jit-backend-dump}
[2d44fbac92ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8bcb +0  4D010000
[2d44fbaca8d0] jit-backend-dump}
[2d44fbacb33e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8be1 +0  65010000
[2d44fbad7668] jit-backend-dump}
[2d44fbad8c04] jit-backend}
[2d44fbada668] {jit-log-opt-loop
# Loop 1 (<code object inlined_call, file 'source.py', line 14> #9 LOAD_FAST) : loop with 76 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+92: i4 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+96: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+100: i6 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+108: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+112: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+116: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+120: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+124: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+128: p15 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+128: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, descr=TargetToken(140337845502384))
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
+200: guard_value(i4, 1, descr=<Guard14>) [i4, p1, p0, p2, p3, p5, i6, i7, p10, p12, p14]
+210: guard_nonnull_class(p10, ConstClass(W_IntObject), descr=<Guard15>) [p1, p0, p10, p2, p3, p5, i6, p12, p14]
+228: guard_value(i6, 0, descr=<Guard16>) [i6, p1, p0, p2, p3, p5, p10, p14]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #12 LOAD_CONST')
+238: guard_value(p2, ConstPtr(ptr19), descr=<Guard17>) [p1, p0, p2, p3, p5, p10, p14]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #15 COMPARE_OP')
+257: i20 = getfield_gc_pure(p10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+261: i22 = int_lt(i20, 1103)
guard_true(i22, descr=<Guard18>) [p1, p0, p10, p3, p5]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #21 LOAD_GLOBAL')
+274: p23 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+278: guard_value(p23, ConstPtr(ptr24), descr=<Guard19>) [p1, p0, p23, p3, p5, p10]
+297: p25 = getfield_gc(p23, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+301: guard_value(p25, ConstPtr(ptr26), descr=<Guard20>) [p1, p0, p25, p23, p3, p5, p10]
+320: guard_not_invalidated(, descr=<Guard21>) [p1, p0, p23, p3, p5, p10]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #24 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #27 CALL_FUNCTION')
+320: p28 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+336: p29 = getfield_gc(p28, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+340: i30 = force_token()
+340: p31 = getfield_gc(p28, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+344: guard_isnull(p31, descr=<Guard22>) [p1, p0, p28, p31, p3, p5, p10, p29, i30]
+353: i32 = getfield_gc(p28, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 48>)
+357: i33 = int_is_zero(i32)
guard_true(i33, descr=<Guard23>) [p1, p0, p28, p3, p5, p10, p29, i30]
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #0 LOAD_FAST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #3 LOAD_CONST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #6 BINARY_ADD')
+367: i35 = int_add(i20, 1)
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #7 RETURN_VALUE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #30 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #33 JUMP_ABSOLUTE')
+371: guard_not_invalidated(, descr=<Guard24>) [p1, p0, p3, p5, i35, None, None]
+371: i38 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+379: i40 = int_lt(i38, 0)
guard_false(i40, descr=<Guard25>) [p1, p0, p3, p5, i35, None, None]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
+389: p41 = same_as(ConstPtr(ptr26))
+389: label(p0, p1, p3, p5, i35, descr=TargetToken(140337845502464))
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #12 LOAD_CONST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #15 COMPARE_OP')
+419: i42 = int_lt(i35, 1103)
guard_true(i42, descr=<Guard26>) [p1, p0, p3, p5, i35]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #21 LOAD_GLOBAL')
+432: guard_not_invalidated(, descr=<Guard27>) [p1, p0, p3, p5, i35]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #24 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #27 CALL_FUNCTION')
+432: i43 = force_token()
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #0 LOAD_FAST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #3 LOAD_CONST')
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #6 BINARY_ADD')
+432: i44 = int_add(i35, 1)
debug_merge_point(1, 1, '<code object inner. file 'source.py'. line 11> #7 RETURN_VALUE')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #30 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #33 JUMP_ABSOLUTE')
+436: i45 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+444: i46 = int_lt(i45, 0)
guard_false(i46, descr=<Guard28>) [p1, p0, p3, p5, i44, None]
debug_merge_point(0, 0, '<code object inlined_call. file 'source.py'. line 14> #9 LOAD_FAST')
+454: jump(p0, p1, p3, p5, i44, descr=TargetToken(140337845502464))
+459: --end of the loop--
[2d44fbb61fc2] jit-log-opt-loop}
[2d44fbb786f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8b5f +0  E939010000
[2d44fbb7bc8a] jit-backend-dump}
[2d44fbb7c782] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8b92 +0  E953010000
[2d44fbb7df1c] jit-backend-dump}
[2d44fbb7e95a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8bcf +0  E95F010000
[2d44fbb7ff20] jit-backend-dump}
[2d44fc12e17c] {jit-backend
[2d44fc24be42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8d
[2d44fc26744e] jit-backend-dump}
[2d44fc268492] {jit-backend-addr
Loop 2 (<code object uninlined_call, file 'source.py', line 21> #19 FOR_ITER) has address 7fa2f35a8d98 to 7fa2f35a8f72 (bootstrap 7fa2f35a8d62)
[2d44fc26a70c] jit-backend-addr}
[2d44fc26b55e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8d94 +0  30FFFFFF
[2d44fc26d214] jit-backend-dump}
[2d44fc26dec8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8e46 +0  28010000
[2d44fc26f55a] jit-backend-dump}
[2d44fc26ff98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8e52 +0  3B010000
[2d44fc27162a] jit-backend-dump}
[2d44fc272002] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8e5f +0  4B010000
[2d44fc273568] jit-backend-dump}
[2d44fc273f4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8e73 +0  55010000
[2d44fc27539e] jit-backend-dump}
[2d44fc275c80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8e8d +0  5B010000
[2d44fc277078] jit-backend-dump}
[2d44fc277978] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8e96 +0  73010000
[2d44fc278dc4] jit-backend-dump}
[2d44fc2796dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8eb5 +0  74010000
[2d44fc27acc0] jit-backend-dump}
[2d44fc27b6b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8ec7 +0  7F010000
[2d44fc27cc4c] jit-backend-dump}
[2d44fc27d522] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8eda +0  87010000
[2d44fc27e914] jit-backend-dump}
[2d44fc27f202] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8ee8 +0  94010000
[2d44fc280654] jit-backend-dump}
[2d44fc28119a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8efa +0  B5010000
[2d44fc2825f8] jit-backend-dump}
[2d44fc282f1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8f28 +0  A0010000
[2d44fc284458] jit-backend-dump}
[2d44fc284e24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8f4a +0  9A010000
[2d44fc2863c0] jit-backend-dump}
[2d44fc286d9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8f5c +0  BE010000
[2d44fc288220] jit-backend-dump}
[2d44fc2892f4] jit-backend}
[2d44fc28ad52] {jit-log-opt-loop
# Loop 2 (<code object uninlined_call, file 'source.py', line 21> #19 FOR_ITER) : loop with 73 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+92: i4 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+96: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+100: i6 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+108: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+112: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+116: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+120: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+124: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+128: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+132: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+136: p19 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+136: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, descr=TargetToken(140337845502624))
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+222: guard_value(i4, 3, descr=<Guard29>) [i4, p1, p0, p2, p3, p5, i6, i7, p10, p12, p14, p16, p18]
+232: guard_class(p14, 27376640, descr=<Guard30>) [p1, p0, p14, p2, p3, p5, i6, p10, p12, p16, p18]
+244: p22 = getfield_gc(p14, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+248: guard_nonnull(p22, descr=<Guard31>) [p1, p0, p14, p22, p2, p3, p5, i6, p10, p12, p16, p18]
+257: i23 = getfield_gc(p14, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+261: p24 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+265: guard_class(p24, 27558936, descr=<Guard32>) [p1, p0, p14, i23, p24, p22, p2, p3, p5, i6, p10, p12, p16, p18]
+277: p26 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+281: i27 = getfield_gc_pure(p26, descr=<FieldS tuple3.item0 8>)
+285: i28 = getfield_gc_pure(p26, descr=<FieldS tuple3.item1 16>)
+289: i29 = getfield_gc_pure(p26, descr=<FieldS tuple3.item2 24>)
+293: i31 = int_lt(i23, 0)
guard_false(i31, descr=<Guard33>) [p1, p0, p14, i23, i29, i28, i27, p2, p3, p5, i6, p10, p12, p16, p18]
+303: i32 = int_ge(i23, i29)
guard_false(i32, descr=<Guard34>) [p1, p0, p14, i23, i28, i27, p2, p3, p5, i6, p10, p12, p16, p18]
+312: i33 = int_mul(i23, i28)
+319: i34 = int_add(i27, i33)
+325: i36 = int_add(i23, 1)
+329: setfield_gc(p14, i36, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+333: guard_value(i6, 0, descr=<Guard35>) [i6, p1, p0, p2, p3, p5, p10, p12, p14, p18, i34]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
+343: guard_nonnull_class(p10, ConstClass(W_IntObject), descr=<Guard36>) [p1, p0, p10, p2, p3, p5, p14, p18, i34]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
+361: guard_value(p2, ConstPtr(ptr39), descr=<Guard37>) [p1, p0, p2, p3, p5, p10, p14, p18, i34]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+380: i40 = getfield_gc_pure(p10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+384: i42 = int_add_ovf(i40, 1)
guard_no_overflow(, descr=<Guard38>) [p1, p0, p10, i42, p3, p5, p14, i34]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+394: guard_not_invalidated(, descr=<Guard39>) [p1, p0, p3, p5, p14, i42, i34]
+394: i44 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+402: i46 = int_lt(i44, 0)
guard_false(i46, descr=<Guard40>) [p1, p0, p3, p5, p14, i42, i34]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+412: label(p0, p1, p3, p5, i42, i34, p14, i36, i29, i28, i27, descr=TargetToken(140337845502704))
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+449: i47 = int_ge(i36, i29)
guard_false(i47, descr=<Guard41>) [p1, p0, p14, i36, i28, i27, p3, p5, i34, i42]
+458: i48 = int_mul(i36, i28)
+465: i49 = int_add(i27, i48)
+471: i50 = int_add(i36, 1)
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+475: setfield_gc(p14, i50, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+479: i51 = int_add_ovf(i42, 1)
guard_no_overflow(, descr=<Guard42>) [p1, p0, i51, p3, p5, p14, i49, None, i42]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+492: guard_not_invalidated(, descr=<Guard43>) [p1, p0, p3, p5, p14, i51, i49, None, None]
+492: i53 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+500: i54 = int_lt(i53, 0)
guard_false(i54, descr=<Guard44>) [p1, p0, p3, p5, p14, i51, i49, None, None]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+510: jump(p0, p1, p3, p5, i51, i49, p14, i50, i29, i28, i27, descr=TargetToken(140337845502704))
+528: --end of the loop--
[2d44fc31fd26] jit-log-opt-loop}
[2d44fca00807] {jit-backend
[2d44fcaa9803] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a
[2d44fcaba58b] jit-backend-dump}
[2d44fcabb2bd] {jit-backend-addr
Loop 3 (<code object bridge, file 'source.py', line 27> #15 LOAD_FAST) has address 7fa2f35a916f to 7fa2f35a9386 (bootstrap 7fa2f35a9139)
[2d44fcabd11d] jit-backend-addr}
[2d44fcabdddd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a916b +0  20FFFFFF
[2d44fcabf979] jit-backend-dump}
[2d44fcac0615] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9212 +0  70010000
[2d44fcac1bf9] jit-backend-dump}
[2d44fcac2571] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9224 +0  7C010000
[2d44fcac39e1] jit-backend-dump}
[2d44fcac42ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a922e +0  8E010000
[2d44fcac59bb] jit-backend-dump}
[2d44fcac640b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9241 +0  96010000
[2d44fcac79c5] jit-backend-dump}
[2d44fcad4d21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9252 +0  9F010000
[2d44fcad69d1] jit-backend-dump}
[2d44fcad7475] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9265 +0  A4010000
[2d44fcad8987] jit-backend-dump}
[2d44fcad92cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a929d +0  85010000
[2d44fcada64f] jit-backend-dump}
[2d44fcadaf73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a92af +0  8C010000
[2d44fcadc587] jit-backend-dump}
[2d44fcadcfdd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a92bd +0  97010000
[2d44fcade4fb] jit-backend-dump}
[2d44fcadf2c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a92da +0  AD010000
[2d44fcae0745] jit-backend-dump}
[2d44fcae10a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9305 +0  9B010000
[2d44fcae245b] jit-backend-dump}
[2d44fcae2dc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9318 +0  A0010000
[2d44fcae416b] jit-backend-dump}
[2d44fcae4c3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a934f +0  82010000
[2d44fcae6151] jit-backend-dump}
[2d44fcae6b6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9360 +0  8A010000
[2d44fcae8041] jit-backend-dump}
[2d44fcae8a31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a937d +0  A2010000
[2d44fcae9dff] jit-backend-dump}
[2d44fcaeaee5] jit-backend}
[2d44fcaec92b] {jit-log-opt-loop
# Loop 3 (<code object bridge, file 'source.py', line 27> #15 LOAD_FAST) : loop with 92 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+92: i4 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+96: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+100: i6 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+108: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+112: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+116: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+120: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+124: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+128: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+132: p17 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+132: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, descr=TargetToken(140337845502864))
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+211: guard_value(i4, 2, descr=<Guard45>) [i4, p1, p0, p2, p3, p5, i6, i7, p10, p12, p14, p16]
+221: guard_nonnull_class(p12, ConstClass(W_IntObject), descr=<Guard46>) [p1, p0, p12, p2, p3, p5, i6, p10, p14, p16]
+239: guard_value(i6, 0, descr=<Guard47>) [i6, p1, p0, p2, p3, p5, p10, p12, p16]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
+249: guard_value(p2, ConstPtr(ptr21), descr=<Guard48>) [p1, p0, p2, p3, p5, p10, p12, p16]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+268: i22 = getfield_gc_pure(p12, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+272: i24 = int_lt(i22, 10000)
guard_true(i24, descr=<Guard49>) [p1, p0, p12, p3, p5, p10]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+285: i26 = int_eq(i22, -9223372036854775808)
guard_false(i26, descr=<Guard50>) [p1, p0, p12, i22, p3, p5, p10]
+304: i28 = int_mod(i22, 2)
+331: i30 = int_rshift(i28, 63)
+338: i31 = int_and(2, i30)
+347: i32 = int_add(i28, i31)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+350: i33 = int_is_true(i32)
guard_false(i33, descr=<Guard51>) [p1, p0, p3, p5, p10, p12, i32]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
+360: guard_nonnull_class(p10, ConstClass(W_IntObject), descr=<Guard52>) [p1, p0, p10, p3, p5, p12, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+378: i36 = getfield_gc_pure(p10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+382: i38 = int_add_ovf(i36, 1)
guard_no_overflow(, descr=<Guard53>) [p1, p0, p10, i38, p3, p5, p12, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+392: i40 = int_add(i22, 1)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+403: guard_not_invalidated(, descr=<Guard54>) [p1, p0, p3, p5, i38, i40, None]
+403: i42 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+411: i44 = int_lt(i42, 0)
guard_false(i44, descr=<Guard55>) [p1, p0, p3, p5, i38, i40, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+421: label(p0, p1, p3, p5, i38, i40, descr=TargetToken(140337845502944))
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+451: i45 = int_lt(i40, 10000)
guard_true(i45, descr=<Guard56>) [p1, p0, p3, p5, i38, i40]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+464: i46 = int_eq(i40, -9223372036854775808)
guard_false(i46, descr=<Guard57>) [p1, p0, i40, p3, p5, i38, None]
+483: i47 = int_mod(i40, 2)
+510: i48 = int_rshift(i47, 63)
+517: i49 = int_and(2, i48)
+525: i50 = int_add(i47, i49)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+528: i51 = int_is_true(i50)
guard_false(i51, descr=<Guard58>) [p1, p0, p3, p5, i50, i38, i40]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+538: i52 = int_add_ovf(i38, 1)
guard_no_overflow(, descr=<Guard59>) [p1, p0, i52, p3, p5, None, i38, i40]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+555: i53 = int_add(i40, 1)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+566: guard_not_invalidated(, descr=<Guard60>) [p1, p0, p3, p5, i53, i52, None, None, None]
+566: i54 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+574: i55 = int_lt(i54, 0)
guard_false(i55, descr=<Guard61>) [p1, p0, p3, p5, i53, i52, None, None, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+584: jump(p0, p1, p3, p5, i52, i53, descr=TargetToken(140337845502944))
+589: --end of the loop--
[2d44fcb87c9b] jit-log-opt-loop}
[2d44fccba32b] {jit-backend
[2d44fcd05931] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a
[2d44fcd0c981] jit-backend-dump}
[2d44fcd0d175] {jit-backend-addr
bridge out of Guard 41 has address 7fa2f35a9549 to 7fa2f35a96fd
[2d44fcd0e2df] jit-backend-addr}
[2d44fcd0ebff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a954c +0  A0FEFFFF
[2d44fcd0fe07] jit-backend-dump}
[2d44fcd10883] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a958d +0  6C010000
[2d44fcd11819] jit-backend-dump}
[2d44fcd11efd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9596 +0  7C010000
[2d44fcd12bff] jit-backend-dump}
[2d44fcd1360b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a8f28 +0  1D060000
[2d44fcd14181] jit-backend-dump}
[2d44fcd14b89] jit-backend}
[2d44fcd15d91] {jit-log-opt-bridge
# bridge out of Guard 41 with 27 ops
[p0, p1, p2, i3, i4, i5, p6, p7, i8, i9]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #38 POP_BLOCK')
+37: p10 = getfield_gc_pure(p6, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+49: i11 = getfield_gc_pure(p6, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+54: setfield_gc(p2, ConstPtr(ptr12), descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+62: guard_value(i11, 2, descr=<Guard62>) [p0, p1, i11, p10, p7, i9, i8]
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #39 LOAD_FAST')
debug_merge_point(0, 0, '<code object uninlined_call. file 'source.py'. line 21> #42 RETURN_VALUE')
+72: guard_isnull(p10, descr=<Guard63>) [p0, p1, p10, p7, i9, i8]
+81: p14 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+92: p15 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
p17 = new_with_vtable(ConstClass(W_IntObject))
+155: setfield_gc(p1, 1, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_frame_finished_execution 141>)
setfield_gc(p1, ConstPtr(ptr19), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+204: setfield_gc(p1, ConstPtr(ptr20), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+212: setfield_gc(p1, 2, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
setfield_gc(p1, p7, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+251: setfield_gc(p1, 0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+259: setfield_gc(p1, 42, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
setarrayitem_gc(p14, 0, p17, descr=<ArrayP 8>)
p26 = new_with_vtable(ConstClass(W_IntObject))
+319: setfield_gc(p26, i8, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
setarrayitem_gc(p14, 1, p26, descr=<ArrayP 8>)
+368: setarrayitem_gc(p14, 2, ConstPtr(ptr29), descr=<ArrayP 8>)
+377: setarrayitem_gc(p14, 3, ConstPtr(ptr31), descr=<ArrayP 8>)
+386: setarrayitem_gc(p14, 4, ConstPtr(ptr31), descr=<ArrayP 8>)
+395: setfield_gc(p17, i9, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+399: finish(p17, descr=<DoneWithThisFrameDescrRef object at 0x1b22600>)
+436: --end of the loop--
[2d44fcd45969] jit-log-opt-bridge}
[2d44fdda68b6] {jit-backend
[2d44fe2180f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a
[2d44fe245f72] jit-backend-dump}
[2d44fe247322] {jit-backend-addr
bridge out of Guard 58 has address 7fa2f35a9766 to 7fa2f35a9b6e
[2d44fe2490da] jit-backend-addr}
[2d44fe24a3e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9769 +0  90FEFFFF
[2d44fe24bf6c] jit-backend-dump}
[2d44fe24d196] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a97a5 +0  C5030000
[2d44fe24e8a6] jit-backend-dump}
[2d44fe24f380] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a97bc +0  C7030000
[2d44fe2507a8] jit-backend-dump}
[2d44fe25130c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a97d6 +0  E0030000
[2d44fe252746] jit-backend-dump}
[2d44fe25304c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a97e4 +0  EE030000
[2d44fe25444a] jit-backend-dump}
[2d44fe254e0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a97f9 +0  0F040000
[2d44fe25635e] jit-backend-dump}
[2d44fe256db4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a980b +0  19040000
[2d44fe2586aa] jit-backend-dump}
[2d44fe259070] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a99f6 +0  49020000
[2d44fe25a540] jit-backend-dump}
[2d44fe25aedc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9a05 +0  56020000
[2d44fe25c316] jit-backend-dump}
[2d44fe25cd4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9a19 +0  5E020000
[2d44fe25e11c] jit-backend-dump}
[2d44fe25ea0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9a36 +0  5E020000
[2d44fe25ffd0] jit-backend-dump}
[2d44fe2609cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9a67 +0  49020000
[2d44fe261fbc] jit-backend-dump}
[2d44fe2629d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9a82 +0  4B020000
[2d44fe263e0a] jit-backend-dump}
[2d44fe264722] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9a96 +0  50020000
[2d44fe265b02] jit-backend-dump}
[2d44fe2663fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9aa7 +0  59020000
[2d44fe26781e] jit-backend-dump}
[2d44fe268940] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9ab9 +0  7B020000
[2d44fe269f8a] jit-backend-dump}
[2d44fe26a9e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9ae4 +0  6A020000
[2d44fe26be80] jit-backend-dump}
[2d44fe26c750] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9af7 +0  6F020000
[2d44fe26db3c] jit-backend-dump}
[2d44fe26e41e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9b2c +0  53020000
[2d44fe26f828] jit-backend-dump}
[2d44fe270158] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9b3d +0  5B020000
[2d44fe271538] jit-backend-dump}
[2d44fe272030] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9b5a +0  73020000
[2d44fe2735fc] jit-backend-dump}
[2d44fe2744c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a934f +0  13040000
[2d44fe275c00] jit-backend-dump}
[2d44fe276c98] jit-backend}
[2d44fe278bb8] {jit-log-opt-bridge
# bridge out of Guard 58 with 137 ops
[p0, p1, p2, p3, i4, i5, i6]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #37 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #40 LOAD_GLOBAL')
+37: p7 = getfield_gc(p1, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+48: guard_value(p7, ConstPtr(ptr8), descr=<Guard65>) [p0, p1, p7, p2, p3, i6, i5]
+67: p9 = getfield_gc(p7, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+71: guard_value(p9, ConstPtr(ptr10), descr=<Guard66>) [p0, p1, p9, p7, p2, p3, i6, i5]
+90: guard_not_invalidated(, descr=<Guard67>) [p0, p1, p7, p2, p3, i6, i5]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #43 CALL_FUNCTION')
+90: p12 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+99: p13 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+103: i14 = force_token()
+103: p15 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+107: guard_isnull(p15, descr=<Guard68>) [p0, p1, p12, p15, p2, p3, i14, p13, i6, i5]
+116: i16 = getfield_gc(p12, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 48>)
+120: i17 = int_is_zero(i16)
guard_true(i17, descr=<Guard69>) [p0, p1, p12, p2, p3, i14, p13, i6, i5]
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #0 LOAD_CONST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #3 STORE_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #6 SETUP_LOOP')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #9 LOAD_GLOBAL')
+130: guard_not_invalidated(, descr=<Guard70>) [p0, p1, p12, p2, p3, i14, p13, i6, i5]
+130: p19 = getfield_gc(ConstPtr(ptr18), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+138: guard_value(p19, ConstPtr(ptr20), descr=<Guard71>) [p0, p1, p12, p19, p2, p3, i14, p13, i6, i5]
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #12 LOAD_CONST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #15 CALL_FUNCTION')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #18 GET_ITER')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+151: i22 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+159: i24 = int_lt(i22, 0)
guard_false(i24, descr=<Guard72>) [p0, p1, p12, p2, p3, i14, p13, i6, i5]
debug_merge_point(1, 1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+169: i25 = force_token()
p27 = new_with_vtable(27448024)
p29 = new_array(0, descr=<ArrayP 8>)
p31 = new_array(5, descr=<ArrayP 8>)
p33 = new_with_vtable(ConstClass(W_IntObject))
p35 = new_with_vtable(ConstClass(W_IntObject))
p37 = new_with_vtable(27376640)
p39 = new_with_vtable(ConstClass(W_ListObject))
p41 = new_with_vtable(27448768)
+359: setfield_gc(p41, i14, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p12, p41, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+394: setfield_gc(p1, i25, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+405: setfield_gc(p27, ConstPtr(ptr42), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+419: setfield_gc(p27, 19, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+427: setfield_gc(p27, ConstPtr(ptr8), descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+441: setfield_gc(p27, p13, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+445: setfield_gc(p27, p29, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+449: setfield_gc(p27, 3, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+457: setfield_gc(p33, 1, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+466: setarrayitem_gc(p31, 0, p33, descr=<ArrayP 8>)
+470: setarrayitem_gc(p31, 1, p35, descr=<ArrayP 8>)
+474: setfield_gc(p37, 1, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+482: setfield_gc(p39, ConstPtr(ptr49), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+496: setfield_gc(p39, ConstPtr(ptr50), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+504: setfield_gc(p37, p39, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+508: setarrayitem_gc(p31, 2, p37, descr=<ArrayP 8>)
+512: setfield_gc(p27, p31, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+516: setfield_gc(p27, ConstPtr(ptr52), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+530: setfield_gc(p27, 21, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_f_lineno 136>)
+540: p54 = call_assembler(p27, p12, descr=<Loop2>)
guard_not_forced(, descr=<Guard64>) [p0, p1, p12, p27, p54, p41, p2, p3, i6, i5]
+660: keepalive(p27)
+660: guard_no_exception(, descr=<Guard73>) [p0, p1, p12, p27, p54, p41, p2, p3, i6, i5]
+675: p55 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+686: guard_isnull(p55, descr=<Guard74>) [p0, p1, p54, p12, p27, p55, p41, p2, p3, i6, i5]
+695: i56 = getfield_gc(p12, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 48>)
+699: setfield_gc(p27, ConstPtr(ptr57), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+714: i58 = int_is_true(i56)
guard_false(i58, descr=<Guard75>) [p0, p1, p54, p27, p12, p41, p2, p3, i6, i5]
+724: p59 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+728: p60 = getfield_gc(p27, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+732: i61 = getfield_gc(p27, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_escaped 140>)
setfield_gc(p12, p60, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+764: guard_false(i61, descr=<Guard76>) [p0, p1, p54, p59, p27, p12, p41, p2, p3, i6, i5]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #46 INPLACE_ADD')
+773: setfield_gc(p41, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+788: guard_class(p54, ConstClass(W_IntObject), descr=<Guard77>) [p0, p1, p54, p2, p3, i6, i5]
+800: i64 = getfield_gc_pure(p54, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+804: i65 = int_add_ovf(i5, i64)
guard_no_overflow(, descr=<Guard78>) [p0, p1, p54, i65, p2, p3, i6, i5]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #47 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #50 JUMP_FORWARD')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+820: i67 = int_add_ovf(i6, 1)
guard_no_overflow(, descr=<Guard79>) [p0, p1, i67, p2, p3, i65, i6, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+837: guard_not_invalidated(, descr=<Guard80>) [p0, p1, p2, p3, i67, i65, None, None]
+837: i70 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+845: i72 = int_lt(i70, 0)
guard_false(i72, descr=<Guard81>) [p0, p1, p2, p3, i67, i65, None, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+855: label(p1, p0, p2, p3, i65, i67, descr=TargetToken(140337845723568))
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+885: i74 = int_lt(i67, 10000)
guard_true(i74, descr=<Guard82>) [p0, p1, p2, p3, i65, i67]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+898: i76 = int_eq(i67, -9223372036854775808)
guard_false(i76, descr=<Guard83>) [p0, p1, i67, p2, p3, i65, None]
+917: i78 = int_mod(i67, 2)
+941: i80 = int_rshift(i78, 63)
+948: i81 = int_and(2, i80)
+957: i82 = int_add(i78, i81)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+960: i83 = int_is_true(i82)
guard_false(i83, descr=<Guard84>) [p0, p1, p2, p3, i82, i65, i67]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+970: i85 = int_add_ovf(i65, 1)
guard_no_overflow(, descr=<Guard85>) [p0, p1, i85, p2, p3, None, i65, i67]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+987: i87 = int_add(i67, 1)
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+998: guard_not_invalidated(, descr=<Guard86>) [p0, p1, p2, p3, i87, i85, None, None, None]
+998: i89 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+1006: i91 = int_lt(i89, 0)
guard_false(i91, descr=<Guard87>) [p0, p1, p2, p3, i87, i85, None, None, None]
debug_merge_point(0, 0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+1016: jump(p1, p0, p2, p3, i85, i87, descr=TargetToken(140337845502944))
+1032: --end of the loop--
[2d44fe371f18] jit-log-opt-bridge}
[2d44fe566cd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a92cc +0  E9A1010000
[2d44fe56ac7a] jit-backend-dump}
[2d44fe56b8b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a936f +0  E994010000
[2d44fe56d28a] jit-backend-dump}
[2d44fe56dcaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a97c0 +0  E9DC030000
[2d44fe56f276] jit-backend-dump}
[2d44fe56fb5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a97e8 +0  E904040000
[2d44fe5710b8] jit-backend-dump}
[2d44fe571952] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9aab +0  E96E020000
[2d44fe57310a] jit-backend-dump}
[2d44fe573ab2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9b4c +0  E965020000
[2d44fe57519e] jit-backend-dump}
[2d44feba6b9b] {jit-backend
[2d44fecb422a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9e
[2d44fece1a40] jit-backend-dump}
[2d44fece2d9c] {jit-backend-addr
Loop 4 (<code object inlined_str_stuff, file 'source.py', line 40> #13 FOR_ITER) has address 7fa2f35a9e78 to 7fa2f35aa239 (bootstrap 7fa2f35a9e42)
[2d44fece5490] jit-backend-addr}
[2d44fece68d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9e74 +0  B0FEFFFF
[2d44fece878a] jit-backend-dump}
[2d44fece97f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9f4e +0  E7020000
[2d44feceae1e] jit-backend-dump}
[2d44feceb934] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9f63 +0  F4020000
[2d44fececf12] jit-backend-dump}
[2d44feced96e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9f70 +0  07030000
[2d44feceeff4] jit-backend-dump}
[2d44fecef936] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9f84 +0  14030000
[2d44fecf0d64] jit-backend-dump}
[2d44fecf16ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9f9e +0  1D030000
[2d44fecf2ae0] jit-backend-dump}
[2d44fecf33e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9fa7 +0  38030000
[2d44fecf485c] jit-backend-dump}
[2d44fecf53f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9fc6 +0  3C030000
[2d44fecf6c98] jit-backend-dump}
[2d44fecf76e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9fd9 +0  49030000
[2d44fecf8c30] jit-backend-dump}
[2d44fecf954e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35a9ff7 +0  49030000
[2d44fecfa976] jit-backend-dump}
[2d44fecfb294] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa00e +0  50030000
[2d44fecfc70a] jit-backend-dump}
[2d44fed020f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa023 +0  78030000
[2d44fed03b74] jit-backend-dump}
[2d44fed04540] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa05e +0  5B030000
[2d44fed05c62] jit-backend-dump}
[2d44fed065b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa075 +0  61030000
[2d44fed07a2c] jit-backend-dump}
[2d44fed0834a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa0b7 +0  3D030000
[2d44fed09730] jit-backend-dump}
[2d44fed0a07e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa10e +0  09030000
[2d44fed0b3f8] jit-backend-dump}
[2d44fed0bcfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa140 +0  F4020000
[2d44fed0d078] jit-backend-dump}
[2d44fed0dc54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa186 +0  EB020000
[2d44fed0f286] jit-backend-dump}
[2d44fed0fc82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa1c1 +0  CE020000
[2d44fed1101a] jit-backend-dump}
[2d44fed11938] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa218 +0  9A020000
[2d44fed12d54] jit-backend-dump}
[2d44fed140ec] jit-backend}
[2d44fed16384] {jit-log-opt-loop
# Loop 4 (<code object inlined_str_stuff, file 'source.py', line 40> #13 FOR_ITER) : loop with 100 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+92: i4 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+96: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+100: i6 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+108: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+112: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+116: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+120: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+124: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+128: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+132: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+143: p20 = getarrayitem_gc(p8, 5, descr=<ArrayP 8>)
+154: p22 = getarrayitem_gc(p8, 6, descr=<ArrayP 8>)
+165: p24 = getarrayitem_gc(p8, 7, descr=<ArrayP 8>)
+169: p25 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+169: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, p20, p22, p24, descr=TargetToken(140337845725488))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+262: guard_value(i4, 5, descr=<Guard88>) [i4, p1, p0, p2, p3, p5, i6, i7, p10, p12, p14, p16, p18, p20, p22, p24]
+272: guard_class(p18, 27376640, descr=<Guard89>) [p1, p0, p18, p2, p3, p5, i6, p10, p12, p14, p16, p20, p22, p24]
+293: p28 = getfield_gc(p18, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+297: guard_nonnull(p28, descr=<Guard90>) [p1, p0, p18, p28, p2, p3, p5, i6, p10, p12, p14, p16, p20, p22, p24]
+306: i29 = getfield_gc(p18, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+310: p30 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+314: guard_class(p30, 27558936, descr=<Guard91>) [p1, p0, p18, i29, p30, p28, p2, p3, p5, i6, p10, p12, p14, p16, p20, p22, p24]
+326: p32 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+330: i33 = getfield_gc_pure(p32, descr=<FieldS tuple3.item0 8>)
+334: i34 = getfield_gc_pure(p32, descr=<FieldS tuple3.item1 16>)
+338: i35 = getfield_gc_pure(p32, descr=<FieldS tuple3.item2 24>)
+342: i37 = int_lt(i29, 0)
guard_false(i37, descr=<Guard92>) [p1, p0, p18, i29, i35, i34, i33, p2, p3, p5, i6, p10, p12, p14, p16, p20, p22, p24]
+352: i38 = int_ge(i29, i35)
guard_false(i38, descr=<Guard93>) [p1, p0, p18, i29, i34, i33, p2, p3, p5, i6, p10, p12, p14, p16, p20, p22, p24]
+361: i39 = int_mul(i29, i34)
+368: i40 = int_add(i33, i39)
+374: i42 = int_add(i29, 1)
+378: setfield_gc(p18, i42, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+382: guard_value(i6, 0, descr=<Guard94>) [i6, p1, p0, p2, p3, p5, p10, p12, p14, p16, p18, p22, p24, i40]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+392: guard_value(p2, ConstPtr(ptr44), descr=<Guard95>) [p1, p0, p2, p3, p5, p12, p14, p16, p18, p22, p24, i40]
+411: p45 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+422: guard_value(p45, ConstPtr(ptr46), descr=<Guard96>) [p1, p0, p45, p3, p5, p12, p14, p16, p18, p22, p24, i40]
+441: p47 = getfield_gc(p45, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+445: guard_value(p47, ConstPtr(ptr48), descr=<Guard97>) [p1, p0, p47, p45, p3, p5, p12, p14, p16, p18, p22, p24, i40]
+464: guard_not_invalidated(, descr=<Guard98>) [p1, p0, p45, p3, p5, p12, p14, p16, p18, p22, p24, i40]
+464: p50 = getfield_gc(ConstPtr(ptr49), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+472: guard_value(p50, ConstPtr(ptr51), descr=<Guard99>) [p1, p0, p50, p3, p5, p12, p14, p16, p18, p22, p24, i40]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+485: p53 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i40, descr=<Callr 8 i EF=3>)
+529: guard_no_exception(, descr=<Guard100>) [p1, p0, p53, p3, p5, p12, p14, p16, p18, p24, i40]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+544: p54 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+555: guard_class(p54, 27462416, descr=<Guard101>) [p1, p0, p54, p16, p3, p5, p12, p14, p18, p24, p53, i40]
+567: p56 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+571: i57 = getfield_gc(p56, descr=<FieldS list.length 8>)
+575: i59 = int_add(i57, 1)
+582: p60 = getfield_gc(p56, descr=<FieldP list.items 16>)
+582: i61 = arraylen_gc(p60, descr=<ArrayP 8>)
+582: call(ConstClass(_ll_list_resize_ge_trampoline__v701___simple_call__function__), p56, i59, descr=<Callv 0 ri EF=4>)
+618: guard_no_exception(, descr=<Guard102>) [p1, p0, i57, p53, p56, p3, p5, p12, p14, p16, p18, p24, None, i40]
+633: p64 = getfield_gc(p56, descr=<FieldP list.items 16>)
setarrayitem_gc(p64, i57, p53, descr=<ArrayP 8>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+702: i66 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+710: i68 = int_lt(i66, 0)
guard_false(i68, descr=<Guard103>) [p1, p0, p3, p5, p12, p14, p16, p18, p24, None, i40]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+720: p69 = same_as(ConstPtr(ptr48))
+720: label(p0, p1, p3, p5, i40, p12, p14, p16, p18, p24, i42, i35, i34, i33, p56, descr=TargetToken(140337845725568))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+750: i70 = int_ge(i42, i35)
guard_false(i70, descr=<Guard104>) [p1, p0, p18, i42, i34, i33, p3, p5, p12, p14, p16, p24, i40]
+770: i71 = int_mul(i42, i34)
+778: i72 = int_add(i33, i71)
+784: i73 = int_add(i42, 1)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+795: setfield_gc(p18, i73, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+799: guard_not_invalidated(, descr=<Guard105>) [p1, p0, p3, p5, p12, p14, p16, p18, p24, i72, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+799: p74 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i72, descr=<Callr 8 i EF=3>)
+825: guard_no_exception(, descr=<Guard106>) [p1, p0, p74, p3, p5, p12, p14, p16, p18, p24, i72, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+840: i75 = getfield_gc(p56, descr=<FieldS list.length 8>)
+851: i76 = int_add(i75, 1)
+858: p77 = getfield_gc(p56, descr=<FieldP list.items 16>)
+858: i78 = arraylen_gc(p77, descr=<ArrayP 8>)
+858: call(ConstClass(_ll_list_resize_ge_trampoline__v701___simple_call__function__), p56, i76, descr=<Callv 0 ri EF=4>)
+884: guard_no_exception(, descr=<Guard107>) [p1, p0, i75, p74, p56, p3, p5, p12, p14, p16, p18, p24, i72, None]
+899: p79 = getfield_gc(p56, descr=<FieldP list.items 16>)
setarrayitem_gc(p79, i75, p74, descr=<ArrayP 8>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+968: i80 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+976: i81 = int_lt(i80, 0)
guard_false(i81, descr=<Guard108>) [p1, p0, p3, p5, p12, p14, p16, p18, p24, i72, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+986: jump(p0, p1, p3, p5, i72, p12, p14, p16, p18, p24, i73, i35, i34, i33, p56, descr=TargetToken(140337845725568))
+1015: --end of the loop--
[2d44fedf4cf5] jit-log-opt-loop}
[2d44ff71bbf4] {jit-backend
[2d44ff74f878] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa4d3 +0  488B04250002D3024829E0483B042520FB6A01760D49BB03875AF3A27F000041FFD3554889E5534154415541564157488DA50000000049BB88B2E1F5A27F00004D8B3B4983C70149BB88B2E1F5A27F00004D893B4C8B7E404D0FB67C3F184983FF330F85000000004989FF4883C70148897E1848C74620000000004C897E28B8010000004889042550926F0141BBB0D1E20041FFD3B802000000488D65D8415F415E415D415C5B5DC349BB00805AF3A27F000041FFD31D18036D000000
[2d44ff757d32] jit-backend-dump}
[2d44ff758830] {jit-backend-addr
Loop 5 (re StrLiteralSearch at 11/51 [17, 8, 3, 1, 1, 1, 1, 51, 0, 19, 51, 1]) has address 7fa2f35aa509 to 7fa2f35aa57c (bootstrap 7fa2f35aa4d3)
[2d44ff75a384] jit-backend-addr}
[2d44ff75b248] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa505 +0  70FFFFFF
[2d44ff75cb74] jit-backend-dump}
[2d44ff75da62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa537 +0  41000000
[2d44ff75ef68] jit-backend-dump}
[2d44ff75ff70] jit-backend}
[2d44ff761668] {jit-log-opt-loop
# Loop 5 (re StrLiteralSearch at 11/51 [17, 8, 3, 1, 1, 1, 1, 51, 0, 19, 51, 1]) : entry bridge with 10 ops
[i0, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+84: p2 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+88: i3 = strgetitem(p2, i0)
+94: i5 = int_eq(i3, 51)
guard_true(i5, descr=<Guard109>) [i0, p1]
+104: i7 = int_add(i0, 1)
+111: setfield_gc(p1, i7, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+115: setfield_gc(p1, ConstPtr(ptr8), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+123: setfield_gc(p1, i0, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+127: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1b22620>)
+169: --end of the loop--
[2d44ff778daa] jit-log-opt-loop}
[2d44ffb2ce9a] {jit-backend
[2d44ffb55eb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa590 +0  488DA50000000049BBA0B2E1F5A27F00004D8B3B4983C70149BBA0B2E1F5A27F00004D893B4883C7014C8B7E084C39FF0F8D000000004C8B76404D0FB6743E184983FE330F84000000004883C7014C39FF0F8C00000000B8000000004889042550926F0141BBB0D1E20041FFD3B802000000488D65D8415F415E415D415C5B5DC349BB00805AF3A27F000041FFD31D18036E00000049BB00805AF3A27F000041FFD31D18036F00000049BB00805AF3A27F000041FFD31D180370000000
[2d44ffb6d5fe] jit-backend-dump}
[2d44ffb6e54c] {jit-backend-addr
bridge out of Guard 109 has address 7fa2f35aa590 to 7fa2f35aa611
[2d44ffb6fd9a] jit-backend-addr}
[2d44ffb709c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa593 +0  70FFFFFF
[2d44ffb72320] jit-backend-dump}
[2d44ffb73010] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa5c2 +0  4B000000
[2d44ffb74468] jit-backend-dump}
[2d44ffb74d2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa5d6 +0  4B000000
[2d44ffb7627a] jit-backend-dump}
[2d44ffb76b3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa5e3 +0  52000000
[2d44ffb77f84] jit-backend-dump}
[2d44ffb78cf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa537 +0  55000000
[2d44ffb7a150] jit-backend-dump}
[2d44ffb7af78] jit-backend}
[2d44ffb7c4c0] {jit-log-opt-bridge
# bridge out of Guard 109 with 13 ops
[i0, p1]
+37: i3 = int_add(i0, 1)
+41: i4 = getfield_gc_pure(p1, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+45: i5 = int_lt(i3, i4)
guard_true(i5, descr=<Guard110>) [i3, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+54: p6 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+58: i7 = strgetitem(p6, i3)
+64: i9 = int_eq(i7, 51)
guard_false(i9, descr=<Guard111>) [i3, p1]
+74: i11 = int_add(i3, 1)
+78: i12 = int_lt(i11, i4)
guard_false(i12, descr=<Guard112>) [i11, p1]
+87: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1b22620>)
+129: --end of the loop--
[2d44ffb96128] jit-log-opt-bridge}
[2d450062a252] {jit-backend
[2d450064db26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa64d +0  488DA50000000049BBB8B2E1F5A27F00004D8B3B4983C70149BBB8B2E1F5A27F00004D893B4C8B7E404D0FB67C3F184983FF330F84000000004883C7014C8B7E084C39FF0F8C00000000B8000000004889042550926F0141BBB0D1E20041FFD3B802000000488D65D8415F415E415D415C5B5DC349BB00805AF3A27F000041FFD31D18037100000049BB00805AF3A27F000041FFD31D180372000000
[2d45006543ea] jit-backend-dump}
[2d4500654f7e] {jit-backend-addr
bridge out of Guard 112 has address 7fa2f35aa64d to 7fa2f35aa6c1
[2d450065665e] jit-backend-addr}
[2d45006572f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa650 +0  70FFFFFF
[2d4500658cb0] jit-backend-dump}
[2d45006598c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa682 +0  3B000000
[2d450065af42] jit-backend-dump}
[2d450065b8c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa693 +0  3E000000
[2d450065cf82] jit-backend-dump}
[2d450065db28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa5e3 +0  66000000
[2d450065f070] jit-backend-dump}
[2d450065fda2] jit-backend}
[2d45006611d0] {jit-log-opt-bridge
# bridge out of Guard 112 with 10 ops
[i0, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+37: p2 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+41: i3 = strgetitem(p2, i0)
+47: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard113>) [i0, p1]
+57: i7 = int_add(i0, 1)
+61: i8 = getfield_gc_pure(p1, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+65: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard114>) [i7, p1]
+74: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1b22620>)
+116: --end of the loop--
[2d4500675f8a] jit-log-opt-bridge}
[2d4500dfc58a] {jit-backend
[2d4500e0ed16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa6e9 +0  488DA50000000049BBD0B2E1F5A27F0000498B334883C60149BBD0B2E1F5A27F0000498933B8000000004889042550926F0141BBB0D1E20041FFD3B802000000488D65D8415F415E415D415C5B5DC3
[2d4500e13ce4] jit-backend-dump}
[2d4500e14794] {jit-backend-addr
bridge out of Guard 110 has address 7fa2f35aa6e9 to 7fa2f35aa738
[2d4500e22390] jit-backend-addr}
[2d4500e233e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa6ec +0  70FFFFFF
[2d4500e24ef8] jit-backend-dump}
[2d4500e25d50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa5c2 +0  23010000
[2d4500e27310] jit-backend-dump}
[2d4500e28180] jit-backend}
[2d4500e293ce] {jit-log-opt-bridge
# bridge out of Guard 110 with 1 ops
[i0, p1]
+37: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1b22620>)
+79: --end of the loop--
[2d4500e2ed56] jit-log-opt-bridge}
[2d4502515818] {jit-backend
[2d45028ba4d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa83b
[2d45028f8499] jit-backend-dump}
[2d45028f951f] {jit-backend-addr
Loop 6 (<code object inlined_str_stuff, file 'source.py', line 40> #44 FOR_ITER) has address 7fa2f35aa871 to 7fa2f35ab366 (bootstrap 7fa2f35aa83b)
[2d45028faeb7] jit-backend-addr}
[2d45028fbcc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa86d +0  10FEFFFF
[2d4502900208] jit-backend-dump}
[2d450290147a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa947 +0  1B0A0000
[2d4502902ca4] jit-backend-dump}
[2d450290374e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa95c +0  280A0000
[2d4502904ce4] jit-backend-dump}
[2d450290577c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa969 +0  3B0A0000
[2d450290bf0e] jit-backend-dump}
[2d450290ca1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa97d +0  480A0000
[2d450290dee2] jit-backend-dump}
[2d450290e920] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa98e +0  5A0A0000
[2d450290ff40] jit-backend-dump}
[2d450291096c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa9a0 +0  6B0A0000
[2d4502911eea] jit-backend-dump}
[2d45029128fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa9b2 +0  7B0A0000
[2d4502913dec] jit-backend-dump}
[2d45029147d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa9c5 +0  880A0000
[2d4502915bc2] jit-backend-dump}
[2d45029164ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa9dc +0  8F0A0000
[2d450291792c] jit-backend-dump}
[2d450291839a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa9f3 +0  960A0000
[2d45029199ae] jit-backend-dump}
[2d450291ab1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaa13 +0  B30A0000
[2d450291c0b4] jit-backend-dump}
[2d450291ca0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaa3b +0  A90A0000
[2d450291de4e] jit-backend-dump}
[2d450291e760] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaa49 +0  B90A0000
[2d450291fb34] jit-backend-dump}
[2d450292053c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaa60 +0  DC0A0000
[2d450292194c] jit-backend-dump}
[2d4502922408] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaa75 +0  E50A0000
[2d45029239da] jit-backend-dump}
[2d45029243dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaa8f +0  EA0A0000
[2d4502925834] jit-backend-dump}
[2d45029261a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aabaf +0  E9090000
[2d45029275c2] jit-backend-dump}
[2d4502927ed4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aabbe +0  FE090000
[2d45029292e4] jit-backend-dump}
[2d4502929c3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aabd8 +0  080A0000
[2d450292b066] jit-backend-dump}
[2d450292ba8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aabfe +0  060A0000
[2d450292d0a6] jit-backend-dump}
[2d450292dacc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aac0b +0  1B0A0000
[2d450292ef42] jit-backend-dump}
[2d450292f8e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aac1f +0  290A0000
[2d4502930cd0] jit-backend-dump}
[2d45029315d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aac2d +0  3F0A0000
[2d4502932a0a] jit-backend-dump}
[2d45029333d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aac5a +0  550A0000
[2d45029347ec] jit-backend-dump}
[2d45029351ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aac70 +0  610A0000
[2d4502936874] jit-backend-dump}
[2d450293726a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aac85 +0  700A0000
[2d4502938656] jit-backend-dump}
[2d4502938f50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aac93 +0  870A0000
[2d450293a3e4] jit-backend-dump}
[2d450293ace4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aacaa +0  940A0000
[2d450293c0b8] jit-backend-dump}
[2d450293ca48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aacc4 +0  9F0A0000
[2d450293de46] jit-backend-dump}
[2d450293e866] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aacce +0  BB0A0000
[2d450293fd9c] jit-backend-dump}
[2d4502940792] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aacd8 +0  D80A0000
[2d4502941c44] jit-backend-dump}
[2d450294254a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaceb +0  EB0A0000
[2d4502947bba] jit-backend-dump}
[2d450294868e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aadf4 +0  070A0000
[2d4502949c18] jit-backend-dump}
[2d450294a620] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aae03 +0  1C0A0000
[2d450294bb2c] jit-backend-dump}
[2d450294c4da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aae0c +0  370A0000
[2d450294da4c] jit-backend-dump}
[2d450294e35e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aae20 +0  460A0000
[2d450294f6e4] jit-backend-dump}
[2d450295003e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aae2e +0  580A0000
[2d45029513dc] jit-backend-dump}
[2d4502951d9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aae6e +0  520A0000
[2d4502953194] jit-backend-dump}
[2d4502953aac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaea0 +0  3B0A0000
[2d45029550fc] jit-backend-dump}
[2d4502955b1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaeb6 +0  400A0000
[2d4502956ff2] jit-backend-dump}
[2d450295794c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaec7 +0  4C0A0000
[2d4502958d20] jit-backend-dump}
[2d4502959632] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaed9 +0  570A0000
[2d450295aa3c] jit-backend-dump}
[2d450295b354] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaeff +0  4D0A0000
[2d450295c73a] jit-backend-dump}
[2d450295d08e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaf16 +0  520A0000
[2d450295e6a2] jit-backend-dump}
[2d450295f49a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaf36 +0  6B0A0000
[2d45029609ee] jit-backend-dump}
[2d450296130c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaf40 +0  7D0A0000
[2d450296268c] jit-backend-dump}
[2d4502962fec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaf57 +0  840A0000
[2d450296438a] jit-backend-dump}
[2d4502964ce4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaf6c +0  8E0A0000
[2d4502966076] jit-backend-dump}
[2d4502966b02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaf86 +0  940A0000
[2d4502968086] jit-backend-dump}
[2d4502968a88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab0a6 +0  94090000
[2d4502969f1c] jit-backend-dump}
[2d450296a91e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab0b5 +0  AB090000
[2d450296bcbc] jit-backend-dump}
[2d450296c5c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab0cf +0  B7090000
[2d450296d960] jit-backend-dump}
[2d450296e296] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab0f5 +0  B7090000
[2d450296f69a] jit-backend-dump}
[2d4502970144] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab102 +0  CE090000
[2d4502971668] jit-backend-dump}
[2d4502972016] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab116 +0  DE090000
[2d45029734ec] jit-backend-dump}
[2d4502973e52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab124 +0  F5090000
[2d4502975208] jit-backend-dump}
[2d4502975c64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab151 +0  0C0A0000
[2d4502977020] jit-backend-dump}
[2d450297796e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab167 +0  180A0000
[2d4502978d0c] jit-backend-dump}
[2d45029797b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab17c +0  270A0000
[2d450297acb0] jit-backend-dump}
[2d450297b68e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab18a +0  3E0A0000
[2d450297cbb2] jit-backend-dump}
[2d450297d4e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab1a1 +0  4B0A0000
[2d4502982786] jit-backend-dump}
[2d450298334a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab1bb +0  560A0000
[2d4502984a54] jit-backend-dump}
[2d45029854ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab1c5 +0  720A0000
[2d45029869ec] jit-backend-dump}
[2d450298738e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab1cf +0  8F0A0000
[2d45029888ac] jit-backend-dump}
[2d45029892a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab1e2 +0  A20A0000
[2d450298a790] jit-backend-dump}
[2d450298b0f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab2dd +0  CC090000
[2d450298c4b2] jit-backend-dump}
[2d450298cdb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab2ec +0  E2090000
[2d450298e19e] jit-backend-dump}
[2d450298ea9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab2f5 +0  FE090000
[2d450298fe90] jit-backend-dump}
[2d450299089e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab309 +0  0E0A0000
[2d4502991dc2] jit-backend-dump}
[2d45029927ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab317 +0  200A0000
[2d4502993bb0] jit-backend-dump}
[2d45029945d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab357 +0  1A0A0000
[2d450299598c] jit-backend-dump}
[2d4502996cac] jit-backend}
[2d45029991d8] {jit-log-opt-loop
# Loop 6 (<code object inlined_str_stuff, file 'source.py', line 40> #44 FOR_ITER) : loop with 341 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+92: i4 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+96: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+100: i6 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+108: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+112: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+116: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+120: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+124: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+128: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+132: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+143: p20 = getarrayitem_gc(p8, 5, descr=<ArrayP 8>)
+154: p22 = getarrayitem_gc(p8, 6, descr=<ArrayP 8>)
+165: p24 = getarrayitem_gc(p8, 7, descr=<ArrayP 8>)
+169: p25 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+169: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, p20, p22, p24, descr=TargetToken(140337845728208))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+262: guard_value(i4, 4, descr=<Guard119>) [i4, p1, p0, p2, p3, p5, i6, i7, p10, p12, p14, p16, p18, p20, p22, p24]
+272: guard_class(p16, 27376640, descr=<Guard120>) [p1, p0, p16, p2, p3, p5, i6, p10, p12, p14, p18, p20, p22, p24]
+293: p28 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+297: guard_nonnull(p28, descr=<Guard121>) [p1, p0, p16, p28, p2, p3, p5, i6, p10, p12, p14, p18, p20, p22, p24]
+306: i29 = getfield_gc(p16, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+310: p30 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+314: guard_class(p30, 27462416, descr=<Guard122>) [p1, p0, p16, i29, p30, p28, p2, p3, p5, i6, p10, p12, p14, p18, p20, p22, p24]
+326: p32 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+330: i33 = getfield_gc(p32, descr=<FieldS list.length 8>)
+334: i34 = uint_ge(i29, i33)
guard_false(i34, descr=<Guard123>) [p1, p0, p16, i29, i33, p32, p2, p3, p5, i6, p10, p12, p14, p18, p20, p22, p24]
+343: p35 = getfield_gc(p32, descr=<FieldP list.items 16>)
+347: p36 = getarrayitem_gc(p35, i29, descr=<ArrayP 8>)
+352: guard_nonnull(p36, descr=<Guard124>) [p1, p0, p16, i29, p36, p2, p3, p5, i6, p10, p12, p14, p18, p20, p22, p24]
+361: i38 = int_add(i29, 1)
+365: setfield_gc(p16, i38, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+369: guard_value(i6, 0, descr=<Guard125>) [i6, p1, p0, p2, p3, p5, p10, p12, p14, p16, p20, p22, p24, p36]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+379: guard_value(p2, ConstPtr(ptr40), descr=<Guard126>) [p1, p0, p2, p3, p5, p10, p12, p16, p20, p22, p24, p36]
+398: p41 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+402: guard_value(p41, ConstPtr(ptr42), descr=<Guard127>) [p1, p0, p41, p3, p5, p10, p12, p16, p20, p22, p24, p36]
+421: p43 = getfield_gc(p41, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+425: guard_value(p43, ConstPtr(ptr44), descr=<Guard128>) [p1, p0, p43, p41, p3, p5, p10, p12, p16, p20, p22, p24, p36]
+444: guard_not_invalidated(, descr=<Guard129>) [p1, p0, p41, p3, p5, p10, p12, p16, p20, p22, p24, p36]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+444: p46 = getfield_gc(ConstPtr(ptr45), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+457: guard_value(p46, ConstPtr(ptr47), descr=<Guard130>) [p1, p0, p46, p3, p5, p10, p12, p16, p20, p22, p24, p36]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+476: p49 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+499: p50 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+503: i51 = force_token()
+503: p52 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+507: guard_isnull(p52, descr=<Guard131>) [p1, p0, p49, p52, p3, p5, p10, p12, p16, i51, p50, p36]
+516: i53 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 48>)
+520: i54 = int_is_zero(i53)
guard_true(i54, descr=<Guard132>) [p1, p0, p49, p3, p5, p10, p12, p16, i51, p50, p36]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #0 LOAD_GLOBAL')
+530: guard_not_invalidated(, descr=<Guard133>) [p1, p0, p49, p3, p5, p10, p12, p16, i51, p50, p36]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #9 CALL_FUNCTION')
+530: i56 = getfield_gc(ConstPtr(ptr55), descr=<FieldS list.length 8>)
+543: i58 = int_ge(0, i56)
guard_true(i58, descr=<Guard134>) [p1, p0, p49, i56, p3, p5, p10, p12, p16, i51, p50, p36]
+553: i59 = force_token()
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #0 LOAD_GLOBAL')
+553: p61 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+561: guard_value(p61, ConstPtr(ptr62), descr=<Guard135>) [p1, p0, p49, p61, p3, p5, p10, p12, p16, i59, i51, p50, p36]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #3 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #6 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #9 BINARY_SUBSCR')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #10 CALL_FUNCTION')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #13 BUILD_TUPLE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #16 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #19 BINARY_ADD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #20 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #23 LOAD_GLOBAL')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #26 LOOKUP_METHOD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #29 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #32 CALL_METHOD')
+574: p64 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+587: guard_class(p64, ConstClass(ObjectDictStrategy), descr=<Guard136>) [p1, p0, p49, p64, p3, p5, p10, p12, p16, i59, i51, p50, p36]
+600: p66 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+613: i67 = force_token()
p69 = new_with_vtable(27352896)
p71 = new_array(3, descr=<ArrayP 8>)
p73 = new_with_vtable(27448768)
+719: setfield_gc(p73, i59, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p73, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+756: setfield_gc(p0, i67, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+767: setarrayitem_gc(p71, 0, ConstPtr(ptr75), descr=<ArrayP 8>)
+775: setarrayitem_gc(p71, 1, ConstPtr(ptr77), descr=<ArrayP 8>)
+789: setarrayitem_gc(p71, 2, ConstPtr(ptr79), descr=<ArrayP 8>)
+803: setfield_gc(p69, p71, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+807: i82 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v885___simple_call__function_l), p66, p69, 5441231709571390404, descr=<Calli 8 rri EF=6>)
guard_not_forced(, descr=<Guard115>) [p1, p0, p49, p69, i82, p66, p73, p3, p5, p10, p12, p16, i51, p50, p36]
+888: guard_no_exception(, descr=<Guard137>) [p1, p0, p49, p69, i82, p66, p73, p3, p5, p10, p12, p16, i51, p50, p36]
+903: i84 = int_and(i82, -9223372036854775808)
+919: i85 = int_is_true(i84)
guard_false(i85, descr=<Guard138>) [p1, p0, p49, p69, i82, p66, p73, p3, p5, p10, p12, p16, i51, p50, p36]
+929: p86 = getfield_gc(p66, descr=<FieldP dicttable.entries 24>)
+940: p87 = getinteriorfield_gc(p86, i82, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+949: guard_nonnull_class(p87, 27717024, descr=<Guard139>) [p1, p0, p49, p69, p87, p73, p3, p5, p10, p12, p16, i51, p50, p36]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #35 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #38 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #41 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #44 COMPARE_OP')
+967: i90 = instance_ptr_eq(ConstPtr(ptr89), p87)
guard_false(i90, descr=<Guard140>) [p1, p0, p49, p73, p3, p5, p10, p12, p16, p69, p87, i51, p50, p36]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #50 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #53 RETURN_VALUE')
+980: p91 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+991: guard_isnull(p91, descr=<Guard141>) [p1, p0, p49, p87, p91, p73, p3, p5, p10, p12, p16, p69, None, i51, p50, p36]
+1000: i93 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 48>)
+1004: i94 = int_is_true(i93)
guard_false(i94, descr=<Guard142>) [p1, p0, p49, p87, p73, p3, p5, p10, p12, p16, p69, None, i51, p50, p36]
+1014: p95 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #12 LOOKUP_METHOD')
+1014: setfield_gc(p73, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #18 CALL_METHOD')
+1029: guard_not_invalidated(, descr=<Guard143>) [p1, p0, p49, p3, p5, p10, p12, p16, None, p87, i51, p50, p36]
+1029: i97 = strlen(p36)
+1040: i99 = int_gt(9223372036854775807, i97)
guard_true(i99, descr=<Guard144>) [p1, p0, p49, p87, p36, p3, p5, p10, p12, p16, None, None, i51, p50, None]
+1059: p100 = getfield_gc_pure(p87, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+1063: i101 = getfield_gc_pure(p87, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+1067: i103 = getarrayitem_gc_pure(p100, 0, descr=<ArrayS 8>)
+1071: i105 = int_eq(i103, 17)
guard_true(i105, descr=<Guard145>) [p1, p0, p49, p87, p3, p5, p10, p12, p16, p100, i97, i101, None, None, i51, p50, p36]
+1081: i107 = getarrayitem_gc_pure(p100, 2, descr=<ArrayS 8>)
+1085: i109 = int_and(i107, 1)
+1092: i110 = int_is_true(i109)
guard_true(i110, descr=<Guard146>) [p1, p0, p49, p87, i107, p3, p5, p10, p12, p16, p100, i97, i101, None, None, i51, p50, p36]
+1102: i112 = getarrayitem_gc_pure(p100, 5, descr=<ArrayS 8>)
+1106: i114 = int_gt(i112, 1)
guard_false(i114, descr=<Guard147>) [p1, p0, p49, p87, p3, p5, p10, p12, p16, p100, i97, i101, None, None, i51, p50, p36]
+1116: i116 = getarrayitem_gc_pure(p100, 1, descr=<ArrayS 8>)
+1120: i118 = int_add(i116, 1)
+1124: i119 = getarrayitem_gc_pure(p100, i118, descr=<ArrayS 8>)
+1129: i121 = int_eq(i119, 19)
guard_true(i121, descr=<Guard148>) [p1, p0, p49, p87, i118, p3, p5, p10, p12, p16, p100, i97, i101, None, None, i51, p50, p36]
+1139: i123 = int_add(i118, 1)
+1146: i124 = getarrayitem_gc_pure(p100, i123, descr=<ArrayS 8>)
+1151: i126 = int_add(i118, 2)
+1155: i128 = int_lt(0, i97)
guard_true(i128, descr=<Guard149>) [p1, p0, p49, p87, i124, i126, p3, p5, p10, p12, p16, p100, i97, i101, None, None, i51, p50, p36]
+1165: guard_value(i126, 11, descr=<Guard150>) [p1, p0, p49, p87, i124, i126, p100, p3, p5, p10, p12, p16, None, i97, i101, None, None, i51, p50, p36]
+1175: guard_value(i124, 51, descr=<Guard151>) [p1, p0, p49, p87, i124, p100, p3, p5, p10, p12, p16, None, i97, i101, None, None, i51, p50, p36]
+1185: guard_value(p100, ConstPtr(ptr131), descr=<Guard152>) [p1, p0, p49, p87, p100, p3, p5, p10, p12, p16, None, i97, i101, None, None, i51, p50, p36]
debug_merge_point(2, 3, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+1204: i132 = force_token()
p134 = new_with_vtable(27379768)
p135 = new_with_vtable(27448768)
+1288: setfield_gc(p135, i51, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p135, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+1325: setfield_gc(p0, i132, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+1336: setfield_gc(p134, ConstPtr(ptr131), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
+1350: setfield_gc(p134, p36, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+1354: setfield_gc(p134, i101, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+1358: setfield_gc(p134, i97, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+1369: i136 = call_assembler(0, p134, descr=<Loop5>)
guard_not_forced(, descr=<Guard116>) [p1, p0, p49, p87, p134, i136, p135, p3, p5, p10, p12, p16, p50, p36]
+1469: guard_no_exception(, descr=<Guard153>) [p1, p0, p49, p87, p134, i136, p135, p3, p5, p10, p12, p16, p50, p36]
+1484: guard_false(i136, descr=<Guard154>) [p1, p0, p49, p87, p134, p135, p3, p5, p10, p12, p16, p50, p36]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #21 RETURN_VALUE')
+1493: p137 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+1504: guard_isnull(p137, descr=<Guard155>) [p1, p0, p49, p137, p135, p3, p5, p10, p12, p16, p50, p36]
+1513: i138 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 48>)
+1517: i139 = int_is_true(i138)
guard_false(i139, descr=<Guard156>) [p1, p0, p49, p135, p3, p5, p10, p12, p16, p50, p36]
+1527: p140 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p49, p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+1558: setfield_gc(p135, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+1573: guard_not_invalidated(, descr=<Guard157>) [p1, p0, p3, p5, p10, p12, p16, None, p36]
+1573: i143 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+1581: i145 = int_lt(i143, 0)
guard_false(i145, descr=<Guard158>) [p1, p0, p3, p5, p10, p12, p16, None, p36]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1591: label(p0, p1, p3, p5, p10, p12, p36, p16, i138, p49, p50, descr=TargetToken(140337845728288))
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1621: p146 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+1632: guard_nonnull(p146, descr=<Guard159>) [p1, p0, p16, p146, p3, p5, p10, p12, p36]
+1641: i147 = getfield_gc(p16, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+1645: p148 = getfield_gc(p146, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+1649: guard_class(p148, 27462416, descr=<Guard160>) [p1, p0, p16, i147, p148, p146, p3, p5, p10, p12, p36]
+1663: p149 = getfield_gc(p146, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+1667: i150 = getfield_gc(p149, descr=<FieldS list.length 8>)
+1671: i151 = uint_ge(i147, i150)
guard_false(i151, descr=<Guard161>) [p1, p0, p16, i147, i150, p149, p3, p5, p10, p12, p36]
+1680: p152 = getfield_gc(p149, descr=<FieldP list.items 16>)
+1684: p153 = getarrayitem_gc(p152, i147, descr=<ArrayP 8>)
+1689: guard_nonnull(p153, descr=<Guard162>) [p1, p0, p16, i147, p153, p3, p5, p10, p12, p36]
+1698: i154 = int_add(i147, 1)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+1702: p155 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+1713: setfield_gc(p16, i154, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+1717: guard_value(p155, ConstPtr(ptr42), descr=<Guard163>) [p1, p0, p155, p3, p5, p10, p12, p16, p153, None]
+1736: p156 = getfield_gc(p155, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1740: guard_value(p156, ConstPtr(ptr44), descr=<Guard164>) [p1, p0, p156, p155, p3, p5, p10, p12, p16, p153, None]
+1759: guard_not_invalidated(, descr=<Guard165>) [p1, p0, p155, p3, p5, p10, p12, p16, p153, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+1759: p157 = getfield_gc(ConstPtr(ptr45), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1772: guard_value(p157, ConstPtr(ptr47), descr=<Guard166>) [p1, p0, p157, p3, p5, p10, p12, p16, p153, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+1791: i158 = force_token()
+1791: i159 = int_is_zero(i138)
guard_true(i159, descr=<Guard167>) [p1, p0, p49, p3, p5, p10, p12, p16, i158, p50, p153, None]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #0 LOAD_GLOBAL')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #9 CALL_FUNCTION')
+1801: i160 = getfield_gc(ConstPtr(ptr55), descr=<FieldS list.length 8>)
+1814: i161 = int_ge(0, i160)
guard_true(i161, descr=<Guard168>) [p1, p0, p49, i160, p3, p5, p10, p12, p16, i158, p50, p153, None]
+1824: i162 = force_token()
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #0 LOAD_GLOBAL')
+1824: p163 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1832: guard_value(p163, ConstPtr(ptr62), descr=<Guard169>) [p1, p0, p49, p163, p3, p5, p10, p12, p16, i162, i158, p50, p153, None]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #3 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #6 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #9 BINARY_SUBSCR')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #10 CALL_FUNCTION')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #13 BUILD_TUPLE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #16 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #19 BINARY_ADD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #20 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #23 LOAD_GLOBAL')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #26 LOOKUP_METHOD')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #29 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #32 CALL_METHOD')
+1845: p164 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1858: guard_class(p164, ConstClass(ObjectDictStrategy), descr=<Guard170>) [p1, p0, p49, p164, p3, p5, p10, p12, p16, i162, i158, p50, p153, None]
+1871: p165 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+1884: i166 = force_token()
p167 = new_with_vtable(27352896)
p168 = new_array(3, descr=<ArrayP 8>)
p169 = new_with_vtable(27448768)
+1990: setfield_gc(p169, i162, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p169, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+2027: setfield_gc(p0, i166, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2031: setarrayitem_gc(p168, 0, ConstPtr(ptr75), descr=<ArrayP 8>)
+2039: setarrayitem_gc(p168, 1, ConstPtr(ptr77), descr=<ArrayP 8>)
+2053: setarrayitem_gc(p168, 2, ConstPtr(ptr173), descr=<ArrayP 8>)
+2067: setfield_gc(p167, p168, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+2071: i175 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v885___simple_call__function_l), p165, p167, 5441231709571390404, descr=<Calli 8 rri EF=6>)
guard_not_forced(, descr=<Guard117>) [p1, p0, p49, p167, i175, p165, p169, p3, p5, p10, p12, p16, p153, i158, p50]
+2159: guard_no_exception(, descr=<Guard171>) [p1, p0, p49, p167, i175, p165, p169, p3, p5, p10, p12, p16, p153, i158, p50]
+2174: i176 = int_and(i175, -9223372036854775808)
+2190: i177 = int_is_true(i176)
guard_false(i177, descr=<Guard172>) [p1, p0, p49, p167, i175, p165, p169, p3, p5, p10, p12, p16, p153, i158, p50]
+2200: p178 = getfield_gc(p165, descr=<FieldP dicttable.entries 24>)
+2211: p179 = getinteriorfield_gc(p178, i175, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+2220: guard_nonnull_class(p179, 27717024, descr=<Guard173>) [p1, p0, p49, p167, p179, p169, p3, p5, p10, p12, p16, p153, i158, p50]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #35 STORE_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #38 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #41 LOAD_CONST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #44 COMPARE_OP')
+2238: i180 = instance_ptr_eq(ConstPtr(ptr89), p179)
guard_false(i180, descr=<Guard174>) [p1, p0, p49, p169, p3, p5, p10, p12, p16, p167, p179, p153, i158, p50]
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #50 LOAD_FAST')
debug_merge_point(2, 2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #53 RETURN_VALUE')
+2251: p181 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+2262: guard_isnull(p181, descr=<Guard175>) [p1, p0, p49, p179, p181, p169, p3, p5, p10, p12, p16, p167, None, p153, i158, p50]
+2271: i182 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 48>)
+2275: i183 = int_is_true(i182)
guard_false(i183, descr=<Guard176>) [p1, p0, p49, p179, p169, p3, p5, p10, p12, p16, p167, None, p153, i158, p50]
+2285: p184 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #12 LOOKUP_METHOD')
+2285: setfield_gc(p169, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #18 CALL_METHOD')
+2300: guard_not_invalidated(, descr=<Guard177>) [p1, p0, p49, p3, p5, p10, p12, p16, None, p179, p153, i158, p50]
+2300: i186 = strlen(p153)
+2311: i188 = int_gt(9223372036854775807, i186)
guard_true(i188, descr=<Guard178>) [p1, p0, p49, p179, p153, p3, p5, p10, p12, p16, None, None, None, i158, p50]
+2330: p189 = getfield_gc_pure(p179, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+2334: i190 = getfield_gc_pure(p179, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+2338: i191 = getarrayitem_gc_pure(p189, 0, descr=<ArrayS 8>)
+2342: i192 = int_eq(i191, 17)
guard_true(i192, descr=<Guard179>) [p1, p0, p49, p179, p3, p5, p10, p12, p16, i190, p189, i186, None, None, p153, i158, p50]
+2352: i193 = getarrayitem_gc_pure(p189, 2, descr=<ArrayS 8>)
+2356: i194 = int_and(i193, 1)
+2363: i195 = int_is_true(i194)
guard_true(i195, descr=<Guard180>) [p1, p0, p49, p179, i193, p3, p5, p10, p12, p16, i190, p189, i186, None, None, p153, i158, p50]
+2373: i196 = getarrayitem_gc_pure(p189, 5, descr=<ArrayS 8>)
+2377: i197 = int_gt(i196, 1)
guard_false(i197, descr=<Guard181>) [p1, p0, p49, p179, p3, p5, p10, p12, p16, i190, p189, i186, None, None, p153, i158, p50]
+2387: i198 = getarrayitem_gc_pure(p189, 1, descr=<ArrayS 8>)
+2391: i199 = int_add(i198, 1)
+2395: i200 = getarrayitem_gc_pure(p189, i199, descr=<ArrayS 8>)
+2400: i201 = int_eq(i200, 19)
guard_true(i201, descr=<Guard182>) [p1, p0, p49, p179, i199, p3, p5, p10, p12, p16, i190, p189, i186, None, None, p153, i158, p50]
+2410: i202 = int_add(i199, 1)
+2417: i203 = getarrayitem_gc_pure(p189, i202, descr=<ArrayS 8>)
+2422: i204 = int_add(i199, 2)
+2426: i206 = int_lt(0, i186)
guard_true(i206, descr=<Guard183>) [p1, p0, p49, p179, i203, i204, p3, p5, p10, p12, p16, i190, p189, i186, None, None, p153, i158, p50]
+2436: guard_value(i204, 11, descr=<Guard184>) [p1, p0, p49, p179, i203, i204, p189, p3, p5, p10, p12, p16, i190, None, i186, None, None, p153, i158, p50]
+2446: guard_value(i203, 51, descr=<Guard185>) [p1, p0, p49, p179, i203, p189, p3, p5, p10, p12, p16, i190, None, i186, None, None, p153, i158, p50]
+2456: guard_value(p189, ConstPtr(ptr131), descr=<Guard186>) [p1, p0, p49, p179, p189, p3, p5, p10, p12, p16, i190, None, i186, None, None, p153, i158, p50]
debug_merge_point(2, 3, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+2475: i207 = force_token()
p208 = new_with_vtable(27379768)
p209 = new_with_vtable(27448768)
+2552: setfield_gc(p209, i158, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p209, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+2589: setfield_gc(p0, i207, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2600: setfield_gc(p208, ConstPtr(ptr131), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
+2614: setfield_gc(p208, p153, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+2618: setfield_gc(p208, i190, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+2622: setfield_gc(p208, i186, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+2626: i210 = call_assembler(0, p208, descr=<Loop5>)
guard_not_forced(, descr=<Guard118>) [p1, p0, p49, p179, p208, i210, p209, p3, p5, p10, p12, p16, p153, p50]
+2726: guard_no_exception(, descr=<Guard187>) [p1, p0, p49, p179, p208, i210, p209, p3, p5, p10, p12, p16, p153, p50]
+2741: guard_false(i210, descr=<Guard188>) [p1, p0, p49, p179, p208, p209, p3, p5, p10, p12, p16, p153, p50]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #21 RETURN_VALUE')
+2750: p211 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+2761: guard_isnull(p211, descr=<Guard189>) [p1, p0, p49, p211, p209, p3, p5, p10, p12, p16, p153, p50]
+2770: i212 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 48>)
+2774: i213 = int_is_true(i212)
guard_false(i213, descr=<Guard190>) [p1, p0, p49, p209, p3, p5, p10, p12, p16, p153, p50]
+2784: p214 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p49, p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+2815: setfield_gc(p209, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+2830: guard_not_invalidated(, descr=<Guard191>) [p1, p0, p3, p5, p10, p12, p16, p153, None]
+2830: i216 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+2838: i217 = int_lt(i216, 0)
guard_false(i217, descr=<Guard192>) [p1, p0, p3, p5, p10, p12, p16, p153, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+2848: jump(p0, p1, p3, p5, p10, p12, p153, p16, i212, p49, p50, descr=TargetToken(140337845728288))
+2859: --end of the loop--
[2d45032172fc] jit-log-opt-loop}
[2d450344faa8] {jit-backend
[2d450347e3f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35abd90 +0  488DA50000000049BB30B3E1F5A27F00004D8B3B4983C70149BB30B3E1F5A27F00004D893B4C8B7E404D0FB67C3F184983FF330F84000000004883C7014C8B7E084C39FF0F8C00000000B8000000004889042550926F0141BBB0D1E20041FFD3B802000000488D65D8415F415E415D415C5B5DC349BB00805AF3A27F000041FFD31D1803C100000049BB00805AF3A27F000041FFD31D1803C2000000
[2d4503484afa] jit-backend-dump}
[2d45034856c4] {jit-backend-addr
bridge out of Guard 114 has address 7fa2f35abd90 to 7fa2f35abe04
[2d45034870c2] jit-backend-addr}
[2d4503487ec0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35abd93 +0  70FFFFFF
[2d4503489942] jit-backend-dump}
[2d450348a6e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35abdc5 +0  3B000000
[2d450348bcac] jit-backend-dump}
[2d450348c59a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35abdd6 +0  3E000000
[2d450348dab8] jit-backend-dump}
[2d450348e74e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa693 +0  F9160000
[2d450348fda4] jit-backend-dump}
[2d4503490b6c] jit-backend}
[2d4503491fd6] {jit-log-opt-bridge
# bridge out of Guard 114 with 10 ops
[i0, p1]
debug_merge_point(0, 0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+37: p2 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+41: i3 = strgetitem(p2, i0)
+47: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard193>) [i0, p1]
+57: i7 = int_add(i0, 1)
+61: i8 = getfield_gc_pure(p1, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+65: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard194>) [i7, p1]
+74: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1b22620>)
+116: --end of the loop--
[2d45034a72be] jit-log-opt-bridge}
[2d4504010fb2] {jit-backend
[2d4504065576] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35abe3c
[2d450406fbd8] jit-backend-dump}
[2d4504070862] {jit-backend-addr
bridge out of Guard 154 has address 7fa2f35abe3c to 7fa2f35abf7a
[2d45040720c8] jit-backend-addr}
[2d4504072dbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35abe3f +0  10FEFFFF
[2d450407475c] jit-backend-dump}
[2d45040754f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35abe71 +0  05010000
[2d4504076a7e] jit-backend-dump}
[2d4504077396] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35abe7f +0  1B010000
[2d4504085f7c] jit-backend-dump}
[2d4504086d9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35abec1 +0  19010000
[2d4504088448] jit-backend-dump}
[2d4504089240] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aae0c +0  2C100000
[2d450408a944] jit-backend-dump}
[2d450408b7b4] jit-backend}
[2d450408cf54] {jit-log-opt-bridge
# bridge out of Guard 154 with 19 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
debug_merge_point(1, 1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #21 RETURN_VALUE')
+37: p13 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+48: guard_isnull(p13, descr=<Guard195>) [p0, p1, p2, p13, p5, p6, p7, p8, p9, p10, p3, p4, p12, p11]
+57: i14 = getfield_gc(p2, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 48>)
+61: i15 = int_is_true(i14)
guard_false(i15, descr=<Guard196>) [p0, p1, p2, p5, p6, p7, p8, p9, p10, p3, p4, p12, p11]
+71: p16 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p2, p11, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+104: setfield_gc(p5, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+119: guard_not_invalidated(, descr=<Guard197>) [p0, p1, p6, p7, p8, p9, p10, None, None, p12, None]
+119: i20 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+127: i22 = int_lt(i20, 0)
guard_false(i22, descr=<Guard198>) [p0, p1, p6, p7, p8, p9, p10, None, None, p12, None]
debug_merge_point(0, 0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
p24 = new_with_vtable(ConstClass(W_StringObject))
+200: setfield_gc(p24, p12, descr=<FieldP pypy.objspace.std.stringobject.W_StringObject.inst__value 8>)
+211: jump(p1, p0, ConstPtr(ptr25), p6, 4, p7, 0, 44, p8, p9, p24, p10, ConstPtr(ptr29), ConstPtr(ptr30), ConstPtr(ptr30), ConstPtr(ptr30), descr=TargetToken(140337845728208))
+318: --end of the loop--
[2d45040bf35a] jit-log-opt-bridge}
[2d450412b414] {jit-backend
[2d4504146bf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35abffb +0  488DA50000000049BB60B3E1F5A27F00004D8B3B4983C70149BB60B3E1F5A27F00004D893B4989FF4883C70148897E1848C74620000000004C897E28B8010000004889042550926F0141BBB0D1E20041FFD3B802000000488D65D8415F415E415D415C5B5DC3
[2d450414c570] jit-backend-dump}
[2d450414d01a] {jit-backend-addr
bridge out of Guard 111 has address 7fa2f35abffb to 7fa2f35ac061
[2d450414e706] jit-backend-addr}
[2d450414f36c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35abffe +0  70FFFFFF
[2d4504150bc0] jit-backend-dump}
[2d4504151928] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa5d6 +0  211A0000
[2d4504152e64] jit-backend-dump}
[2d4504153bb4] jit-backend}
[2d4504154cdc] {jit-log-opt-bridge
# bridge out of Guard 111 with 5 ops
[i0, p1]
+37: i3 = int_add(i0, 1)
+44: setfield_gc(p1, i3, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+48: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+56: setfield_gc(p1, i0, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+60: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1b22620>)
+102: --end of the loop--
[2d4504161ace] jit-log-opt-bridge}
[2d45043bb69a] {jit-backend
[2d45043d2d28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac061 +0  488DA50000000049BB78B3E1F5A27F00004D8B3B4983C70149BB78B3E1F5A27F00004D893B4989FF4883C70148897E1848C74620000000004C897E28B8010000004889042550926F0141BBB0D1E20041FFD3B802000000488D65D8415F415E415D415C5B5DC3
[2d45043d8200] jit-backend-dump}
[2d45043e2ad2] {jit-backend-addr
bridge out of Guard 113 has address 7fa2f35ac061 to 7fa2f35ac0c7
[2d45043e447c] jit-backend-addr}
[2d45043e5154] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac064 +0  70FFFFFF
[2d45043e6a3e] jit-backend-dump}
[2d45043e76f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa682 +0  DB190000
[2d45043e8d3c] jit-backend-dump}
[2d45043e9afe] jit-backend}
[2d45043eae90] {jit-log-opt-bridge
# bridge out of Guard 113 with 5 ops
[i0, p1]
+37: i3 = int_add(i0, 1)
+44: setfield_gc(p1, i3, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+48: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+56: setfield_gc(p1, i0, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+60: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1b22620>)
+102: --end of the loop--
[2d45043f71a2] jit-log-opt-bridge}
[2d450444dae8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa012 +0  E96A030000
[2d4504450cb0] jit-backend-dump}
[2d450445185c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa161 +0  E9F2020000
[2d450445318e] jit-backend-dump}
[2d4504453da0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aa9f7 +0  E9B00A0000
[2d450445542c] jit-backend-dump}
[2d4504455ce4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaa4d +0  E9D10A0000
[2d450445716c] jit-backend-dump}
[2d4504457a54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aac40 +0  E94E0A0000
[2d4504458f18] jit-backend-dump}
[2d45044597ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aae60 +0  E9440A0000
[2d450445acb2] jit-backend-dump}
[2d450445b834] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35aaf1a +0  E96A0A0000
[2d450445cf86] jit-backend-dump}
[2d450445db14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab137 +0  E9050A0000
[2d450445f0a4] jit-backend-dump}
[2d450445f950] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ab349 +0  E90C0A0000
[2d4504460dcc] jit-backend-dump}
[2d45044616f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35abeb3 +0  E909010000
[2d4504462b7e] jit-backend-dump}
[2d450484c806] {jit-backend
[2d450493e696] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac0c
[2d450495dc80] jit-backend-dump}
[2d450495ed54] {jit-backend-addr
Loop 7 (<code object double_loop, file 'source.py', line 47> #38 FOR_ITER) has address 7fa2f35ac0fd to 7fa2f35ac338 (bootstrap 7fa2f35ac0c7)
[2d4504960e12] jit-backend-addr}
[2d4504961b3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac0f9 +0  10FFFFFF
[2d4504963a2e] jit-backend-dump}
[2d45049646b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac1cc +0  68010000
[2d4504965cc0] jit-backend-dump}
[2d4504966632] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac1e1 +0  75010000
[2d4504967be6] jit-backend-dump}
[2d4504968606] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac1ee +0  88010000
[2d4504969a34] jit-backend-dump}
[2d450496a358] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac203 +0  94010000
[2d450496b756] jit-backend-dump}
[2d450496c056] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac21d +0  9D010000
[2d450496d42a] jit-backend-dump}
[2d450496dd60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac226 +0  B8010000
[2d450496f104] jit-backend-dump}
[2d450496fad6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac245 +0  BC010000
[2d4504970fe2] jit-backend-dump}
[2d45049718b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac257 +0  CA010000
[2d4504972c9e] jit-backend-dump}
[2d450497359e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac269 +0  D6010000
[2d4504974948] jit-backend-dump}
[2d450497522a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac279 +0  E4010000
[2d45049765b6] jit-backend-dump}
[2d4504976eb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac286 +0  F4010000
[2d4504978644] jit-backend-dump}
[2d4504979202] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac298 +0  1D020000
[2d450497a7f8] jit-backend-dump}
[2d450497b20c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac2ab +0  27020000
[2d450497c5b6] jit-backend-dump}
[2d450497cea4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac2e0 +0  0F020000
[2d450497e27e] jit-backend-dump}
[2d450497eb54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac301 +0  0C020000
[2d450497ff3a] jit-backend-dump}
[2d4504980828] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac30d +0  1D020000
[2d4504981db8] jit-backend-dump}
[2d45049828f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac31f +0  47020000
[2d4504983e58] jit-backend-dump}
[2d4504984e36] jit-backend}
[2d4504986aaa] {jit-log-opt-loop
# Loop 7 (<code object double_loop, file 'source.py', line 47> #38 FOR_ITER) : loop with 86 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+92: i4 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+96: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+100: i6 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+108: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+112: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+116: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+120: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+124: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+128: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+132: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+143: p20 = getarrayitem_gc(p8, 5, descr=<ArrayP 8>)
+154: p22 = getarrayitem_gc(p8, 6, descr=<ArrayP 8>)
+165: p24 = getarrayitem_gc(p8, 7, descr=<ArrayP 8>)
+169: p25 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+169: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, p20, p22, p24, descr=TargetToken(140337845731248))
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+255: guard_value(i4, 5, descr=<Guard199>) [i4, p1, p0, p2, p3, p5, i6, i7, p10, p12, p14, p16, p18, p20, p22, p24]
+265: guard_class(p18, 27376640, descr=<Guard200>) [p1, p0, p18, p2, p3, p5, i6, p10, p12, p14, p16, p20, p22, p24]
+286: p28 = getfield_gc(p18, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+290: guard_nonnull(p28, descr=<Guard201>) [p1, p0, p18, p28, p2, p3, p5, i6, p10, p12, p14, p16, p20, p22, p24]
+299: i29 = getfield_gc(p18, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+303: p30 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+307: guard_class(p30, 27558936, descr=<Guard202>) [p1, p0, p18, i29, p30, p28, p2, p3, p5, i6, p10, p12, p14, p16, p20, p22, p24]
+320: p32 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+324: i33 = getfield_gc_pure(p32, descr=<FieldS tuple3.item0 8>)
+328: i34 = getfield_gc_pure(p32, descr=<FieldS tuple3.item1 16>)
+332: i35 = getfield_gc_pure(p32, descr=<FieldS tuple3.item2 24>)
+336: i37 = int_lt(i29, 0)
guard_false(i37, descr=<Guard203>) [p1, p0, p18, i29, i35, i34, i33, p2, p3, p5, i6, p10, p12, p14, p16, p20, p22, p24]
+346: i38 = int_ge(i29, i35)
guard_false(i38, descr=<Guard204>) [p1, p0, p18, i29, i34, i33, p2, p3, p5, i6, p10, p12, p14, p16, p20, p22, p24]
+355: i39 = int_mul(i29, i34)
+362: i40 = int_add(i33, i39)
+368: i42 = int_add(i29, 1)
+372: setfield_gc(p18, i42, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+376: guard_value(i6, 0, descr=<Guard205>) [i6, p1, p0, p2, p3, p5, p10, p12, p14, p16, p18, p22, p24, i40]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #41 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #44 LOAD_FAST')
+386: guard_nonnull_class(p10, ConstClass(W_IntObject), descr=<Guard206>) [p1, p0, p10, p2, p3, p5, p12, p16, p18, p22, p24, i40]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #47 LOAD_FAST')
+404: guard_nonnull_class(p12, ConstClass(W_IntObject), descr=<Guard207>) [p1, p0, p12, p2, p3, p5, p10, p16, p18, p22, p24, i40]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #50 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #53 BINARY_ADD')
+422: i46 = getfield_gc_pure(p12, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+426: i47 = int_add_ovf(i46, i40)
guard_no_overflow(, descr=<Guard208>) [p1, p0, p12, i47, p2, p3, p5, p10, p16, p18, i40]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #54 INPLACE_ADD')
+438: i48 = getfield_gc_pure(p10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+442: i49 = int_add_ovf(i48, i47)
guard_no_overflow(, descr=<Guard209>) [p1, p0, p10, i49, p2, p3, p5, p12, p16, p18, i47, i40]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #55 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #58 JUMP_ABSOLUTE')
+451: guard_not_invalidated(, descr=<Guard210>) [p1, p0, p2, p3, p5, p12, p16, p18, i49, None, i40]
+451: i52 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+459: i54 = int_lt(i52, 0)
guard_false(i54, descr=<Guard211>) [p1, p0, p2, p3, p5, p12, p16, p18, i49, None, i40]
+469: guard_value(p2, ConstPtr(ptr55), descr=<Guard212>) [p1, p0, p2, p3, p5, p12, p16, p18, i49, None, i40]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+488: label(p0, p1, p3, p5, i49, p12, i40, p16, p18, i42, i35, i34, i33, i46, descr=TargetToken(140337885831200))
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+532: i56 = int_ge(i42, i35)
guard_false(i56, descr=<Guard213>) [p1, p0, p18, i42, i34, i33, p3, p5, p12, p16, i49, i40]
+541: i57 = int_mul(i42, i34)
+548: i58 = int_add(i33, i57)
+554: i59 = int_add(i42, 1)
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #41 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #44 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #47 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #50 LOAD_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #53 BINARY_ADD')
+558: setfield_gc(p18, i59, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+562: i60 = int_add_ovf(i46, i58)
guard_no_overflow(, descr=<Guard214>) [p1, p0, p12, i60, p3, p5, p16, p18, i58, i49, None]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #54 INPLACE_ADD')
+574: i61 = int_add_ovf(i49, i60)
guard_no_overflow(, descr=<Guard215>) [p1, p0, i61, p3, p5, p12, p16, p18, i60, i58, i49, None]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #55 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #58 JUMP_ABSOLUTE')
+586: guard_not_invalidated(, descr=<Guard216>) [p1, p0, p3, p5, p12, p16, p18, i61, None, i58, None, None]
+586: i62 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+594: i63 = int_lt(i62, 0)
guard_false(i63, descr=<Guard217>) [p1, p0, p3, p5, p12, p16, p18, i61, None, i58, None, None]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+604: jump(p0, p1, p3, p5, i61, p12, i58, p16, p18, i59, i35, i34, i33, i46, descr=TargetToken(140337885831200))
+625: --end of the loop--
[2d4504a33940] jit-log-opt-loop}
[2d45052f4ece] {jit-backend
[2d45056f3cac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac
[2d4505711802] jit-backend-dump}
[2d45057128d0] {jit-backend-addr
bridge out of Guard 213 has address 7fa2f35ac595 to 7fa2f35ac7f7
[2d450571461c] jit-backend-addr}
[2d45057153ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac598 +0  80FEFFFF
[2d45057170ee] jit-backend-dump}
[2d4505717eaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac5d7 +0  1C020000
[2d4505719788] jit-backend-dump}
[2d450571a2fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac5e9 +0  3F020000
[2d450571b732] jit-backend-dump}
[2d450571c092] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac5fd +0  45020000
[2d450571d4a2] jit-backend-dump}
[2d450571de50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac60a +0  52020000
[2d450571f440] jit-backend-dump}
[2d450571fe24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac61f +0  58020000
[2d4505721216] jit-backend-dump}
[2d4505721b1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac639 +0  5B020000
[2d4505722eba] jit-backend-dump}
[2d4505723790] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac642 +0  70020000
[2d4505724b9a] jit-backend-dump}
[2d4505725464] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac672 +0  5D020000
[2d4505726862] jit-backend-dump}
[2d4505727210] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac689 +0  61020000
[2d450572877c] jit-backend-dump}
[2d4505729136] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac69e +0  68020000
[2d450572a4e0] jit-backend-dump}
[2d450572b188] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7fa2f35ac2e0 +0  B1020000
[2d450572c5c8] jit-backend-dump}
[2d450572d594] jit-backend}
[2d450572f4e4] {jit-log-opt-bridge
# bridge out of Guard 213 with 60 ops
[p0, p1, p2, i3, i4, i5, p6, p7, p8, p9, i10, i11]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #61 POP_BLOCK')
+37: p12 = getfield_gc_pure(p6, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+48: i13 = getfield_gc_pure(p6, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+52: setfield_gc(p2, ConstPtr(ptr14), descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+60: guard_value(i13, 4, descr=<Guard218>) [p0, p1, i13, p12, p7, p8, p9, i10, i11]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #62 JUMP_ABSOLUTE')
+70: guard_not_invalidated(, descr=<Guard219>) [p0, p1, p12, p7, p8, p9, i10, i11]
+70: i17 = getfield_raw(47383048, descr=<FieldS pypysig_long_struct.c_value 0>)
+78: i19 = int_lt(i17, 0)
guard_false(i19, descr=<Guard220>) [p0, p1, p12, p7, p8, p9, i10, i11]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #19 FOR_ITER')
+88: guard_class(p9, 27376640, descr=<Guard221>) [p0, p1, p9, p12, p7, p8, i10, i11]
+108: p21 = getfield_gc(p9, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+112: guard_nonnull(p21, descr=<Guard222>) [p0, p1, p9, p21, p12, p7, p8, i10, i11]
+121: i22 = getfield_gc(p9, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+125: p23 = getfield_gc(p21, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+129: guard_class(p23, 27558936, descr=<Guard223>) [p0, p1, p9, i22, p23, p21, p12, p7, p8, i10, i11]
+142: p25 = getfield_gc(p21, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+146: i26 = getfield_gc_pure(p25, descr=<FieldS tuple3.item0 8>)
+150: i27 = getfield_gc_pure(p25, descr=<FieldS tuple3.item1 16>)
+154: i28 = getfield_gc_pure(p25, descr=<FieldS tuple3.item2 24>)
+158: i30 = int_lt(i22, 0)
guard_false(i30, descr=<Guard224>) [p0, p1, p9, i22, i28, i27, i26, p12, p7, p8, i10, i11]
+168: i31 = int_ge(i22, i28)
guard_false(i31, descr=<Guard225>) [p0, p1, p9, i22, i27, i26, p12, p7, p8, i10, i11]
+177: i32 = int_mul(i22, i27)
+184: i33 = int_add(i26, i32)
+187: i35 = int_add(i22, 1)
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #22 STORE_FAST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #25 SETUP_LOOP')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #28 LOAD_GLOBAL')
+191: p36 = getfield_gc(p1, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+202: setfield_gc(p9, i35, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+206: guard_value(p36, ConstPtr(ptr37), descr=<Guard226>) [p0, p1, p36, p7, p9, p12, i33, i10, i11]
+225: p38 = getfield_gc(p36, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+229: guard_value(p38, ConstPtr(ptr39), descr=<Guard227>) [p0, p1, p38, p36, p7, p9, p12, i33, i10, i11]
+248: p41 = getfield_gc(ConstPtr(ptr40), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+256: guard_value(p41, ConstPtr(ptr42), descr=<Guard228>) [p0, p1, p41, p7, p9, p12, i33, i10, i11]
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #31 LOAD_CONST')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #34 CALL_FUNCTION')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #37 GET_ITER')
debug_merge_point(0, 0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+269: p43 = same_as(ConstPtr(ptr39))
+269: label(p1, p0, p12, p7, i10, i33, i11, p9, descr=TargetToken(140337885835840))
p45 = new_with_vtable(27450024)
p47 = new_with_vtable(ConstClass(W_IntObject))
p49 = new_with_vtable(ConstClass(W_IntObject))
+393: setfield_gc(p47, i10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
p51 = new_with_vtable(ConstClass(W_IntObject))
+411: setfield_gc(p49, i33, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
p53 = new_with_vtable(27376640)
p55 = new_with_vtable(ConstClass(W_ListObject))
+444: setfield_gc(p45, p12, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+448: setfield_gc(p45, 4, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+456: setfield_gc(p45, 62, descr=<FieldU pypy.interpreter.pyopcode.FrameBlock.inst_handlerposition 8>)
+464: setfield_gc(p51, i11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+475: setfield_gc(p55, ConstPtr(ptr58), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+489: setfield_gc(p55, ConstPtr(ptr59), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+497: setfield_gc(p53, p55, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+501: jump(p1, p0, ConstPtr(ptr60), p45, 5, p7, 0, 37, p47, p49, p51, p9, p53, ConstPtr(ptr64), ConstPtr(ptr65), ConstPtr(ptr65), descr=TargetToken(140337845731248))
+610: --end of the loop--
[2d45057a3050] jit-log-opt-bridge}
[2d45066f41a6] {jit-backend-counts
entry 0:1
TargetToken(140337845502144):1
TargetToken(140337845502224):41
entry 1:1
TargetToken(140337845502384):1
TargetToken(140337845502464):41
entry 2:4647
TargetToken(140337845502624):4647
TargetToken(140337845502704):9292
entry 3:201
TargetToken(140337845502864):201
TargetToken(140337845502944):4468
bridge 41:4446
bridge 58:4268
TargetToken(140337845723568):4268
entry 4:1
TargetToken(140337845725488):1
TargetToken(140337845725568):1938
entry 5:3173
bridge 109:2882
bridge 112:2074
bridge 110:158
entry 6:377
TargetToken(140337845728208):527
TargetToken(140337845728288):1411
bridge 114:1420
bridge 154:150
bridge 111:50
bridge 113:7
entry 7:201
TargetToken(140337845731248):9990
TargetToken(140337885831200):998737
bridge 213:9790
TargetToken(140337885835840):9789
[2d4506713700] jit-backend-counts}
