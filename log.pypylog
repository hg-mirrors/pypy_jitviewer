[d4bd435c340] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4436000 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000584889452058488945104889E848BB30CF61CD9902000048832B084C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[d4bd43dff40] jit-backend-dump}
[d4bd43e968a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4436093 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB800000049BB48D3E5CE99020000498B1B49BB40D3E5CE9902000049C7030000000049BB48D3E5CE9902000049C7030000000048895D38584889452058488945104889E848BB30CF61CD9902000048832B084C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[d4bd43f3eaa] jit-backend-dump}
[d4bd43f8304] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4436159 +0  4889455848894D60488955684889757048897D784C8985800000004C898D880000004C899590000000488B7C240849BBD01AD1CC9902000041FFD3488B4558488B4D60488B5568488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[d4bd440fc6c] jit-backend-dump}
[d4bd441924a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44361c0 +0  4889455848894D60488955684889757048897D784C8985800000004C898D880000004C899590000000488B7C240849BB101CD1CC9902000041FFD3488B442408F6400480488B4558488B4D60488B5568488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[d4bd441fdd0] jit-backend-dump}
[d4bd457435c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4436230 +0  4883EC384889442408F20F114424184889EF48895C24284C8964243049BB48D3E5CE99020000498B1B49BB40D3E5CE990200004D8B2349BB40D3E5CE9902000049C7030000000049BB48D3E5CE9902000049C7030000000049BBD01AD1CC9902000041FFD3F20F10442418488B44240849BB48D3E5CE9902000049891B49BB40D3E5CE990200004D8923488B5C24284C8B642430488D642438C3
[d4bd457e70a] jit-backend-dump}
[d4bd4586ce6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44362ca
[d4bd459ae14] jit-backend-dump}
[d4bd459f028] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd
[d4bd45aa7fc] jit-backend-dump}
[d4bd45ae4f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd443661b
[d4bd45cae42] jit-backend-dump}
[d4bd45cf30e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd
[d4bd45de666] jit-backend-dump}
[d4bd45e261c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44368c
[d4bd45f09fc] jit-backend-dump}
[d4bd45f4d26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4436a33 +0  49BB48D3E5CE99020000498B0349BB40D3E5CE9902000049C7030000000049BB48D3E5CE9902000049C703000000004889453849BBE00A61CD990200004C895D104889E848BB30CF61CD9902000048832B084C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[d4bd45fbd0a] jit-backend-dump}
[d4bd46054f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4436ab1 +0  48894D584889556848895D70488975784C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000F20F1185C0000000F20F118DC8000000F20F1195D0000000F20F119DD8000000F20F11A5E0000000F20F11ADE8000000F20F11B5F0000000F20F11BDF8000000F2440F118500010000F2440F118D08010000F2440F119510010000F2440F119D18010000F2440F11A520010000F2440F11AD28010000F2440F11B530010000488B4C240848894D204883EC084829C749BB30A39FCC9902000041FFD34883C4084885C00F840201000049BB30CF61CD99020000498B0B488B69F8F645040174154883EC0849BB306243D49D02000041FFD34883C408488B4D58488B5568488B5D70488B75784C8B85880000004C8B8D900000004C8B95980000004C8BA5A00000004C8BADA80000004C8BB5B00000004C8BBDB8000000F20F1085C0000000F20F108DC8000000F20F1095D0000000F20F109DD8000000F20F10A5E0000000F20F10ADE8000000F20F10B5F0000000F20F10BDF8000000F2440F108500010000F2440F108D08010000F2440F109510010000F2440F109D18010000F2440F10A520010000F2440F10AD28010000F2440F10B53001000049BB28CE61CD99020000498B3B48C7452000000000C34883C40849BB336A43D49D02000041FFE3
[d4bd461836e] jit-backend-dump}
[d4bd461e1f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4436cae
[d4bd4636ab0] jit-backend-dump}
[d4bd46401ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4436eb
[d4bd4653aa0] jit-backend-dump}
[d4bd465898a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44370ad +0  48894D584889556848895D70488975784C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000F20F1185C0000000F20F118DC8000000F20F1195D0000000F20F119DD8000000F20F11A5E0000000F20F11ADE8000000F20F11B5F0000000F20F11BDF8000000F2440F118500010000F2440F118D08010000F2440F119510010000F2440F119D18010000F2440F11A520010000F2440F11AD28010000F2440F11B530010000488B4C240848894D204883EC0849BBD0A29FCC9902000041FFD34883C4084885C00F840201000049BB30CF61CD99020000498B0B488B69F8F645040174154883EC0849BB306243D49D02000041FFD34883C408488B4D58488B5568488B5D70488B75784C8B85880000004C8B8D900000004C8B95980000004C8BA5A00000004C8BADA80000004C8BB5B00000004C8BBDB8000000F20F1085C0000000F20F108DC8000000F20F1095D0000000F20F109DD8000000F20F10A5E0000000F20F10ADE8000000F20F10B5F0000000F20F10BDF8000000F2440F108500010000F2440F108D08010000F2440F109510010000F2440F109D18010000F2440F10A520010000F2440F10AD28010000F2440F10B53001000049BB28CE61CD99020000498B3B48C7452000000000C34883C40849BB336A43D49D02000041FFE3
[d4bd466b5ba] jit-backend-dump}
[d4bd466f11c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44372a7 +0  4889E74883EC0849BB40CEE3CC9902000041FFD34883C40849BB40D3E5CE99020000498B034885C07501C34883C40849BB336A43D49D02000041FFE3
[d4bd4673ed6] jit-backend-dump}
[d4bd4674e24] {jit-backend-counts
[d4bd4675ab2] jit-backend-counts}
[d4bd590ac7a] {jit-backend
[d4bd5fccb60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd
[d4bd6011706] jit-backend-dump}
[d4bd6013120] {jit-backend-addr
Loop 0 (<code object _optimize_charset, file '/usr/local/pypy/lib-python/2.7/sre_compile.py', line 207> #274 FOR_ITER) has address 0x29dd44374c1 to 0x29dd44377d4 (bootstrap 0x29dd4437450)
[d4bd6016fb0] jit-backend-addr}
[d4bd6018af2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd443766c +0  64010000
[d4bd601be22] jit-backend-dump}
[d4bd601cec0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437681 +0  74010000
[d4bd601f6c4] jit-backend-dump}
[d4bd602088a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd443768f +0  8B010000
[d4bd60230cc] jit-backend-dump}
[d4bd6024280] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44376a5 +0  9A010000
[d4bd6026e72] jit-backend-dump}
[d4bd6027d12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44376b6 +0  AE010000
[d4bd602b122] jit-backend-dump}
[d4bd602c1f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44376d2 +0  B7010000
[d4bd602eac2] jit-backend-dump}
[d4bd602fa20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44376dc +0  D2010000
[d4bd603223e] jit-backend-dump}
[d4bd6033028] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44376f6 +0  DD010000
[d4bd607b458] jit-backend-dump}
[d4bd607c918] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437704 +0  F4010000
[d4bd607f10c] jit-backend-dump}
[d4bd607ffd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437717 +0  06020000
[d4bd6082502] jit-backend-dump}
[d4bd608348c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd443772a +0  18020000
[d4bd6085a92] jit-backend-dump}
[d4bd6086a94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437738 +0  2F020000
[d4bd6089206] jit-backend-dump}
[d4bd608ab60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd443774f +0  62020000
[d4bd608d342] jit-backend-dump}
[d4bd608e20e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437781 +0  55020000
[d4bd6090ab6] jit-backend-dump}
[d4bd6091944] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd443779d +0  5E020000
[d4bd6093f98] jit-backend-dump}
[d4bd6094d3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44377aa +0  76020000
[d4bd609738e] jit-backend-dump}
[d4bd6098392] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44377c1 +0  A9020000
[d4bd609ab48] jit-backend-dump}
[d4bd609d80a] jit-backend}
[d4bd60a2c66] {jit-log-opt-loop
# Loop 0 (<code object _optimize_charset, file '/usr/local/pypy/lib-python/2.7/sre_compile.py', line 207> #274 FOR_ITER) : loop with 106 ops
[p0, p1]
+143: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+154: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+158: i4 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+162: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+169: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+173: i7 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+181: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+185: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+189: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+193: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+197: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+201: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+205: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+216: p21 = getarrayitem_gc(p9, 5, descr=<ArrayP 8>)
+227: p23 = getarrayitem_gc(p9, 6, descr=<ArrayP 8>)
+238: p25 = getarrayitem_gc(p9, 7, descr=<ArrayP 8>)
+249: p27 = getarrayitem_gc(p9, 8, descr=<ArrayP 8>)
+260: p29 = getarrayitem_gc(p9, 9, descr=<ArrayP 8>)
+271: p31 = getarrayitem_gc(p9, 10, descr=<ArrayP 8>)
+282: p33 = getarrayitem_gc(p9, 11, descr=<ArrayP 8>)
+293: p35 = getarrayitem_gc(p9, 12, descr=<ArrayP 8>)
+304: p37 = getarrayitem_gc(p9, 13, descr=<ArrayP 8>)
+308: p39 = getarrayitem_gc(p9, 14, descr=<ArrayP 8>)
+322: p41 = getarrayitem_gc(p9, 15, descr=<ArrayP 8>)
+336: p43 = getarrayitem_gc(p9, 16, descr=<ArrayP 8>)
+350: p45 = getarrayitem_gc(p9, 17, descr=<ArrayP 8>)
+364: p47 = getarrayitem_gc(p9, 18, descr=<ArrayP 8>)
+378: p49 = getarrayitem_gc(p9, 19, descr=<ArrayP 8>)
+392: p51 = getarrayitem_gc(p9, 20, descr=<ArrayP 8>)
+406: p53 = getarrayitem_gc(p9, 21, descr=<ArrayP 8>)
+420: p55 = getarrayitem_gc(p9, 22, descr=<ArrayP 8>)
+434: p57 = getarrayitem_gc(p9, 23, descr=<ArrayP 8>)
+448: p58 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+448: label(p0, p1, p2, p3, i4, p5, p6, i7, i8, p11, p13, p15, p17, p19, p21, p23, p25, p27, p29, p31, p33, p35, p37, p39, p41, p43, p45, p47, p49, p51, p53, p55, p57, descr=TargetToken(2876835872976))
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #274 FOR_ITER')
+534: guard_value(i4, 15, descr=<Guard0x29dd0c89718>) [i4, p1, p0, p2, p3, p5, p6, i7, i8, p11, p13, p15, p17, p19, p21, p23, p25, p27, p29, p31, p33, p35, p37, p39, p41, p43, p45, p47, p49, p51, p53, p55, p57]
+544: guard_class(p39, 2859595984528, descr=<Guard0x29dd35462f0>) [p1, p0, p39, p2, p3, p5, p6, i7, p11, p13, p15, p17, p19, p21, p23, p25, p27, p29, p31, p33, p35, p37, p41, p43, p45, p47, p49, p51, p53, p55, p57]
+565: p61 = getfield_gc(p39, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+570: guard_nonnull(p61, descr=<Guard0x29dd3546278>) [p1, p0, p39, p61, p2, p3, p5, p6, i7, p11, p13, p15, p17, p19, p21, p23, p25, p27, p29, p31, p33, p35, p37, p41, p43, p45, p47, p49, p51, p53, p55, p57]
+579: i62 = getfield_gc(p39, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+584: p63 = getfield_gc(p61, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+588: guard_class(p63, 2859596180976, descr=<Guard0x29dd3546200>) [p1, p0, p39, i62, p63, p61, p2, p3, p5, p6, i7, p11, p13, p15, p17, p19, p21, p23, p25, p27, p29, p31, p33, p35, p37, p41, p43, p45, p47, p49, p51, p53, p55, p57]
+601: p65 = getfield_gc(p61, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+605: i66 = getfield_gc(p65, descr=<FieldS list.length 8>)
+609: i67 = uint_ge(i62, i66)
guard_false(i67, descr=<Guard0x29dd3546188>) [p1, p0, p39, i62, i66, p65, p2, p3, p5, p6, i7, p11, p13, p15, p17, p19, p21, p23, p25, p27, p29, p31, p33, p35, p37, p41, p43, p45, p47, p49, p51, p53, p55, p57]
+618: p68 = getfield_gc(p65, descr=<FieldP list.items 16>)
+622: i69 = getarrayitem_gc(p68, i62, descr=<ArrayS 8>)
+627: i71 = int_add(i62, 1)
+631: setfield_gc(p39, i71, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+636: guard_value(i7, 0, descr=<Guard0x29dd3546110>) [i7, p1, p0, p2, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p25, p27, p29, p31, p33, p35, p37, p39, p43, p45, p47, p49, p51, p53, p55, p57, i69]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #277 STORE_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #280 LOAD_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #283 POP_JUMP_IF_FALSE')
+646: i73 = int_is_true(i69)
guard_false(i73, descr=<Guard0x29dd3546098>) [p1, p0, p2, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p25, p27, p29, p31, p33, p37, p39, p43, p45, p47, p49, p51, p53, p55, p57, i69]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #320 LOAD_FAST')
+656: guard_nonnull_class(p29, ConstClass(W_IntObject), descr=<Guard0x29dd3546020>) [p1, p0, p29, p2, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p25, p27, p31, p33, p37, p39, p43, p45, p47, p49, p51, p53, p55, p57, i69]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #323 POP_JUMP_IF_FALSE')
+682: i75 = getfield_gc_pure(p29, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+686: i76 = int_is_true(i75)
guard_false(i76, descr=<Guard0x29dd0c89f88>) [p1, p0, p29, p2, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p25, p27, p31, p33, p37, p39, p43, p45, p47, p49, p51, p53, p55, p57, i69]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #351 LOAD_FAST')
+696: guard_nonnull_class(p25, ConstClass(W_IntObject), descr=<Guard0x29dd0c89f10>) [p1, p0, p25, p2, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p27, p29, p31, p33, p37, p39, p43, p45, p47, p49, p51, p53, p55, p57, i69]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #354 LOAD_CONST')
+715: guard_value(p2, ConstPtr(ptr78), descr=<Guard0x29dd0c89e98>) [p1, p0, p2, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p25, p27, p29, p31, p33, p37, p39, p43, p45, p47, p49, p51, p53, p55, p57, i69]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #357 BINARY_ADD')
+734: i79 = getfield_gc_pure(p25, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+738: i81 = int_add_ovf(i79, 1)
guard_no_overflow(descr=<Guard0x29dd0c89e20>) [p1, p0, p25, i81, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p27, p29, p31, p33, p37, p39, p45, p47, p49, p51, p53, p55, p57, i69]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #358 STORE_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #361 JUMP_ABSOLUTE')
+748: guard_not_invalidated(descr=<Guard0x29dd0c89da8>) [p1, p0, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p27, p29, p31, p33, p37, p39, p45, p47, p49, p51, p53, p55, p57, i81, i69]
+748: i83 = getfield_raw(2859624457920, descr=<FieldS pypysig_long_struct.c_value 0>)
+761: i85 = int_lt(i83, 0)
guard_false(i85, descr=<Guard0x29dd0c89d30>) [p1, p0, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p27, p29, p31, p33, p37, p39, p45, p47, p49, p51, p53, p55, p57, i81, i69]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #274 FOR_ITER')
+771: label(p0, p1, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, i81, p27, p29, p31, p33, i69, p37, p39, p45, p47, p49, p51, p53, p55, p57, p65, i71, descr=TargetToken(2876835873064))
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #274 FOR_ITER')
+808: i86 = getfield_gc(p65, descr=<FieldS list.length 8>)
+812: i87 = uint_ge(i71, i86)
guard_false(i87, descr=<Guard0x29dd0c89cb8>) [p1, p0, p39, i71, i86, p65, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p27, p29, p31, p33, p37, p45, p47, p49, p51, p53, p55, p57, i81, i69]
+821: p88 = getfield_gc(p65, descr=<FieldP list.items 16>)
+825: i89 = getarrayitem_gc(p88, i71, descr=<ArrayS 8>)
+830: i90 = int_add(i71, 1)
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #277 STORE_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #280 LOAD_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #283 POP_JUMP_IF_FALSE')
+834: setfield_gc(p39, i90, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+839: i91 = int_is_true(i89)
guard_false(i91, descr=<Guard0x29dd0c89c40>) [p1, p0, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p27, p29, p31, p33, p37, p39, p45, p47, p49, p51, p53, p55, p57, i89, i81, None]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #320 LOAD_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #323 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #351 LOAD_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #354 LOAD_CONST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #357 BINARY_ADD')
+849: i93 = int_add_ovf(i81, 1)
guard_no_overflow(descr=<Guard0x29dd0c89bc8>) [p1, p0, i93, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p27, p29, p31, p33, p37, p39, p45, p47, p49, p51, p53, p55, p57, i89, i81, None]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #358 STORE_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #361 JUMP_ABSOLUTE')
+862: guard_not_invalidated(descr=<Guard0x29dd0c89b50>) [p1, p0, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p27, p29, p31, p33, p37, p39, p45, p47, p49, p51, p53, p55, p57, i93, i89, None, None]
+862: i94 = getfield_raw(2859624457920, descr=<FieldS pypysig_long_struct.c_value 0>)
+875: i95 = int_lt(i94, 0)
guard_false(i95, descr=<Guard0x29dd0c89ad8>) [p1, p0, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p27, p29, p31, p33, p37, p39, p45, p47, p49, p51, p53, p55, p57, i93, i89, None, None]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #274 FOR_ITER')
+885: jump(p0, p1, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, i93, p27, p29, p31, p33, i89, p37, p39, p45, p47, p49, p51, p53, p55, p57, p65, i90, descr=TargetToken(2876835873064))
+900: --end of the loop--
[d4bd632bb1a] jit-log-opt-loop}
[d4bd75888aa] {jit-backend
[d4bd786b446] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437bc
[d4bd78951be] jit-backend-dump}
[d4bd7897294] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437bcc +0  39000000
[d4bd789a7de] jit-backend-dump}
[d4bd789b93c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437bd7 +0  39000000
[d4bd789e688] jit-backend-dump}
[d4bd789f6be] {jit-backend-addr
bridge out of Guard 0x29dd3546098 has address 0x29dd4437bc8 to 0x29dd4437d5d
[d4bd78a1f78] jit-backend-addr}
[d4bd78a3324] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437c2a +0  2F010000
[d4bd78a62e8] jit-backend-dump}
[d4bd78a719a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437c3d +0  41010000
[d4bd78aa178] jit-backend-dump}
[d4bd78ab206] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437c4b +0  58010000
[d4bd78adb80] jit-backend-dump}
[d4bd78aea3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437c55 +0  73010000
[d4bd78b15ee] jit-backend-dump}
[d4bd78b2378] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437c68 +0  85010000
[d4bd78d5c42] jit-backend-dump}
[d4bd78d6e8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437c76 +0  9C010000
[d4bd78d9522] jit-backend-dump}
[d4bd78daa16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437c8d +0  CF010000
[d4bd78dd08c] jit-backend-dump}
[d4bd78de098] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437cc0 +0  C1010000
[d4bd78e08ea] jit-backend-dump}
[d4bd78e195e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437cce +0  D8010000
[d4bd78e4102] jit-backend-dump}
[d4bd78e4f9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437ce5 +0  E6010000
[d4bd78e791a] jit-backend-dump}
[d4bd78e87b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437cf6 +0  FA010000
[d4bd78eae38] jit-backend-dump}
[d4bd78ebc12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437d12 +0  03020000
[d4bd78ee1fc] jit-backend-dump}
[d4bd78eef7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437d1c +0  1E020000
[d4bd78f151a] jit-backend-dump}
[d4bd78f234a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437d29 +0  36020000
[d4bd78f4830] jit-backend-dump}
[d4bd78f5634] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437d36 +0  4E020000
[d4bd78fc806] jit-backend-dump}
[d4bd78fd812] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4437d4d +0  81020000
[d4bd78ffeb2] jit-backend-dump}
[d4bd79011dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44376dc +0  E8040000
[d4bd7903838] jit-backend-dump}
[d4bd790546a] jit-backend}
[d4bd7909618] {jit-log-opt-bridge
# bridge out of Guard 0x29dd3546098 with 76 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, i28]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #286 LOAD_FAST')
+76: guard_nonnull_class(p15, ConstClass(W_IntObject), descr=<Guard0x29dd3546e30>) [p0, p1, p15, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, i28]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #289 LOAD_CONST')
+102: guard_value(p2, ConstPtr(ptr30), descr=<Guard0x29dd3547790>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, i28]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #292 COMPARE_OP')
+121: i31 = getfield_gc_pure(p15, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+125: i33 = int_eq(i31, 0)
guard_false(i33, descr=<Guard0x29dd3547718>) [p0, p1, p15, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p16, p17, p18, p19, p21, p22, p23, p24, p25, p26, p27, i28]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #295 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #307 LOAD_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #310 LOAD_CONST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #313 BINARY_ADD')
+135: i35 = int_add_ovf(i31, 1)
guard_no_overflow(descr=<Guard0x29dd35476a0>) [p0, p1, p15, i35, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p16, p17, p18, p19, p21, p22, p23, p24, p25, p26, p27, i28]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #314 STORE_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #317 JUMP_FORWARD')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #351 LOAD_FAST')
+145: guard_nonnull_class(p13, ConstClass(W_IntObject), descr=<Guard0x29dd3547628>) [p0, p1, p13, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p19, p21, p22, p23, p24, p25, p26, p27, i35, i28]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #354 LOAD_CONST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #357 BINARY_ADD')
+164: i37 = getfield_gc_pure(p13, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+168: i39 = int_add_ovf(i37, 1)
guard_no_overflow(descr=<Guard0x29dd35475b0>) [p0, p1, p13, i39, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p19, p21, p22, p23, p24, p25, p26, p27, i35, i28]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #358 STORE_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #361 JUMP_ABSOLUTE')
+178: guard_not_invalidated(descr=<Guard0x29dd3547538>) [p0, p1, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p19, p21, p22, p23, p24, p25, p26, p27, i39, i35, i28]
+178: i41 = getfield_raw(2859624457920, descr=<FieldS pypysig_long_struct.c_value 0>)
+191: i43 = int_lt(i41, 0)
guard_false(i43, descr=<Guard0x29dd35474c0>) [p0, p1, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p19, p21, p22, p23, p24, p25, p26, p27, i39, i35, i28]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #274 FOR_ITER')
+201: label(p1, p0, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, i39, p14, i35, p16, p17, i28, p18, p19, p21, p22, p23, p24, p25, p26, p27, descr=TargetToken(2876835874912))
+238: guard_class(p19, 2859595984528, descr=<Guard0x29dd3547448>) [p0, p1, p19, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p21, p22, p23, p24, p25, p26, p27, i35, i28, i39]
+252: p45 = getfield_gc(p19, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+257: guard_nonnull(p45, descr=<Guard0x29dd35473d0>) [p0, p1, p19, p45, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p21, p22, p23, p24, p25, p26, p27, i35, i28, i39]
+266: i46 = getfield_gc(p19, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+271: p47 = getfield_gc(p45, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+275: guard_class(p47, 2859596180976, descr=<Guard0x29dd3547358>) [p0, p1, p19, i46, p47, p45, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p21, p22, p23, p24, p25, p26, p27, i35, i28, i39]
+289: p49 = getfield_gc(p45, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+293: i50 = getfield_gc(p49, descr=<FieldS list.length 8>)
+297: i51 = uint_ge(i46, i50)
guard_false(i51, descr=<Guard0x29dd35472e0>) [p0, p1, p19, i46, i50, p49, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p21, p22, p23, p24, p25, p26, p27, i35, i28, i39]
+306: p52 = getfield_gc(p49, descr=<FieldP list.items 16>)
+310: i53 = getarrayitem_gc(p52, i46, descr=<ArrayS 8>)
+315: i55 = int_add(i46, 1)
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #277 STORE_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #280 LOAD_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #283 POP_JUMP_IF_FALSE')
+319: setfield_gc(p19, i55, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+324: i56 = int_is_true(i53)
guard_true(i56, descr=<Guard0x29dd3547268>) [p0, p1, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p19, p21, p22, p23, p24, p25, p26, p27, i53, i35, None, i39]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #286 LOAD_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #289 LOAD_CONST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #292 COMPARE_OP')
+334: i59 = int_eq(i35, 0)
guard_false(i59, descr=<Guard0x29dd35471f0>) [p0, p1, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p19, p21, p22, p23, p24, p25, p26, p27, i53, i35, None, i39]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #295 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #307 LOAD_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #310 LOAD_CONST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #313 BINARY_ADD')
+344: i61 = int_add_ovf(i35, 1)
guard_no_overflow(descr=<Guard0x29dd3547178>) [p0, p1, i61, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p19, p21, p22, p23, p24, p25, p26, p27, i53, i35, None, i39]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #314 STORE_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #317 JUMP_FORWARD')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #351 LOAD_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #354 LOAD_CONST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #357 BINARY_ADD')
+357: i63 = int_add_ovf(i39, 1)
guard_no_overflow(descr=<Guard0x29dd3547100>) [p0, p1, i63, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p19, p21, p22, p23, p24, p25, p26, p27, i61, i53, None, None, i39]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #358 STORE_FAST')
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #361 JUMP_ABSOLUTE')
+370: guard_not_invalidated(descr=<Guard0x29dd3547088>) [p0, p1, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p19, p21, p22, p23, p24, p25, p26, p27, i63, i61, i53, None, None, None]
+370: i65 = getfield_raw(2859624457920, descr=<FieldS pypysig_long_struct.c_value 0>)
+383: i67 = int_lt(i65, 0)
guard_false(i67, descr=<Guard0x29dd3547010>) [p0, p1, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p14, p16, p17, p18, p19, p21, p22, p23, p24, p25, p26, p27, i63, i61, i53, None, None, None]
debug_merge_point(0, 0, '<code object _optimize_charset. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 207> #274 FOR_ITER')
+393: jump(p1, p0, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, i63, p14, i61, p16, p17, i53, p18, p19, p21, p22, p23, p24, p25, p26, p27, descr=TargetToken(2876835874912))
+405: --end of the loop--
[d4bd7a0493a] jit-log-opt-bridge}
[d4bd852c8ce] {jit-backend
[d4bd8952728] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd
[d4bd899e5b6] jit-backend-dump}
[d4bd899feba] {jit-backend-addr
Loop 1 (<code object _mk_bitmap, file '/usr/local/pypy/lib-python/2.7/sre_compile.py', line 258> #64 FOR_ITER) has address 0x29dd4438209 to 0x29dd443866b (bootstrap 0x29dd4438198)
[d4bd89a36c2] jit-backend-addr}
[d4bd89a4c38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4438328 +0  3F030000
[d4bd89a8146] jit-backend-dump}
[d4bd89c766a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd443833d +0  4F030000
[d4bd89cb632] jit-backend-dump}
[d4bd89cc7b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd443834b +0  66030000
[d4bd89cf62e] jit-backend-dump}
[d4bd89d04ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4438361 +0  75030000
[d4bd89d2d4c] jit-backend-dump}
[d4bd89d3bda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4438372 +0  89030000
[d4bd89d622c] jit-backend-dump}
[d4bd89d725c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd443838e +0  92030000
[d4bd89d9b86] jit-backend-dump}
[d4bd89dadfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4438398 +0  AD030000
[d4bd89dd794] jit-backend-dump}
[d4bd89de63e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44383aa +0  C0030000
[d4bd89e1648] jit-backend-dump}
[d4bd89e26b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4438432 +0  5D030000
[d4bd89e4e34] jit-backend-dump}
[d4bd89e5ccc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd443844c +0  68030000
[d4bd89e836c] jit-backend-dump}
[d4bd89e91b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd443846a +0  6F030000
[d4bd89eb7ba] jit-backend-dump}
[d4bd89ec5c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4438481 +0  7D030000
[d4bd89eeb16] jit-backend-dump}
[d4bd89f0224] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44384ec +0  5C030000
[d4bd89f27c0] jit-backend-dump}
[d4bd89f375c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4438503 +0  6A030000
[d4bd89f5e88] jit-backend-dump}
[d4bd89f6e3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4438540 +0  52030000
[d4bd89f9804] jit-backend-dump}
[d4bd89fa622] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4438569 +0  4E030000
[d4bd89fce48] jit-backend-dump}
[d4bd89fdc78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd44385d2 +0  0A030000
[d4bd8a00248] jit-backend-dump}
[d4bd8a01288] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd443863d +0  E9020000
[d4bd8a03b30] jit-backend-dump}
[d4bd8a04982] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE pypy
CODE_DUMP @29dd4438654 +0  F7020000
[d4bd8a070a6] jit-backend-dump}
[d4bd8a0933e] jit-backend}
[d4bd8a0ddf6] {jit-log-opt-loop
# Loop 1 (<code object _mk_bitmap, file '/usr/local/pypy/lib-python/2.7/sre_compile.py', line 258> #64 FOR_ITER) : loop with 105 ops
[p0, p1]
+143: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+154: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+158: i4 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+162: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+169: p6 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+173: i7 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+181: i8 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+185: p9 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+189: p11 = getarrayitem_gc(p9, 0, descr=<ArrayP 8>)
+193: p13 = getarrayitem_gc(p9, 1, descr=<ArrayP 8>)
+197: p15 = getarrayitem_gc(p9, 2, descr=<ArrayP 8>)
+201: p17 = getarrayitem_gc(p9, 3, descr=<ArrayP 8>)
+205: p19 = getarrayitem_gc(p9, 4, descr=<ArrayP 8>)
+216: p21 = getarrayitem_gc(p9, 5, descr=<ArrayP 8>)
+227: p23 = getarrayitem_gc(p9, 6, descr=<ArrayP 8>)
+238: p25 = getarrayitem_gc(p9, 7, descr=<ArrayP 8>)
+249: p27 = getarrayitem_gc(p9, 8, descr=<ArrayP 8>)
+260: p29 = getarrayitem_gc(p9, 9, descr=<ArrayP 8>)
+271: p31 = getarrayitem_gc(p9, 10, descr=<ArrayP 8>)
+282: p33 = getarrayitem_gc(p9, 11, descr=<ArrayP 8>)
+293: p35 = getarrayitem_gc(p9, 12, descr=<ArrayP 8>)
+304: p37 = getarrayitem_gc(p9, 13, descr=<ArrayP 8>)
+315: p38 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+315: label(p0, p1, p2, p3, i4, p5, p6, i7, i8, p11, p13, p15, p17, p19, p21, p23, p25, p27, p29, p31, p33, p35, p37, descr=TargetToken(2876835876584))
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #64 FOR_ITER')
+394: guard_value(i4, 8, descr=<Guard0x29dd35643e0>) [i4, p1, p0, p2, p3, p5, p6, i7, i8, p11, p13, p15, p17, p19, p21, p23, p25, p27, p29, p31, p33, p35, p37]
+404: guard_class(p25, 2859595984528, descr=<Guard0x29dd3565c40>) [p1, p0, p25, p2, p3, p5, p6, i7, p11, p13, p15, p17, p19, p21, p23, p27, p29, p31, p33, p35, p37]
+425: p41 = getfield_gc(p25, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+430: guard_nonnull(p41, descr=<Guard0x29dd3565bc8>) [p1, p0, p25, p41, p2, p3, p5, p6, i7, p11, p13, p15, p17, p19, p21, p23, p27, p29, p31, p33, p35, p37]
+439: i42 = getfield_gc(p25, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+444: p43 = getfield_gc(p41, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+448: guard_class(p43, 2859596180976, descr=<Guard0x29dd3565b50>) [p1, p0, p25, i42, p43, p41, p2, p3, p5, p6, i7, p11, p13, p15, p17, p19, p21, p23, p27, p29, p31, p33, p35, p37]
+461: p45 = getfield_gc(p41, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+465: i46 = getfield_gc(p45, descr=<FieldS list.length 8>)
+469: i47 = uint_ge(i42, i46)
guard_false(i47, descr=<Guard0x29dd3565ad8>) [p1, p0, p25, i42, i46, p45, p2, p3, p5, p6, i7, p11, p13, p15, p17, p19, p21, p23, p27, p29, p31, p33, p35, p37]
+478: p48 = getfield_gc(p45, descr=<FieldP list.items 16>)
+482: i49 = getarrayitem_gc(p48, i42, descr=<ArrayS 8>)
+487: i51 = int_add(i42, 1)
+491: setfield_gc(p25, i51, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+496: guard_value(i7, 0, descr=<Guard0x29dd3565a60>) [i7, p1, p0, p2, p3, p5, p6, p11, p13, p15, p17, p19, p21, p23, p25, p29, p31, p33, p35, p37, i49]
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #67 STORE_FAST')
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #70 LOAD_FAST')
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #73 POP_JUMP_IF_FALSE')
+506: i53 = int_is_true(i49)
guard_false(i53, descr=<Guard0x29dd35659e8>) [p1, p0, p2, p3, p5, p6, p11, p13, p15, p17, p19, p21, p25, p29, p31, p33, p35, p37, i49]
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #89 LOAD_FAST')
+516: guard_nonnull_class(p19, ConstClass(W_LongObject), descr=<Guard0x29dd3565970>) [p1, p0, p19, p2, p3, p5, p6, p11, p13, p15, p17, p21, p25, p29, p31, p33, p35, p37, i49]
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #92 LOAD_FAST')
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #95 BINARY_ADD')
+534: p55 = getfield_gc_pure(p19, descr=<FieldP pypy.objspace.std.longobject.W_LongObject.inst_num 8>)
+538: p57 = call(ConstClass(rbigint.add), p55, p55, descr=<Callr 8 rr EF=3>)
+650: guard_no_exception(descr=<Guard0x29dd35658f8>) [p1, p0, p19, p57, p2, p3, p5, p6, p11, p13, p15, p17, p21, p25, p31, p33, p35, p37, i49]
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #96 STORE_FAST')
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #99 LOAD_FAST')
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #102 LOAD_GLOBAL')
+670: guard_value(p2, ConstPtr(ptr58), descr=<Guard0x29dd3565880>) [p1, p0, p2, p3, p5, p6, p11, p13, p15, p17, p21, p25, p31, p33, p35, p37, p57, i49]
+696: p59 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+707: guard_value(p59, ConstPtr(ptr60), descr=<Guard0x29dd3565808>) [p1, p0, p59, p3, p5, p6, p11, p13, p15, p17, p21, p25, p31, p33, p35, p37, p57, i49]
+726: p61 = getfield_gc(p59, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+730: guard_value(p61, ConstPtr(ptr62), descr=<Guard0x29dd3565790>) [p1, p0, p61, p59, p3, p5, p6, p11, p13, p15, p17, p21, p25, p31, p33, p35, p37, p57, i49]
+749: guard_not_invalidated(descr=<Guard0x29dd3565718>) [p1, p0, p59, p3, p5, p6, p11, p13, p15, p17, p21, p25, p31, p33, p35, p37, p57, i49]
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #105 COMPARE_OP')
+749: i65 = call(ConstClass(rbigint.gt), p57, ConstPtr(ptr64), descr=<Calli 1 rr EF=2>)
+847: guard_false(i65, descr=<Guard0x29dd35656a0>) [p1, p0, p3, p5, p6, p11, p13, p15, p17, p21, p25, p31, p33, p35, p37, p57, i49]
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #108 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #136 JUMP_ABSOLUTE')
+856: i67 = getfield_raw(2859624457920, descr=<FieldS pypysig_long_struct.c_value 0>)
+869: i69 = int_lt(i67, 0)
guard_false(i69, descr=<Guard0x29dd3565628>) [p1, p0, p3, p5, p6, p11, p13, p15, p17, p21, p25, p31, p33, p35, p37, p57, i49]
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #64 FOR_ITER')
+879: p70 = same_as(ConstPtr(ptr62))
+879: label(p0, p1, p3, p5, p6, p11, p13, p15, p17, p57, p21, i49, p25, p31, p33, p35, p37, p45, i51, descr=TargetToken(2876835876672))
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #64 FOR_ITER')
+916: i71 = getfield_gc(p45, descr=<FieldS list.length 8>)
+927: i72 = uint_ge(i51, i71)
guard_false(i72, descr=<Guard0x29dd35655b0>) [p1, p0, p25, i51, i71, p45, p3, p5, p6, p11, p13, p15, p17, p21, p31, p33, p35, p37, p57, i49]
+940: p73 = getfield_gc(p45, descr=<FieldP list.items 16>)
+944: i74 = getarrayitem_gc(p73, i51, descr=<ArrayS 8>)
+956: i75 = int_add(i51, 1)
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #67 STORE_FAST')
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #70 LOAD_FAST')
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #73 POP_JUMP_IF_FALSE')
+960: setfield_gc(p25, i75, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+971: i76 = int_is_true(i74)
guard_false(i76, descr=<Guard0x29dd3565538>) [p1, p0, p3, p5, p6, p11, p13, p15, p17, p21, p25, p31, p33, p35, p37, i74, p57, None]
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #89 LOAD_FAST')
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #92 LOAD_FAST')
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #95 BINARY_ADD')
+981: p78 = call(ConstClass(rbigint.add), p57, p57, descr=<Callr 8 rr EF=3>)
+1066: guard_no_exception(descr=<Guard0x29dd35654c0>) [p1, p0, p78, p3, p5, p6, p11, p13, p15, p17, p21, p25, p31, p33, p35, p37, i74, p57, None]
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #96 STORE_FAST')
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #99 LOAD_FAST')
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #102 LOAD_GLOBAL')
+1086: guard_not_invalidated(descr=<Guard0x29dd3565448>) [p1, p0, p3, p5, p6, p11, p13, p15, p17, p21, p25, p31, p33, p35, p37, p78, i74, None, None]
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #105 COMPARE_OP')
+1086: i79 = call(ConstClass(rbigint.gt), p78, ConstPtr(ptr64), descr=<Calli 1 rr EF=2>)
+1184: guard_false(i79, descr=<Guard0x29dd35653d0>) [p1, p0, p3, p5, p6, p11, p13, p15, p17, p21, p25, p31, p33, p35, p37, p78, i74, None, None]
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #108 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #136 JUMP_ABSOLUTE')
+1193: i80 = getfield_raw(2859624457920, descr=<FieldS pypysig_long_struct.c_value 0>)
+1206: i81 = int_lt(i80, 0)
guard_false(i81, descr=<Guard0x29dd3565358>) [p1, p0, p3, p5, p6, p11, p13, p15, p17, p21, p25, p31, p33, p35, p37, p78, i74, None, None]
debug_merge_point(0, 0, '<code object _mk_bitmap. file '/usr/local/pypy/lib-python/2.7/sre_compile.py'. line 258> #64 FOR_ITER')
+1216: jump(p0, p1, p3, p5, p6, p11, p13, p15, p17, p78, p21, i74, p25, p31, p33, p35, p37, p45, i75, descr=TargetToken(2876835876672))
+1235: --end of the loop--
[d4bd8bed59e] jit-log-opt-loop}
[d4ec4cd27f2] {jit-backend-counts
entry 0:261
TargetToken(2876835872976):261
TargetToken(2876835873064):2362
bridge 2876878643352:10
TargetToken(2876835874912):154
entry 1:82
TargetToken(2876835876584):82
TargetToken(2876835876672):393
[d4ec4ce4d5c] jit-backend-counts}
