[19b74a641544] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb000 +0  4157415641554154415341524151415057565554535251504889E341BBD01BF30041FFD34889DF4883E4F041BB60C4D30041FFD3488D65D8415F415E415D415C5B5DC3
[19b74a65cbaa] jit-backend-dump}
[19b74a65f370] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb043 +0  4157415641554154415341524151415057565554535251504889E341BB801BF30041FFD34889DF4883E4F041BB60C4D30041FFD3488D65D8415F415E415D415C5B5DC3
[19b74a662820] jit-backend-dump}
[19b74a6679d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb086 +0  4157415641554154415341524151415057565554535251504889E34881EC80000000F20F110424F20F114C2408F20F11542410F20F115C2418F20F11642420F20F116C2428F20F11742430F20F117C2438F2440F11442440F2440F114C2448F2440F11542450F2440F115C2458F2440F11642460F2440F116C2468F2440F11742470F2440F117C247841BBD01BF30041FFD34889DF4883E4F041BB60C4D30041FFD3488D65D8415F415E415D415C5B5DC3
[19b74a66c738] jit-backend-dump}
[19b74a66e694] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb137 +0  4157415641554154415341524151415057565554535251504889E34881EC80000000F20F110424F20F114C2408F20F11542410F20F115C2418F20F11642420F20F116C2428F20F11742430F20F117C2438F2440F11442440F2440F114C2448F2440F11542450F2440F115C2458F2440F11642460F2440F116C2468F2440F11742470F2440F117C247841BB801BF30041FFD34889DF4883E4F041BB60C4D30041FFD3488D65D8415F415E415D415C5B5DC3
[19b74a672cb4] jit-backend-dump}
[19b74a678492] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb210 +0  41BBE01AF30041FFD3B803000000488D65D8415F415E415D415C5B5DC3
[19b74a67a754] jit-backend-dump}
[19b74a684618] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb22d +0  F20F11442410F20F114C2418F20F11542420F20F115C2428F20F11642430F20F116C2438F20F11742440F20F117C2448F2440F11442450F2440F114C2458F2440F11542460F2440F115C2468F2440F11642470F2440F116C2478F2440F11B42480000000F2440F11BC24880000004829C24C8955B048894D80488975904C8945A04C894DA848897D984889D741BB1096CF0041FFE3
[19b74a688746] jit-backend-dump}
[19b74a6913aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb2c2 +0  4C8B55B0488B4D80488B75904C8B45A04C8B4DA8488B7D98F20F10442410F20F104C2418F20F10542420F20F105C2428F20F10642430F20F106C2438F20F10742440F20F107C2448F2440F10442450F2440F104C2458F2440F10542460F2440F105C2468F2440F10642470F2440F106C2478F2440F10B42480000000F2440F10BC24880000004885C07409488B142530255601C349BB10B21B18F07F000041FFE3
[19b74a69574e] jit-backend-dump}
[19b74a699924] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb363 +0  57565251415041514883EC40F20F110424F20F114C2408F20F11542410F20F115C2418F20F11642420F20F116C2428F20F11742430F20F117C24384889E741BBD036A90041FFD3488B0425A046A0024885C0753CF20F107C2438F20F10742430F20F106C2428F20F10642420F20F105C2418F20F10542410F20F104C2408F20F1004244883C44041594158595A5E5FC341BB801BF30041FFD3B8030000004883C478C3
[19b74a69dc74] jit-backend-dump}
[19b74a69f5f4] {jit-backend-counts
[19b74a69fe64] jit-backend-counts}
[19b74b072b39] {jit-backend
[19b74b882b8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb
[19b74b8b3bc8] jit-backend-dump}
[19b74b8b4f7e] {jit-backend-addr
Loop 0 (<code object uninlined_call, file 'source.py', line 21> #19 FOR_ITER) has address 7ff0181bb43c to 7ff0181bb619 (bootstrap 7ff0181bb406)
[19b74b8b759a] jit-backend-addr}
[19b74b8b897a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb438 +0  30FFFFFF
[19b74b8ba696] jit-backend-dump}
[19b74b8bb872] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb4ed +0  28010000
[19b74b8bd090] jit-backend-dump}
[19b74b8bdc06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb4f9 +0  3B010000
[19b74b8bf19c] jit-backend-dump}
[19b74b8bfad8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb506 +0  4B010000
[19b74b8c102c] jit-backend-dump}
[19b74b8c196e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb51a +0  55010000
[19b74b8c2e50] jit-backend-dump}
[19b74b8c3744] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb534 +0  5B010000
[19b74b8c4da6] jit-backend-dump}
[19b74b8c57f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb53d +0  73010000
[19b74b8c6e04] jit-backend-dump}
[19b74b8c7746] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb55c +0  74010000
[19b74b8c8cfa] jit-backend-dump}
[19b74b8c9636] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb56e +0  7F010000
[19b74b8cab78] jit-backend-dump}
[19b74b8cb49c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb581 +0  87010000
[19b74b8cc97e] jit-backend-dump}
[19b74b8cd446] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb58f +0  94010000
[19b74b8ceca0] jit-backend-dump}
[19b74b8cf9a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb5a1 +0  B5010000
[19b74b8d100a] jit-backend-dump}
[19b74b8d1952] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb5cf +0  A0010000
[19b74b8d2ebe] jit-backend-dump}
[19b74b8d37f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb5f1 +0  9A010000
[19b74b8d4d18] jit-backend-dump}
[19b74b8d570e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb603 +0  BE010000
[19b74b8d6de8] jit-backend-dump}
[19b74b8d84d4] jit-backend}
[19b74b8de708] {jit-log-opt-loop
# Loop 0 (<code object uninlined_call, file 'source.py', line 21> #19 FOR_ITER) : loop with 73 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+92: i4 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+100: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+104: i6 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+111: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+115: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+119: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+123: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+127: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+131: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+135: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+139: p19 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+139: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, descr=TargetToken(140669174710784))
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+225: guard_value(i6, 3, descr=<Guard4>) [i6, p1, p0, p2, p3, i4, p5, i7, p10, p12, p14, p16, p18]
+235: guard_class(p14, 38562496, descr=<Guard5>) [p1, p0, p14, p2, p3, i4, p5, p10, p12, p16, p18]
+247: p22 = getfield_gc(p14, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+251: guard_nonnull(p22, descr=<Guard6>) [p1, p0, p14, p22, p2, p3, i4, p5, p10, p12, p16, p18]
+260: i23 = getfield_gc(p14, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+264: p24 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+268: guard_class(p24, 38745240, descr=<Guard7>) [p1, p0, p14, i23, p24, p22, p2, p3, i4, p5, p10, p12, p16, p18]
+280: p26 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+284: i27 = getfield_gc_pure(p26, descr=<FieldS tuple3.item0 8>)
+288: i28 = getfield_gc_pure(p26, descr=<FieldS tuple3.item1 16>)
+292: i29 = getfield_gc_pure(p26, descr=<FieldS tuple3.item2 24>)
+296: i31 = int_lt(i23, 0)
guard_false(i31, descr=<Guard8>) [p1, p0, p14, i23, i29, i28, i27, p2, p3, i4, p5, p10, p12, p16, p18]
+306: i32 = int_ge(i23, i29)
guard_false(i32, descr=<Guard9>) [p1, p0, p14, i23, i28, i27, p2, p3, i4, p5, p10, p12, p16, p18]
+315: i33 = int_mul(i23, i28)
+322: i34 = int_add(i27, i33)
+328: i36 = int_add(i23, 1)
+332: setfield_gc(p14, i36, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+336: guard_value(i4, 0, descr=<Guard10>) [i4, p1, p0, p2, p3, p5, p10, p12, p14, p18, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
+346: guard_nonnull_class(p10, ConstClass(W_IntObject), descr=<Guard11>) [p1, p0, p10, p2, p3, p5, p14, p18, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
+364: guard_value(p3, ConstPtr(ptr39), descr=<Guard12>) [p1, p0, p3, p2, p5, p10, p14, p18, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+383: i40 = getfield_gc_pure(p10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+387: i42 = int_add_ovf(i40, 1)
guard_no_overflow(, descr=<Guard13>) [p1, p0, p10, i42, p2, p5, p14, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+397: guard_not_invalidated(, descr=<Guard14>) [p1, p0, p2, p5, p14, i42, i34]
+397: i44 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+405: i46 = int_lt(i44, 0)
guard_false(i46, descr=<Guard15>) [p1, p0, p2, p5, p14, i42, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+415: label(p0, p1, p2, p5, i42, i34, p14, i36, i29, i28, i27, descr=TargetToken(140669174710864))
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+452: i47 = int_ge(i36, i29)
guard_false(i47, descr=<Guard16>) [p1, p0, p14, i36, i28, i27, p2, p5, i42, i34]
+461: i48 = int_mul(i36, i28)
+468: i49 = int_add(i27, i48)
+474: i50 = int_add(i36, 1)
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+478: setfield_gc(p14, i50, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+482: i51 = int_add_ovf(i42, 1)
guard_no_overflow(, descr=<Guard17>) [p1, p0, i51, p2, p5, p14, i49, i42, None]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+495: guard_not_invalidated(, descr=<Guard18>) [p1, p0, p2, p5, p14, i51, i49, None, None]
+495: i53 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+503: i54 = int_lt(i53, 0)
guard_false(i54, descr=<Guard19>) [p1, p0, p2, p5, p14, i51, i49, None, None]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+513: jump(p0, p1, p2, p5, i51, i49, p14, i50, i29, i28, i27, descr=TargetToken(140669174710864))
+531: --end of the loop--
[19b74ba0bf44] jit-log-opt-loop}
[19b74c18800e] {jit-backend
[19b74c23f902] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb7e
[19b74c252da2] jit-backend-dump}
[19b74c253a7a] {jit-backend-addr
Loop 1 (<code object bridge, file 'source.py', line 27> #15 LOAD_FAST) has address 7ff0181bb816 to 7ff0181bba30 (bootstrap 7ff0181bb7e0)
[19b74c2557c0] jit-backend-addr}
[19b74c2565b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb812 +0  20FFFFFF
[19b74c258028] jit-backend-dump}
[19b74c258d48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb8bc +0  70010000
[19b74c25a404] jit-backend-dump}
[19b74c25add0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb8ce +0  7C010000
[19b74c26f3e6] jit-backend-dump}
[19b74c270370] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb8d8 +0  8E010000
[19b74c271f06] jit-backend-dump}
[19b74c272986] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb8eb +0  96010000
[19b74c273fe2] jit-backend-dump}
[19b74c274a38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb8fc +0  9F010000
[19b74c2760e8] jit-backend-dump}
[19b74c276b26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb90f +0  A4010000
[19b74c278188] jit-backend-dump}
[19b74c278aac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb947 +0  85010000
[19b74c279fb2] jit-backend-dump}
[19b74c27a8d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb959 +0  8C010000
[19b74c27be0c] jit-backend-dump}
[19b74c27c754] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb967 +0  97010000
[19b74c27ddc8] jit-backend-dump}
[19b74c27ea70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb984 +0  AD010000
[19b74c27ffee] jit-backend-dump}
[19b74c280954] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb9af +0  9B010000
[19b74c281e78] jit-backend-dump}
[19b74c2827c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb9c2 +0  A0010000
[19b74c283c6c] jit-backend-dump}
[19b74c2845a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb9f9 +0  82010000
[19b74c285ade] jit-backend-dump}
[19b74c28658e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bba0a +0  8A010000
[19b74c287c08] jit-backend-dump}
[19b74c288754] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bba27 +0  A2010000
[19b74c289c90] jit-backend-dump}
[19b74c28aede] jit-backend}
[19b74c28e80e] {jit-log-opt-loop
# Loop 1 (<code object bridge, file 'source.py', line 27> #15 LOAD_FAST) : loop with 92 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+92: i4 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+100: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+104: i6 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+111: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+115: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+119: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+123: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+127: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+131: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+135: p17 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+135: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, descr=TargetToken(140669174715984))
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+214: guard_value(i6, 2, descr=<Guard20>) [i6, p1, p0, p2, p3, i4, p5, i7, p10, p12, p14, p16]
+224: guard_nonnull_class(p12, ConstClass(W_IntObject), descr=<Guard21>) [p1, p0, p12, p2, p3, i4, p5, p10, p14, p16]
+242: guard_value(i4, 0, descr=<Guard22>) [i4, p1, p0, p2, p3, p5, p10, p12, p16]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
+252: guard_value(p3, ConstPtr(ptr21), descr=<Guard23>) [p1, p0, p3, p2, p5, p10, p12, p16]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+271: i22 = getfield_gc_pure(p12, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+275: i24 = int_lt(i22, 10000)
guard_true(i24, descr=<Guard24>) [p1, p0, p12, p2, p5, p10]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+288: i26 = int_eq(i22, -9223372036854775808)
guard_false(i26, descr=<Guard25>) [p1, p0, p12, i22, p2, p5, p10]
+307: i28 = int_mod(i22, 2)
+334: i30 = int_rshift(i28, 63)
+341: i31 = int_and(2, i30)
+350: i32 = int_add(i28, i31)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+353: i33 = int_is_true(i32)
guard_false(i33, descr=<Guard26>) [p1, p0, p2, p5, p10, p12, i32]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
+363: guard_nonnull_class(p10, ConstClass(W_IntObject), descr=<Guard27>) [p1, p0, p10, p2, p5, p12, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+381: i36 = getfield_gc_pure(p10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+385: i38 = int_add_ovf(i36, 1)
guard_no_overflow(, descr=<Guard28>) [p1, p0, p10, i38, p2, p5, p12, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+395: i40 = int_add(i22, 1)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+406: guard_not_invalidated(, descr=<Guard29>) [p1, p0, p2, p5, i40, i38, None]
+406: i42 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+414: i44 = int_lt(i42, 0)
guard_false(i44, descr=<Guard30>) [p1, p0, p2, p5, i40, i38, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+424: label(p0, p1, p2, p5, i38, i40, descr=TargetToken(140669174716064))
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+454: i45 = int_lt(i40, 10000)
guard_true(i45, descr=<Guard31>) [p1, p0, p2, p5, i40, i38]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+467: i46 = int_eq(i40, -9223372036854775808)
guard_false(i46, descr=<Guard32>) [p1, p0, i40, p2, p5, None, i38]
+486: i47 = int_mod(i40, 2)
+513: i48 = int_rshift(i47, 63)
+520: i49 = int_and(2, i48)
+528: i50 = int_add(i47, i49)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+531: i51 = int_is_true(i50)
guard_false(i51, descr=<Guard33>) [p1, p0, p2, p5, i50, i40, i38]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+541: i52 = int_add_ovf(i38, 1)
guard_no_overflow(, descr=<Guard34>) [p1, p0, i52, p2, p5, None, i40, i38]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+558: i53 = int_add(i40, 1)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+569: guard_not_invalidated(, descr=<Guard35>) [p1, p0, p2, p5, i53, i52, None, None, None]
+569: i54 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+577: i55 = int_lt(i54, 0)
guard_false(i55, descr=<Guard36>) [p1, p0, p2, p5, i53, i52, None, None, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+587: jump(p0, p1, p2, p5, i52, i53, descr=TargetToken(140669174716064))
+592: --end of the loop--
[19b74c3260a4] jit-log-opt-loop}
[19b74c4a8048] {jit-backend
[19b74c520144] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbbf
[19b74c52d9da] jit-backend-dump}
[19b74c52f05a] {jit-backend-addr
bridge out of Guard 16 has address 7ff0181bbbf5 to 7ff0181bbdee
[19b74c5309bc] jit-backend-addr}
[19b74c53156e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbbf8 +0  A0FEFFFF
[19b74c532efa] jit-backend-dump}
[19b74c533b84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbc38 +0  B2010000
[19b74c535276] jit-backend-dump}
[19b74c535c00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbc47 +0  BC010000
[19b74c537178] jit-backend-dump}
[19b74c537aa2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbc50 +0  CC010000
[19b74c539056] jit-backend-dump}
[19b74c539f32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb5cf +0  22060000
[19b74c53b552] jit-backend-dump}
[19b74c53c4b2] jit-backend}
[19b74c53de98] {jit-log-opt-bridge
# bridge out of Guard 16 with 28 ops
[p0, p1, p2, i3, i4, i5, p6, p7, i8, i9]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #38 POP_BLOCK')
+37: p10 = getfield_gc_pure(p7, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+49: setfield_gc(p2, ConstPtr(ptr11), descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+57: guard_class(p7, 38639224, descr=<Guard37>) [p0, p1, p7, p6, p10, i9, i8]
+71: i13 = getfield_gc_pure(p7, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+76: guard_value(i13, 2, descr=<Guard38>) [p0, p1, i13, p6, p10, i9, i8]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #39 LOAD_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #42 RETURN_VALUE')
+86: guard_isnull(p10, descr=<Guard39>) [p0, p1, p10, p6, i9, i8]
+95: p15 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+106: p16 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
p18 = new_with_vtable(ConstClass(W_IntObject))
+169: setfield_gc(p1, 1, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_frame_finished_execution 149>)
setfield_gc(p1, p6, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
setfield_gc(p1, ConstPtr(ptr20), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+273: setfield_gc(p1, 0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+281: setfield_gc(p1, ConstPtr(ptr22), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+289: setfield_gc(p1, 2, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+300: setfield_gc(p1, 42, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
setarrayitem_gc(p15, 0, p18, descr=<ArrayP 8>)
p27 = new_with_vtable(ConstClass(W_IntObject))
+373: setfield_gc(p27, i9, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
setarrayitem_gc(p15, 1, p27, descr=<ArrayP 8>)
+437: setarrayitem_gc(p15, 2, ConstPtr(ptr30), descr=<ArrayP 8>)
+446: setarrayitem_gc(p15, 3, ConstPtr(ptr32), descr=<ArrayP 8>)
+455: setarrayitem_gc(p15, 4, ConstPtr(ptr32), descr=<ArrayP 8>)
+464: setfield_gc(p18, i8, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+468: finish(p18, descr=<DoneWithThisFrameDescrRef object at 0x1888920>)
+505: --end of the loop--
[19b74c584530] jit-log-opt-bridge}
[19b74cf8883a] {jit-backend
[19b74d4b2a6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbe
[19b74d4e0462] jit-backend-dump}
[19b74d4e194a] {jit-backend-addr
bridge out of Guard 33 has address 7ff0181bbe87 to 7ff0181bc2ae
[19b74d4e37e6] jit-backend-addr}
[19b74d4e49c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbe8a +0  70FEFFFF
[19b74d4e64d4] jit-backend-dump}
[19b74d4e76b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbec6 +0  E4030000
[19b74d4e8dc0] jit-backend-dump}
[19b74d4e97e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbedd +0  E6030000
[19b74d4ead88] jit-backend-dump}
[19b74d4eb946] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbef7 +0  FF030000
[19b74d4ece6a] jit-backend-dump}
[19b74d4ed7e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbf05 +0  0D040000
[19b74d4eeda2] jit-backend-dump}
[19b74d4ef864] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbf1a +0  2E040000
[19b74d4f0ec6] jit-backend-dump}
[19b74d4f18e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbf2c +0  38040000
[19b74d4f2d6e] jit-backend-dump}
[19b74d4f36aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc131 +0  4E020000
[19b74d4f4b98] jit-backend-dump}
[19b74d4f54bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc140 +0  5B020000
[19b74d4f693e] jit-backend-dump}
[19b74d4f7382] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc154 +0  63020000
[19b74d4f89c0] jit-backend-dump}
[19b74d4f9428] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc171 +0  63020000
[19b74d4fa96a] jit-backend-dump}
[19b74d4fb27c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc1af +0  41020000
[19b74d4fc75e] jit-backend-dump}
[19b74d4fd094] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc1ca +0  43020000
[19b74d4fe516] jit-backend-dump}
[19b74d4fee52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc1de +0  48020000
[19b74d500574] jit-backend-dump}
[19b74d500fca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc1ef +0  51020000
[19b74d502506] jit-backend-dump}
[19b74d5035ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc201 +0  73020000
[19b74d504a86] jit-backend-dump}
[19b74d5053d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc22c +0  62020000
[19b74d5068b0] jit-backend-dump}
[19b74d5071d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc23f +0  67020000
[19b74d508686] jit-backend-dump}
[19b74d5090b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc26d +0  52020000
[19b74d50a6b4] jit-backend-dump}
[19b74d50afd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc27a +0  5E020000
[19b74d50c490] jit-backend-dump}
[19b74d50ce1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc297 +0  76020000
[19b74d50e308] jit-backend-dump}
[19b74d50f0fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb9f9 +0  8A040000
[19b74d5105ca] jit-backend-dump}
[19b74d511830] jit-backend}
[19b74d513bdc] {jit-log-opt-bridge
# bridge out of Guard 33 with 138 ops
[p0, p1, p2, p3, i4, i5, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #37 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #40 LOAD_GLOBAL')
+37: p7 = getfield_gc(p1, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+48: guard_value(p7, ConstPtr(ptr8), descr=<Guard41>) [p0, p1, p7, p2, p3, i5, i6]
+67: p9 = getfield_gc(p7, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+71: guard_value(p9, ConstPtr(ptr10), descr=<Guard42>) [p0, p1, p9, p7, p2, p3, i5, i6]
+90: guard_not_invalidated(, descr=<Guard43>) [p0, p1, p7, p2, p3, i5, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #43 CALL_FUNCTION')
+90: p12 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+99: p13 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+103: i14 = force_token()
+103: p15 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+107: guard_isnull(p15, descr=<Guard44>) [p0, p1, p12, p15, p2, p3, p13, i14, i5, i6]
+116: i16 = getfield_gc(p12, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+120: i17 = int_is_zero(i16)
guard_true(i17, descr=<Guard45>) [p0, p1, p12, p2, p3, p13, i14, i5, i6]
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #0 LOAD_CONST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #3 STORE_FAST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #6 SETUP_LOOP')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #9 LOAD_GLOBAL')
+130: guard_not_invalidated(, descr=<Guard46>) [p0, p1, p12, p2, p3, p13, i14, i5, i6]
+130: p19 = getfield_gc(ConstPtr(ptr18), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+138: guard_value(p19, ConstPtr(ptr20), descr=<Guard47>) [p0, p1, p12, p19, p2, p3, p13, i14, i5, i6]
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #12 LOAD_CONST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #15 CALL_FUNCTION')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #18 GET_ITER')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+151: i22 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+159: i24 = int_lt(i22, 0)
guard_false(i24, descr=<Guard48>) [p0, p1, p12, p2, p3, p13, i14, i5, i6]
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+169: i25 = force_token()
p27 = new_with_vtable(38637192)
p29 = new_array(5, descr=<ArrayP 8>)
p31 = new_with_vtable(ConstClass(W_IntObject))
p33 = new_with_vtable(ConstClass(W_IntObject))
p35 = new_with_vtable(38562496)
p37 = new_with_vtable(ConstClass(W_ListObject))
p39 = new_array(0, descr=<ArrayP 8>)
p41 = new_with_vtable(38637968)
+359: setfield_gc(p41, i14, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p12, p41, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+410: setfield_gc(p1, i25, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+421: setfield_gc(p27, p13, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+425: setfield_gc(p31, 1, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+433: setarrayitem_gc(p29, 0, p31, descr=<ArrayP 8>)
+437: setarrayitem_gc(p29, 1, p33, descr=<ArrayP 8>)
+441: setfield_gc(p37, ConstPtr(ptr45), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+449: setfield_gc(p37, ConstPtr(ptr46), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+463: setfield_gc(p35, p37, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+467: setfield_gc(p35, 1, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+475: setarrayitem_gc(p29, 2, p35, descr=<ArrayP 8>)
+479: setfield_gc(p27, p29, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+483: setfield_gc(p27, 2, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_nlocals 112>)
+491: setfield_gc(p27, ConstPtr(ptr8), descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+505: setfield_gc(p27, 19, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+513: setfield_gc(p27, 3, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+524: setfield_gc(p27, 21, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_f_lineno 144>)
+534: setfield_gc(p27, ConstPtr(ptr53), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+548: setfield_gc(p27, ConstPtr(ptr54), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+562: setfield_gc(p27, p39, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+566: p55 = call_assembler(p27, p12, descr=<Loop0>)
guard_not_forced(, descr=<Guard40>) [p0, p1, p12, p27, p55, p41, p2, p3, i5, i6]
+686: keepalive(p27)
+686: guard_no_exception(, descr=<Guard49>) [p0, p1, p12, p27, p55, p41, p2, p3, i5, i6]
+701: p56 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+712: guard_isnull(p56, descr=<Guard50>) [p0, p1, p12, p55, p27, p56, p41, p2, p3, i5, i6]
+721: i57 = getfield_gc(p12, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+725: setfield_gc(p27, ConstPtr(ptr58), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+740: i59 = int_is_true(i57)
guard_false(i59, descr=<Guard51>) [p0, p1, p55, p27, p12, p41, p2, p3, i5, i6]
+750: p60 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+754: p61 = getfield_gc(p27, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+758: i62 = getfield_gc(p27, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_escaped 148>)
setfield_gc(p12, p61, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+803: guard_false(i62, descr=<Guard52>) [p0, p1, p55, p60, p27, p12, p41, p2, p3, i5, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #46 INPLACE_ADD')
+812: setfield_gc(p41, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+827: guard_class(p55, ConstClass(W_IntObject), descr=<Guard53>) [p0, p1, p55, p2, p3, i5, i6]
+839: i65 = getfield_gc_pure(p55, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+843: i66 = int_add_ovf(i6, i65)
guard_no_overflow(, descr=<Guard54>) [p0, p1, p55, i66, p2, p3, i5, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #47 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #50 JUMP_FORWARD')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+859: i68 = int_add_ovf(i5, 1)
guard_no_overflow(, descr=<Guard55>) [p0, p1, i68, p2, p3, i66, i5, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+876: guard_not_invalidated(, descr=<Guard56>) [p0, p1, p2, p3, i68, i66, None, None]
+876: i71 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+884: i73 = int_lt(i71, 0)
guard_false(i73, descr=<Guard57>) [p0, p1, p2, p3, i68, i66, None, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+894: label(p1, p0, p2, p3, i66, i68, descr=TargetToken(140669174718064))
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+924: i75 = int_lt(i68, 10000)
guard_true(i75, descr=<Guard58>) [p0, p1, p2, p3, i66, i68]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+937: i77 = int_eq(i68, -9223372036854775808)
guard_false(i77, descr=<Guard59>) [p0, p1, i68, p2, p3, i66, None]
+956: i79 = int_mod(i68, 2)
+973: i81 = int_rshift(i79, 63)
+980: i82 = int_and(2, i81)
+989: i83 = int_add(i79, i82)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+992: i84 = int_is_true(i83)
guard_false(i84, descr=<Guard60>) [p0, p1, p2, p3, i83, i66, i68]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+1002: i86 = int_add_ovf(i66, 1)
guard_no_overflow(, descr=<Guard61>) [p0, p1, i86, p2, p3, None, i66, i68]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+1015: i88 = int_add(i68, 1)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+1026: guard_not_invalidated(, descr=<Guard62>) [p0, p1, p2, p3, i86, i88, None, None, None]
+1026: i90 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+1034: i92 = int_lt(i90, 0)
guard_false(i92, descr=<Guard63>) [p0, p1, p2, p3, i86, i88, None, None, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+1044: jump(p1, p0, p2, p3, i86, i88, descr=TargetToken(140669174716064))
+1063: --end of the loop--
[19b74d610f80] jit-log-opt-bridge}
[19b74d82de0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bb976 +0  E9A1010000
[19b74d83255a] jit-backend-dump}
[19b74d8331c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bba19 +0  E994010000
[19b74d834be2] jit-backend-dump}
[19b74d83567a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbee1 +0  E9FB030000
[19b74d836ff4] jit-backend-dump}
[19b74d837a3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bbf09 +0  E923040000
[19b74d83903a] jit-backend-dump}
[19b74d839994] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc1f3 +0  E966020000
[19b74d83b03e] jit-backend-dump}
[19b74d83b9b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc289 +0  E968020000
[19b74d83d02a] jit-backend-dump}
[19b74df097c2] {jit-backend
[19b74e070346] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc5a
[19b74e09e4ec] jit-backend-dump}
[19b74e09f902] {jit-backend-addr
Loop 2 (<code object inlined_str_stuff, file 'source.py', line 40> #13 FOR_ITER) has address 7ff0181bc5d6 to 7ff0181bc9ad (bootstrap 7ff0181bc5a0)
[19b74e0a1c66] jit-backend-addr}
[19b74e0a2caa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc5d2 +0  C0FEFFFF
[19b74e0a48d0] jit-backend-dump}
[19b74e0a5a8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc6af +0  FA020000
[19b74e0a72ee] jit-backend-dump}
[19b74e0a7d80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc6bb +0  10030000
[19b74e0a93b8] jit-backend-dump}
[19b74e0a9d0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc6c8 +0  23030000
[19b74e0ab278] jit-backend-dump}
[19b74e0abbfc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc6dc +0  30030000
[19b74e0ad36c] jit-backend-dump}
[19b74e0addda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc6f6 +0  39030000
[19b74e0af3e8] jit-backend-dump}
[19b74e0afd36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc6ff +0  54030000
[19b74e0b5e1a] jit-backend-dump}
[19b74e0b6972] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc71e +0  58030000
[19b74e0b8070] jit-backend-dump}
[19b74e0b8a9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc731 +0  65030000
[19b74e0ba1ca] jit-backend-dump}
[19b74e0babf0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc74f +0  65030000
[19b74e0bc360] jit-backend-dump}
[19b74e0bcd8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc766 +0  6C030000
[19b74e0be2da] jit-backend-dump}
[19b74e0bee14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc77b +0  94030000
[19b74e0c03c2] jit-backend-dump}
[19b74e0c0d10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc7b9 +0  74030000
[19b74e0c2240] jit-backend-dump}
[19b74e0c2cc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc7d0 +0  7A030000
[19b74e0c4370] jit-backend-dump}
[19b74e0c4d84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc80f +0  59030000
[19b74e0c63e6] jit-backend-dump}
[19b74e0c6de8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc876 +0  15030000
[19b74e0c8348] jit-backend-dump}
[19b74e0c8c78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc8a8 +0  00030000
[19b74e0ca19c] jit-backend-dump}
[19b74e0cab8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc8f5 +0  EF020000
[19b74e0cc0f2] jit-backend-dump}
[19b74e0ccb42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc933 +0  CF020000
[19b74e0ce22e] jit-backend-dump}
[19b74e0cec4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc99d +0  88020000
[19b74e0d02a4] jit-backend-dump}
[19b74e0d16ae] jit-backend}
[19b74e0d53ec] {jit-log-opt-loop
# Loop 2 (<code object inlined_str_stuff, file 'source.py', line 40> #13 FOR_ITER) : loop with 100 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+92: i4 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+100: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+104: i6 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+111: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+115: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+119: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+123: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+127: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+131: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+135: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+146: p20 = getarrayitem_gc(p8, 5, descr=<ArrayP 8>)
+157: p22 = getarrayitem_gc(p8, 6, descr=<ArrayP 8>)
+168: p24 = getarrayitem_gc(p8, 7, descr=<ArrayP 8>)
+172: p25 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+172: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, p20, p22, p24, descr=TargetToken(140669221669808))
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+265: guard_value(i6, 5, descr=<Guard64>) [i6, p1, p0, p2, p3, i4, p5, i7, p10, p12, p14, p16, p18, p20, p22, p24]
+275: guard_class(p18, 38562496, descr=<Guard65>) [p1, p0, p18, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+287: p28 = getfield_gc(p18, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+291: guard_nonnull(p28, descr=<Guard66>) [p1, p0, p18, p28, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+300: i29 = getfield_gc(p18, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+304: p30 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+308: guard_class(p30, 38745240, descr=<Guard67>) [p1, p0, p18, i29, p30, p28, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+320: p32 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+324: i33 = getfield_gc_pure(p32, descr=<FieldS tuple3.item0 8>)
+328: i34 = getfield_gc_pure(p32, descr=<FieldS tuple3.item1 16>)
+332: i35 = getfield_gc_pure(p32, descr=<FieldS tuple3.item2 24>)
+336: i37 = int_lt(i29, 0)
guard_false(i37, descr=<Guard68>) [p1, p0, p18, i29, i35, i34, i33, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+346: i38 = int_ge(i29, i35)
guard_false(i38, descr=<Guard69>) [p1, p0, p18, i29, i34, i33, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+355: i39 = int_mul(i29, i34)
+362: i40 = int_add(i33, i39)
+368: i42 = int_add(i29, 1)
+372: setfield_gc(p18, i42, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+376: guard_value(i4, 0, descr=<Guard70>) [i4, p1, p0, p2, p3, p5, p10, p12, p14, p16, p18, p22, p24, i40]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+386: guard_value(p3, ConstPtr(ptr44), descr=<Guard71>) [p1, p0, p3, p2, p5, p12, p14, p16, p18, p22, p24, i40]
+405: p45 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+416: guard_value(p45, ConstPtr(ptr46), descr=<Guard72>) [p1, p0, p45, p2, p5, p12, p14, p16, p18, p22, p24, i40]
+435: p47 = getfield_gc(p45, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+439: guard_value(p47, ConstPtr(ptr48), descr=<Guard73>) [p1, p0, p47, p45, p2, p5, p12, p14, p16, p18, p22, p24, i40]
+458: guard_not_invalidated(, descr=<Guard74>) [p1, p0, p45, p2, p5, p12, p14, p16, p18, p22, p24, i40]
+458: p50 = getfield_gc(ConstPtr(ptr49), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+466: guard_value(p50, ConstPtr(ptr51), descr=<Guard75>) [p1, p0, p50, p2, p5, p12, p14, p16, p18, p22, p24, i40]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+479: p53 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i40, descr=<Callr 8 i EF=3>)
+526: guard_no_exception(, descr=<Guard76>) [p1, p0, p53, p2, p5, p12, p14, p16, p18, p24, i40]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+541: p54 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+552: guard_class(p54, 38655536, descr=<Guard77>) [p1, p0, p54, p16, p2, p5, p12, p14, p18, p24, p53, i40]
+564: p56 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+568: i57 = getfield_gc(p56, descr=<FieldS list.length 8>)
+572: i59 = int_add(i57, 1)
+579: p60 = getfield_gc(p56, descr=<FieldP list.items 16>)
+579: i61 = arraylen_gc(p60, descr=<ArrayP 8>)
+579: call(ConstClass(_ll_list_resize_ge_trampoline__v575___simple_call__function__), p56, i59, descr=<Callv 0 ri EF=4>)
+612: guard_no_exception(, descr=<Guard78>) [p1, p0, i57, p53, p56, p2, p5, p12, p14, p16, p18, p24, None, i40]
+627: p64 = getfield_gc(p56, descr=<FieldP list.items 16>)
setarrayitem_gc(p64, i57, p53, descr=<ArrayP 8>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+712: i66 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+720: i68 = int_lt(i66, 0)
guard_false(i68, descr=<Guard79>) [p1, p0, p2, p5, p12, p14, p16, p18, p24, None, i40]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+730: p69 = same_as(ConstPtr(ptr48))
+730: label(p0, p1, p2, p5, i40, p12, p14, p16, p18, p24, i42, i35, i34, i33, p56, descr=TargetToken(140669221669888))
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+760: i70 = int_ge(i42, i35)
guard_false(i70, descr=<Guard80>) [p1, p0, p18, i42, i34, i33, p2, p5, p12, p14, p16, p24, i40]
+780: i71 = int_mul(i42, i34)
+784: i72 = int_add(i33, i71)
+794: i73 = int_add(i42, 1)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+805: setfield_gc(p18, i73, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+816: guard_not_invalidated(, descr=<Guard81>) [p1, p0, p2, p5, p12, p14, p16, p18, p24, i72, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+816: p74 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i72, descr=<Callr 8 i EF=3>)
+842: guard_no_exception(, descr=<Guard82>) [p1, p0, p74, p2, p5, p12, p14, p16, p18, p24, i72, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+857: i75 = getfield_gc(p56, descr=<FieldS list.length 8>)
+868: i76 = int_add(i75, 1)
+875: p77 = getfield_gc(p56, descr=<FieldP list.items 16>)
+875: i78 = arraylen_gc(p77, descr=<ArrayP 8>)
+875: call(ConstClass(_ll_list_resize_ge_trampoline__v575___simple_call__function__), p56, i76, descr=<Callv 0 ri EF=4>)
+904: guard_no_exception(, descr=<Guard83>) [p1, p0, i75, p74, p56, p2, p5, p12, p14, p16, p18, p24, i72, None]
+919: p79 = getfield_gc(p56, descr=<FieldP list.items 16>)
setarrayitem_gc(p79, i75, p74, descr=<ArrayP 8>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+1007: i80 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+1015: i81 = int_lt(i80, 0)
guard_false(i81, descr=<Guard84>) [p1, p0, p2, p5, p12, p14, p16, p18, p24, i72, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+1025: jump(p0, p1, p2, p5, i72, p12, p14, p16, p18, p24, i73, i35, i34, i33, p56, descr=TargetToken(140669221669888))
+1037: --end of the loop--
[19b74e1b18e0] jit-log-opt-loop}
[19b74eab5a20] {jit-backend
[19b74eae2108] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcc46 +0  488B04254045A0024829E0483B0425E03C5101760D49BB63B31B18F07F000041FFD3554889E5534154415541564157488DA50000000049BBF821011BF07F00004D8B3B4983C70149BBF821011BF07F00004D893B4C8B7E404D0FB67C3F184983FF330F85000000004989FF4883C70148897E1848C74620000000004C897E28B80100000048890425D0D1550141BBD01BF30041FFD3B802000000488D65D8415F415E415D415C5B5DC349BB00B01B18F07F000041FFD31D180355000000
[19b74eae9cb0] jit-backend-dump}
[19b74eaea97c] {jit-backend-addr
Loop 3 (re StrLiteralSearch at 11/51 [17, 8, 3, 1, 1, 1, 1, 51, 0, 19, 51, 1]) has address 7ff0181bcc7c to 7ff0181bccef (bootstrap 7ff0181bcc46)
[19b74eaec6b0] jit-backend-addr}
[19b74eaed3f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcc78 +0  70FFFFFF
[19b74eaeec1e] jit-backend-dump}
[19b74eaef7dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bccaa +0  41000000
[19b74eaf0e74] jit-backend-dump}
[19b74eaf1d38] jit-backend}
[19b74eaf5b18] {jit-log-opt-loop
# Loop 3 (re StrLiteralSearch at 11/51 [17, 8, 3, 1, 1, 1, 1, 51, 0, 19, 51, 1]) : entry bridge with 10 ops
[i0, p1]
debug_merge_point(0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+84: p2 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+88: i3 = strgetitem(p2, i0)
+94: i5 = int_eq(i3, 51)
guard_true(i5, descr=<Guard85>) [i0, p1]
+104: i7 = int_add(i0, 1)
+111: setfield_gc(p1, i7, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+115: setfield_gc(p1, ConstPtr(ptr8), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+123: setfield_gc(p1, i0, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+127: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1888940>)
+169: --end of the loop--
[19b74eb165f0] jit-log-opt-loop}
[19b74f266f5c] {jit-backend
[19b74f2961fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcd03 +0  488DA50000000049BB1022011BF07F00004D8B3B4983C70149BB1022011BF07F00004D893B4883C7014C8B7E084C39FF0F8D000000004C8B76404D0FB6743E184983FE330F84000000004883C7014C39FF0F8C00000000B80000000048890425D0D1550141BBD01BF30041FFD3B802000000488D65D8415F415E415D415C5B5DC349BB00B01B18F07F000041FFD31D18035600000049BB00B01B18F07F000041FFD31D18035700000049BB00B01B18F07F000041FFD31D180358000000
[19b74f29dd12] jit-backend-dump}
[19b74f29e99c] {jit-backend-addr
bridge out of Guard 85 has address 7ff0181bcd03 to 7ff0181bcd84
[19b74f2a03dc] jit-backend-addr}
[19b74f2a114a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcd06 +0  70FFFFFF
[19b74f2a2c20] jit-backend-dump}
[19b74f2a388c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcd35 +0  4B000000
[19b74f2a4ed6] jit-backend-dump}
[19b74f2a5878] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcd49 +0  4B000000
[19b74f2a6d54] jit-backend-dump}
[19b74f2a7798] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcd56 +0  52000000
[19b74f2a8de8] jit-backend-dump}
[19b74f2a9a3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bccaa +0  55000000
[19b74f2aafe4] jit-backend-dump}
[19b74f2abf92] jit-backend}
[19b74f2ad546] {jit-log-opt-bridge
# bridge out of Guard 85 with 13 ops
[i0, p1]
+37: i3 = int_add(i0, 1)
+41: i4 = getfield_gc_pure(p1, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+45: i5 = int_lt(i3, i4)
guard_true(i5, descr=<Guard86>) [i3, p1]
debug_merge_point(0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+54: p6 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+58: i7 = strgetitem(p6, i3)
+64: i9 = int_eq(i7, 51)
guard_false(i9, descr=<Guard87>) [i3, p1]
+74: i11 = int_add(i3, 1)
+78: i12 = int_lt(i11, i4)
guard_false(i12, descr=<Guard88>) [i11, p1]
+87: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1888940>)
+129: --end of the loop--
[19b74f2c70b8] jit-log-opt-bridge}
[19b74f9ae658] {jit-backend
[19b74f9d0d20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcdc0 +0  488DA50000000049BB2822011BF07F00004D8B3B4983C70149BB2822011BF07F00004D893B4C8B7E404D0FB67C3F184983FF330F84000000004883C7014C8B7E084C39FF0F8C00000000B80000000048890425D0D1550141BBD01BF30041FFD3B802000000488D65D8415F415E415D415C5B5DC349BB00B01B18F07F000041FFD31D18035900000049BB00B01B18F07F000041FFD31D18035A000000
[19b74f9d77d6] jit-backend-dump}
[19b74f9d8352] {jit-backend-addr
bridge out of Guard 88 has address 7ff0181bcdc0 to 7ff0181bce34
[19b74f9d9924] jit-backend-addr}
[19b74f9da500] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcdc3 +0  70FFFFFF
[19b74f9dbdfc] jit-backend-dump}
[19b74f9dca92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcdf5 +0  3B000000
[19b74f9de1f0] jit-backend-dump}
[19b74f9dec04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bce06 +0  3E000000
[19b74f9e027e] jit-backend-dump}
[19b74f9e0e18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcd56 +0  66000000
[19b74f9e2324] jit-backend-dump}
[19b74f9e308c] jit-backend}
[19b74f9e42e6] {jit-log-opt-bridge
# bridge out of Guard 88 with 10 ops
[i0, p1]
debug_merge_point(0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+37: p2 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+41: i3 = strgetitem(p2, i0)
+47: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard89>) [i0, p1]
+57: i7 = int_add(i0, 1)
+61: i8 = getfield_gc_pure(p1, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+65: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard90>) [i7, p1]
+74: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1888940>)
+116: --end of the loop--
[19b74fa083e8] jit-log-opt-bridge}
[19b75013d436] {jit-backend
[19b75015049e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bce5c +0  488DA50000000049BB4022011BF07F0000498B334883C60149BB4022011BF07F0000498933B80000000048890425D0D1550141BBD01BF30041FFD3B802000000488D65D8415F415E415D415C5B5DC3
[19b75015543c] jit-backend-dump}
[19b750155e80] {jit-backend-addr
bridge out of Guard 86 has address 7ff0181bce5c to 7ff0181bceab
[19b750157272] jit-backend-addr}
[19b750157db8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bce5f +0  70FFFFFF
[19b75015985e] jit-backend-dump}
[19b75015a566] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcd35 +0  23010000
[19b75015bc76] jit-backend-dump}
[19b75015c996] jit-backend}
[19b75015db8a] {jit-log-opt-bridge
# bridge out of Guard 86 with 1 ops
[i0, p1]
+37: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1888940>)
+79: --end of the loop--
[19b750163242] jit-log-opt-bridge}
[19b751eb804a] {jit-backend
[19b7521ede4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd093 +0  
[19b752258484] jit-backend-dump}
[19b752259e10] {jit-backend-addr
Loop 4 (<code object inlined_str_stuff, file 'source.py', line 40> #44 FOR_ITER) has address 7ff0181bd0c9 to 7ff0181bdce5 (bootstrap 7ff0181bd093)
[19b75225c912] jit-backend-addr}
[19b75225db5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd0c5 +0  E0FDFFFF
[19b75225f936] jit-backend-dump}
[19b752260bcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd1a2 +0  3F0B0000
[19b75226231e] jit-backend-dump}
[19b752262de0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd1ae +0  550B0000
[19b752264478] jit-backend-dump}
[19b752264f58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd1bb +0  680B0000
[19b7522665c0] jit-backend-dump}
[19b752266fec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd1cf +0  750B0000
[19b7522685f4] jit-backend-dump}
[19b752268f30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd1e0 +0  870B0000
[19b75226a424] jit-backend-dump}
[19b75226ad3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd1f2 +0  980B0000
[19b75226c272] jit-backend-dump}
[19b75226cbf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd204 +0  A80B0000
[19b75226e1d4] jit-backend-dump}
[19b75226ebee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd217 +0  B50B0000
[19b7522701f0] jit-backend-dump}
[19b752270b62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd235 +0  B50B0000
[19b752272032] jit-backend-dump}
[19b75227297a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd24c +0  BC0B0000
[19b752273ebc] jit-backend-dump}
[19b752274b88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd26c +0  D90B0000
[19b752276100] jit-backend-dump}
[19b752276b56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd294 +0  CF0B0000
[19b75227824e] jit-backend-dump}
[19b752278c56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd2a2 +0  DF0B0000
[19b75227a15c] jit-backend-dump}
[19b75227ab88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd2b9 +0  020C0000
[19b75227c09a] jit-backend-dump}
[19b75227c9c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd2ce +0  0B0C0000
[19b75227dedc] jit-backend-dump}
[19b75227e7dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd2e7 +0  110C0000
[19b75227fef2] jit-backend-dump}
[19b7522808ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd3e8 +0  2F0B0000
[19b752281e6c] jit-backend-dump}
[19b75228285c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd3f7 +0  440B0000
[19b752283d74] jit-backend-dump}
[19b752284692] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd48d +0  D20A0000
[19b752285b8c] jit-backend-dump}
[19b7522864bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd49c +0  E70A0000
[19b7522879fe] jit-backend-dump}
[19b7522884e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd4b6 +0  F10A0000
[19b75228dac4] jit-backend-dump}
[19b75228e700] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd4dc +0  EF0A0000
[19b75228fee2] jit-backend-dump}
[19b7522908f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd4e9 +0  050B0000
[19b752291ee0] jit-backend-dump}
[19b7522928f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd4fd +0  140B0000
[19b752293ede] jit-backend-dump}
[19b7522948e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd50b +0  2B0B0000
[19b752295ee2] jit-backend-dump}
[19b7522969b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd538 +0  420B0000
[19b752297fdc] jit-backend-dump}
[19b7522988f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd54e +0  4E0B0000
[19b752299e0c] jit-backend-dump}
[19b75229a75a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd563 +0  5D0B0000
[19b75229bc9c] jit-backend-dump}
[19b75229c5de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd571 +0  740B0000
[19b75229daea] jit-backend-dump}
[19b75229e5b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd588 +0  810B0000
[19b75229fc14] jit-backend-dump}
[19b7522a0628] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd5a2 +0  8C0B0000
[19b7522a1be8] jit-backend-dump}
[19b7522a250c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd5ac +0  A80B0000
[19b7522a3a54] jit-backend-dump}
[19b7522a43a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd5b6 +0  C50B0000
[19b7522a58a2] jit-backend-dump}
[19b7522a61e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd5c9 +0  D80B0000
[19b7522a7900] jit-backend-dump}
[19b7522a830e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd6ce +0  F80A0000
[19b7522a98d4] jit-backend-dump}
[19b7522aa26a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd6dd +0  0D0B0000
[19b7522ab866] jit-backend-dump}
[19b7522ac1f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd6e6 +0  280B0000
[19b7522ad6f0] jit-backend-dump}
[19b7522adfe4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd6fa +0  370B0000
[19b7522af520] jit-backend-dump}
[19b7522affd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd708 +0  490B0000
[19b7522b163e] jit-backend-dump}
[19b7522b20b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd74f +0  3C0B0000
[19b7522b36b4] jit-backend-dump}
[19b7522b3ff0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd781 +0  250B0000
[19b7522b550e] jit-backend-dump}
[19b7522b5e26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd795 +0  2C0B0000
[19b7522b737a] jit-backend-dump}
[19b7522b7c98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd7a6 +0  380B0000
[19b7522b91aa] jit-backend-dump}
[19b7522b9c0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd7b8 +0  430B0000
[19b7522bb32e] jit-backend-dump}
[19b7522bbca6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd7de +0  390B0000
[19b7522bd1c4] jit-backend-dump}
[19b7522bdaf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd7f5 +0  3E0B0000
[19b7522bf04e] jit-backend-dump}
[19b7522bfd1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd815 +0  570B0000
[19b7522c125c] jit-backend-dump}
[19b7522c1cee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd81f +0  690B0000
[19b7522c3248] jit-backend-dump}
[19b7522c3b8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd836 +0  700B0000
[19b7522c50ae] jit-backend-dump}
[19b7522c59d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd84b +0  7A0B0000
[19b7522c6f26] jit-backend-dump}
[19b7522cbb4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd864 +0  810B0000
[19b7522cd4fc] jit-backend-dump}
[19b7522ce03c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd972 +0  930A0000
[19b7522cf632] jit-backend-dump}
[19b7522d006a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd981 +0  AA0A0000
[19b7522d168a] jit-backend-dump}
[19b7522d20a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bda17 +0  3A0A0000
[19b7522d364c] jit-backend-dump}
[19b7522d3fa0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bda26 +0  510A0000
[19b7522d5488] jit-backend-dump}
[19b7522d5de8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bda40 +0  5D0A0000
[19b7522d7300] jit-backend-dump}
[19b7522d7c84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bda66 +0  5D0A0000
[19b7522d92b6] jit-backend-dump}
[19b7522d9d12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bda73 +0  740A0000
[19b7522db2ea] jit-backend-dump}
[19b7522dbc38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bda87 +0  840A0000
[19b7522dd1a4] jit-backend-dump}
[19b7522ddb04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bda95 +0  9B0A0000
[19b7522df01c] jit-backend-dump}
[19b7522dfa66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdac2 +0  B20A0000
[19b7522e10a4] jit-backend-dump}
[19b7522e1b0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdad8 +0  BE0A0000
[19b7522e318c] jit-backend-dump}
[19b7522e3bee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdaed +0  CD0A0000
[19b7522e50d0] jit-backend-dump}
[19b7522e5a0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdafb +0  E40A0000
[19b7522e6f36] jit-backend-dump}
[19b7522e78ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdb12 +0  F10A0000
[19b7522e8d8a] jit-backend-dump}
[19b7522e96d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdb2c +0  FC0A0000
[19b7522eada0] jit-backend-dump}
[19b7522eb7d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdb36 +0  180B0000
[19b7522ecd6e] jit-backend-dump}
[19b7522ed722] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdb40 +0  350B0000
[19b7522eec40] jit-backend-dump}
[19b7522ef594] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdb53 +0  480B0000
[19b7522f0a70] jit-backend-dump}
[19b7522f13c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdc59 +0  670A0000
[19b7522f28e8] jit-backend-dump}
[19b7522f33aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdc68 +0  7D0A0000
[19b7522f49e8] jit-backend-dump}
[19b7522f5420] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdc71 +0  990A0000
[19b7522f69f8] jit-backend-dump}
[19b7522f73a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdc85 +0  A90A0000
[19b7522f8882] jit-backend-dump}
[19b7522f91d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdc93 +0  BB0A0000
[19b7522fa6e8] jit-backend-dump}
[19b7522fb0de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdcd6 +0  B20A0000
[19b7522fc7e2] jit-backend-dump}
[19b7522fdece] jit-backend}
[19b75230206e] {jit-log-opt-loop
# Loop 4 (<code object inlined_str_stuff, file 'source.py', line 40> #44 FOR_ITER) : loop with 351 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+92: i4 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+100: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+104: i6 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+111: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+115: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+119: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+123: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+127: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+131: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+135: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+146: p20 = getarrayitem_gc(p8, 5, descr=<ArrayP 8>)
+157: p22 = getarrayitem_gc(p8, 6, descr=<ArrayP 8>)
+168: p24 = getarrayitem_gc(p8, 7, descr=<ArrayP 8>)
+172: p25 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+172: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, p20, p22, p24, descr=TargetToken(140669221670848))
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+265: guard_value(i6, 4, descr=<Guard97>) [i6, p1, p0, p2, p3, i4, p5, i7, p10, p12, p14, p16, p18, p20, p22, p24]
+275: guard_class(p16, 38562496, descr=<Guard98>) [p1, p0, p16, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+287: p28 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+291: guard_nonnull(p28, descr=<Guard99>) [p1, p0, p16, p28, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+300: i29 = getfield_gc(p16, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+304: p30 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+308: guard_class(p30, 38655536, descr=<Guard100>) [p1, p0, p16, i29, p30, p28, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+320: p32 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+324: i33 = getfield_gc(p32, descr=<FieldS list.length 8>)
+328: i34 = uint_ge(i29, i33)
guard_false(i34, descr=<Guard101>) [p1, p0, p16, i29, i33, p32, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+337: p35 = getfield_gc(p32, descr=<FieldP list.items 16>)
+341: p36 = getarrayitem_gc(p35, i29, descr=<ArrayP 8>)
+346: guard_nonnull(p36, descr=<Guard102>) [p1, p0, p16, i29, p36, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+355: i38 = int_add(i29, 1)
+359: setfield_gc(p16, i38, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+363: guard_value(i4, 0, descr=<Guard103>) [i4, p1, p0, p2, p3, p5, p10, p12, p14, p16, p20, p22, p24, p36]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+373: guard_value(p3, ConstPtr(ptr40), descr=<Guard104>) [p1, p0, p3, p2, p5, p10, p12, p16, p20, p22, p24, p36]
+392: p41 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+403: guard_value(p41, ConstPtr(ptr42), descr=<Guard105>) [p1, p0, p41, p2, p5, p10, p12, p16, p20, p22, p24, p36]
+422: p43 = getfield_gc(p41, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+426: guard_value(p43, ConstPtr(ptr44), descr=<Guard106>) [p1, p0, p43, p41, p2, p5, p10, p12, p16, p20, p22, p24, p36]
+445: guard_not_invalidated(, descr=<Guard107>) [p1, p0, p41, p2, p5, p10, p12, p16, p20, p22, p24, p36]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+445: p46 = getfield_gc(ConstPtr(ptr45), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+458: guard_value(p46, ConstPtr(ptr47), descr=<Guard108>) [p1, p0, p46, p2, p5, p10, p12, p16, p20, p22, p24, p36]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+477: p49 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+500: p50 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+504: i51 = force_token()
+504: p52 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+508: guard_isnull(p52, descr=<Guard109>) [p1, p0, p49, p52, p2, p5, p10, p12, p16, i51, p50, p36]
+517: i53 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+521: i54 = int_is_zero(i53)
guard_true(i54, descr=<Guard110>) [p1, p0, p49, p2, p5, p10, p12, p16, i51, p50, p36]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #0 LOAD_GLOBAL')
+531: guard_not_invalidated(, descr=<Guard111>) [p1, p0, p49, p2, p5, p10, p12, p16, i51, p50, p36]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #9 CALL_FUNCTION')
+531: i56 = getfield_gc(ConstPtr(ptr55), descr=<FieldS list.length 8>)
+544: i58 = int_ge(0, i56)
guard_true(i58, descr=<Guard112>) [p1, p0, p49, i56, p2, p5, p10, p12, p16, i51, p50, p36]
+554: i59 = force_token()
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #0 LOAD_GLOBAL')
+554: p61 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+562: guard_value(p61, ConstPtr(ptr62), descr=<Guard113>) [p1, p0, p49, p61, p2, p5, p10, p12, p16, i59, i51, p50, p36]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #3 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #6 LOAD_CONST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #9 BINARY_SUBSCR')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #10 CALL_FUNCTION')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #13 BUILD_TUPLE')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #16 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #19 BINARY_ADD')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #20 STORE_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #23 LOAD_GLOBAL')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #26 LOOKUP_METHOD')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #29 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #32 CALL_METHOD')
+575: p64 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+588: guard_class(p64, ConstClass(ObjectDictStrategy), descr=<Guard114>) [p1, p0, p49, p64, p2, p5, p10, p12, p16, i59, i51, p50, p36]
+600: p66 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+613: i67 = force_token()
p69 = new_array(3, descr=<ArrayP 8>)
p71 = new_with_vtable(38637968)
+705: setfield_gc(p71, i59, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p71, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+752: setfield_gc(p0, i67, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+756: setarrayitem_gc(p69, 0, ConstPtr(ptr73), descr=<ArrayP 8>)
+764: setarrayitem_gc(p69, 1, ConstPtr(ptr75), descr=<ArrayP 8>)
+778: setarrayitem_gc(p69, 2, ConstPtr(ptr77), descr=<ArrayP 8>)
+792: i79 = call_may_force(ConstClass(hash_tuple), p69, descr=<Calli 8 r EF=6>)
guard_not_forced(, descr=<Guard91>) [p1, p0, p49, p66, i79, p71, p2, p5, p10, p12, p16, i51, p36, p69, p50]
+857: guard_no_exception(, descr=<Guard115>) [p1, p0, p49, p66, i79, p71, p2, p5, p10, p12, p16, i51, p36, p69, p50]
+872: i80 = force_token()
p82 = new_with_vtable(38549536)
+942: setfield_gc(p0, i80, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+953: setfield_gc(p82, p69, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+964: i84 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v693___simple_call__function_l), p66, p82, i79, descr=<Calli 8 rri EF=6>)
guard_not_forced(, descr=<Guard92>) [p1, p0, p49, p82, i84, p66, p71, p2, p5, p10, p12, p16, i51, p36, p50]
+1022: guard_no_exception(, descr=<Guard116>) [p1, p0, p49, p82, i84, p66, p71, p2, p5, p10, p12, p16, i51, p36, p50]
+1037: i86 = int_and(i84, -9223372036854775808)
+1053: i87 = int_is_true(i86)
guard_false(i87, descr=<Guard117>) [p1, p0, p49, p82, i84, p66, p71, p2, p5, p10, p12, p16, i51, p36, p50]
+1063: p88 = getfield_gc(p66, descr=<FieldP dicttable.entries 24>)
+1074: p89 = getinteriorfield_gc(p88, i84, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+1083: guard_nonnull_class(p89, 38793968, descr=<Guard118>) [p1, p0, p49, p82, p89, p71, p2, p5, p10, p12, p16, i51, p36, p50]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #35 STORE_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #38 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #41 LOAD_CONST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #44 COMPARE_OP')
+1101: i92 = instance_ptr_eq(ConstPtr(ptr91), p89)
guard_false(i92, descr=<Guard119>) [p1, p0, p49, p71, p2, p5, p10, p12, p16, p89, p82, i51, p36, p50]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #50 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #53 RETURN_VALUE')
+1114: p93 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+1125: guard_isnull(p93, descr=<Guard120>) [p1, p0, p49, p89, p93, p71, p2, p5, p10, p12, p16, None, p82, i51, p36, p50]
+1134: i95 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+1138: i96 = int_is_true(i95)
guard_false(i96, descr=<Guard121>) [p1, p0, p49, p89, p71, p2, p5, p10, p12, p16, None, p82, i51, p36, p50]
+1148: p97 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #12 LOOKUP_METHOD')
+1148: setfield_gc(p71, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #18 CALL_METHOD')
+1163: guard_not_invalidated(, descr=<Guard122>) [p1, p0, p49, p2, p5, p10, p12, p16, p89, None, i51, p36, p50]
+1163: i99 = strlen(p36)
+1174: i101 = int_gt(9223372036854775807, i99)
guard_true(i101, descr=<Guard123>) [p1, p0, p49, p89, p36, p2, p5, p10, p12, p16, None, None, i51, None, p50]
+1193: p102 = getfield_gc_pure(p89, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+1197: i103 = getfield_gc_pure(p89, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+1201: i105 = getarrayitem_gc_pure(p102, 0, descr=<ArrayS 8>)
+1205: i107 = int_eq(i105, 17)
guard_true(i107, descr=<Guard124>) [p1, p0, p49, p89, p2, p5, p10, p12, p16, i99, i103, p102, None, None, i51, p36, p50]
+1215: i109 = getarrayitem_gc_pure(p102, 2, descr=<ArrayS 8>)
+1219: i111 = int_and(i109, 1)
+1226: i112 = int_is_true(i111)
guard_true(i112, descr=<Guard125>) [p1, p0, p49, p89, i109, p2, p5, p10, p12, p16, i99, i103, p102, None, None, i51, p36, p50]
+1236: i114 = getarrayitem_gc_pure(p102, 5, descr=<ArrayS 8>)
+1240: i116 = int_gt(i114, 1)
guard_false(i116, descr=<Guard126>) [p1, p0, p49, p89, p2, p5, p10, p12, p16, i99, i103, p102, None, None, i51, p36, p50]
+1250: i118 = getarrayitem_gc_pure(p102, 1, descr=<ArrayS 8>)
+1254: i120 = int_add(i118, 1)
+1258: i121 = getarrayitem_gc_pure(p102, i120, descr=<ArrayS 8>)
+1263: i123 = int_eq(i121, 19)
guard_true(i123, descr=<Guard127>) [p1, p0, p49, p89, i120, p2, p5, p10, p12, p16, i99, i103, p102, None, None, i51, p36, p50]
+1273: i125 = int_add(i120, 1)
+1280: i126 = getarrayitem_gc_pure(p102, i125, descr=<ArrayS 8>)
+1285: i128 = int_add(i120, 2)
+1289: i130 = int_lt(0, i99)
guard_true(i130, descr=<Guard128>) [p1, p0, p49, p89, i126, i128, p2, p5, p10, p12, p16, i99, i103, p102, None, None, i51, p36, p50]
+1299: guard_value(i128, 11, descr=<Guard129>) [p1, p0, p49, p89, i126, i128, p102, p2, p5, p10, p12, p16, i99, i103, None, None, None, i51, p36, p50]
+1309: guard_value(i126, 51, descr=<Guard130>) [p1, p0, p49, p89, i126, p102, p2, p5, p10, p12, p16, i99, i103, None, None, None, i51, p36, p50]
+1319: guard_value(p102, ConstPtr(ptr133), descr=<Guard131>) [p1, p0, p49, p89, p102, p2, p5, p10, p12, p16, i99, i103, None, None, None, i51, p36, p50]
debug_merge_point(2, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+1338: i134 = force_token()
p136 = new_with_vtable(38602768)
p137 = new_with_vtable(38637968)
+1422: setfield_gc(p137, i51, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p137, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+1469: setfield_gc(p0, i134, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+1480: setfield_gc(p136, ConstPtr(ptr133), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
+1494: setfield_gc(p136, i103, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+1498: setfield_gc(p136, i99, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+1502: setfield_gc(p136, p36, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+1506: i138 = call_assembler(0, p136, descr=<Loop3>)
guard_not_forced(, descr=<Guard93>) [p1, p0, p49, p136, p89, i138, p137, p2, p5, p10, p12, p16, p36, p50]
+1599: guard_no_exception(, descr=<Guard132>) [p1, p0, p49, p136, p89, i138, p137, p2, p5, p10, p12, p16, p36, p50]
+1614: guard_false(i138, descr=<Guard133>) [p1, p0, p49, p136, p89, p137, p2, p5, p10, p12, p16, p36, p50]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #21 RETURN_VALUE')
+1623: p139 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+1634: guard_isnull(p139, descr=<Guard134>) [p1, p0, p49, p139, p137, p2, p5, p10, p12, p16, p36, p50]
+1643: i140 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+1647: i141 = int_is_true(i140)
guard_false(i141, descr=<Guard135>) [p1, p0, p49, p137, p2, p5, p10, p12, p16, p36, p50]
+1657: p142 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p49, p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+1695: setfield_gc(p137, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+1710: guard_not_invalidated(, descr=<Guard136>) [p1, p0, p2, p5, p10, p12, p16, p36, None]
+1710: i145 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+1718: i147 = int_lt(i145, 0)
guard_false(i147, descr=<Guard137>) [p1, p0, p2, p5, p10, p12, p16, p36, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1728: label(p0, p1, p2, p5, p10, p12, p36, p16, i140, p49, p50, descr=TargetToken(140669221670928))
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1758: p148 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+1769: guard_nonnull(p148, descr=<Guard138>) [p1, p0, p16, p148, p2, p5, p10, p12, p36]
+1778: i149 = getfield_gc(p16, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+1782: p150 = getfield_gc(p148, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+1786: guard_class(p150, 38655536, descr=<Guard139>) [p1, p0, p16, i149, p150, p148, p2, p5, p10, p12, p36]
+1798: p151 = getfield_gc(p148, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+1802: i152 = getfield_gc(p151, descr=<FieldS list.length 8>)
+1806: i153 = uint_ge(i149, i152)
guard_false(i153, descr=<Guard140>) [p1, p0, p16, i149, i152, p151, p2, p5, p10, p12, p36]
+1815: p154 = getfield_gc(p151, descr=<FieldP list.items 16>)
+1819: p155 = getarrayitem_gc(p154, i149, descr=<ArrayP 8>)
+1824: guard_nonnull(p155, descr=<Guard141>) [p1, p0, p16, i149, p155, p2, p5, p10, p12, p36]
+1833: i156 = int_add(i149, 1)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+1837: p157 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+1848: setfield_gc(p16, i156, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+1852: guard_value(p157, ConstPtr(ptr42), descr=<Guard142>) [p1, p0, p157, p2, p5, p10, p12, p16, p155, None]
+1871: p158 = getfield_gc(p157, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1875: guard_value(p158, ConstPtr(ptr44), descr=<Guard143>) [p1, p0, p158, p157, p2, p5, p10, p12, p16, p155, None]
+1894: guard_not_invalidated(, descr=<Guard144>) [p1, p0, p157, p2, p5, p10, p12, p16, p155, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+1894: p159 = getfield_gc(ConstPtr(ptr45), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1907: guard_value(p159, ConstPtr(ptr47), descr=<Guard145>) [p1, p0, p159, p2, p5, p10, p12, p16, p155, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+1926: i160 = force_token()
+1926: i161 = int_is_zero(i140)
guard_true(i161, descr=<Guard146>) [p1, p0, p49, p2, p5, p10, p12, p16, p50, i160, p155, None]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #0 LOAD_GLOBAL')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #9 CALL_FUNCTION')
+1936: i162 = getfield_gc(ConstPtr(ptr55), descr=<FieldS list.length 8>)
+1949: i163 = int_ge(0, i162)
guard_true(i163, descr=<Guard147>) [p1, p0, p49, i162, p2, p5, p10, p12, p16, p50, i160, p155, None]
+1959: i164 = force_token()
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #0 LOAD_GLOBAL')
+1959: p165 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1967: guard_value(p165, ConstPtr(ptr62), descr=<Guard148>) [p1, p0, p49, p165, p2, p5, p10, p12, p16, i164, p50, i160, p155, None]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #3 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #6 LOAD_CONST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #9 BINARY_SUBSCR')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #10 CALL_FUNCTION')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #13 BUILD_TUPLE')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #16 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #19 BINARY_ADD')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #20 STORE_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #23 LOAD_GLOBAL')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #26 LOOKUP_METHOD')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #29 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #32 CALL_METHOD')
+1980: p166 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1993: guard_class(p166, ConstClass(ObjectDictStrategy), descr=<Guard149>) [p1, p0, p49, p166, p2, p5, p10, p12, p16, i164, p50, i160, p155, None]
+2005: p167 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+2018: i168 = force_token()
p169 = new_array(3, descr=<ArrayP 8>)
p170 = new_with_vtable(38637968)
+2117: setfield_gc(p170, i164, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p170, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+2170: setfield_gc(p0, i168, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2174: setarrayitem_gc(p169, 0, ConstPtr(ptr73), descr=<ArrayP 8>)
+2182: setarrayitem_gc(p169, 1, ConstPtr(ptr75), descr=<ArrayP 8>)
+2196: setarrayitem_gc(p169, 2, ConstPtr(ptr174), descr=<ArrayP 8>)
+2210: i175 = call_may_force(ConstClass(hash_tuple), p169, descr=<Calli 8 r EF=6>)
guard_not_forced(, descr=<Guard94>) [p1, p0, p49, p167, i175, p170, p2, p5, p10, p12, p16, p169, p50, i160, p155]
+2275: guard_no_exception(, descr=<Guard150>) [p1, p0, p49, p167, i175, p170, p2, p5, p10, p12, p16, p169, p50, i160, p155]
+2290: i176 = force_token()
p177 = new_with_vtable(38549536)
+2360: setfield_gc(p0, i176, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2371: setfield_gc(p177, p169, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+2382: i178 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v693___simple_call__function_l), p167, p177, i175, descr=<Calli 8 rri EF=6>)
guard_not_forced(, descr=<Guard95>) [p1, p0, p49, p177, i178, p167, p170, p2, p5, p10, p12, p16, p50, i160, p155]
+2440: guard_no_exception(, descr=<Guard151>) [p1, p0, p49, p177, i178, p167, p170, p2, p5, p10, p12, p16, p50, i160, p155]
+2455: i179 = int_and(i178, -9223372036854775808)
+2471: i180 = int_is_true(i179)
guard_false(i180, descr=<Guard152>) [p1, p0, p49, p177, i178, p167, p170, p2, p5, p10, p12, p16, p50, i160, p155]
+2481: p181 = getfield_gc(p167, descr=<FieldP dicttable.entries 24>)
+2492: p182 = getinteriorfield_gc(p181, i178, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+2501: guard_nonnull_class(p182, 38793968, descr=<Guard153>) [p1, p0, p49, p177, p182, p170, p2, p5, p10, p12, p16, p50, i160, p155]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #35 STORE_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #38 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #41 LOAD_CONST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #44 COMPARE_OP')
+2519: i183 = instance_ptr_eq(ConstPtr(ptr91), p182)
guard_false(i183, descr=<Guard154>) [p1, p0, p49, p170, p2, p5, p10, p12, p16, p182, p177, p50, i160, p155]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #50 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 228> #53 RETURN_VALUE')
+2532: p184 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+2543: guard_isnull(p184, descr=<Guard155>) [p1, p0, p49, p182, p184, p170, p2, p5, p10, p12, p16, None, p177, p50, i160, p155]
+2552: i185 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+2556: i186 = int_is_true(i185)
guard_false(i186, descr=<Guard156>) [p1, p0, p49, p182, p170, p2, p5, p10, p12, p16, None, p177, p50, i160, p155]
+2566: p187 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #12 LOOKUP_METHOD')
+2566: setfield_gc(p170, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #18 CALL_METHOD')
+2581: guard_not_invalidated(, descr=<Guard157>) [p1, p0, p49, p2, p5, p10, p12, p16, p182, None, p50, i160, p155]
+2581: i189 = strlen(p155)
+2592: i191 = int_gt(9223372036854775807, i189)
guard_true(i191, descr=<Guard158>) [p1, p0, p49, p182, p155, p2, p5, p10, p12, p16, None, None, p50, i160, None]
+2611: p192 = getfield_gc_pure(p182, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+2615: i193 = getfield_gc_pure(p182, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+2619: i194 = getarrayitem_gc_pure(p192, 0, descr=<ArrayS 8>)
+2623: i195 = int_eq(i194, 17)
guard_true(i195, descr=<Guard159>) [p1, p0, p49, p182, p2, p5, p10, p12, p16, i189, i193, p192, None, None, p50, i160, p155]
+2633: i196 = getarrayitem_gc_pure(p192, 2, descr=<ArrayS 8>)
+2637: i197 = int_and(i196, 1)
+2644: i198 = int_is_true(i197)
guard_true(i198, descr=<Guard160>) [p1, p0, p49, p182, i196, p2, p5, p10, p12, p16, i189, i193, p192, None, None, p50, i160, p155]
+2654: i199 = getarrayitem_gc_pure(p192, 5, descr=<ArrayS 8>)
+2658: i200 = int_gt(i199, 1)
guard_false(i200, descr=<Guard161>) [p1, p0, p49, p182, p2, p5, p10, p12, p16, i189, i193, p192, None, None, p50, i160, p155]
+2668: i201 = getarrayitem_gc_pure(p192, 1, descr=<ArrayS 8>)
+2672: i202 = int_add(i201, 1)
+2676: i203 = getarrayitem_gc_pure(p192, i202, descr=<ArrayS 8>)
+2681: i204 = int_eq(i203, 19)
guard_true(i204, descr=<Guard162>) [p1, p0, p49, p182, i202, p2, p5, p10, p12, p16, i189, i193, p192, None, None, p50, i160, p155]
+2691: i205 = int_add(i202, 1)
+2698: i206 = getarrayitem_gc_pure(p192, i205, descr=<ArrayS 8>)
+2703: i207 = int_add(i202, 2)
+2707: i209 = int_lt(0, i189)
guard_true(i209, descr=<Guard163>) [p1, p0, p49, p182, i206, i207, p2, p5, p10, p12, p16, i189, i193, p192, None, None, p50, i160, p155]
+2717: guard_value(i207, 11, descr=<Guard164>) [p1, p0, p49, p182, i206, i207, p192, p2, p5, p10, p12, p16, i189, i193, None, None, None, p50, i160, p155]
+2727: guard_value(i206, 51, descr=<Guard165>) [p1, p0, p49, p182, i206, p192, p2, p5, p10, p12, p16, i189, i193, None, None, None, p50, i160, p155]
+2737: guard_value(p192, ConstPtr(ptr133), descr=<Guard166>) [p1, p0, p49, p182, p192, p2, p5, p10, p12, p16, i189, i193, None, None, None, p50, i160, p155]
debug_merge_point(2, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+2756: i210 = force_token()
p211 = new_with_vtable(38602768)
p212 = new_with_vtable(38637968)
+2840: setfield_gc(p212, i160, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p212, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+2888: setfield_gc(p0, i210, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2899: setfield_gc(p211, ConstPtr(ptr133), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
+2913: setfield_gc(p211, i193, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+2917: setfield_gc(p211, i189, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+2921: setfield_gc(p211, p155, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+2925: i213 = call_assembler(0, p211, descr=<Loop3>)
guard_not_forced(, descr=<Guard96>) [p1, p0, p49, p211, p182, i213, p212, p2, p5, p10, p12, p16, p155, p50]
+3018: guard_no_exception(, descr=<Guard167>) [p1, p0, p49, p211, p182, i213, p212, p2, p5, p10, p12, p16, p155, p50]
+3033: guard_false(i213, descr=<Guard168>) [p1, p0, p49, p211, p182, p212, p2, p5, p10, p12, p16, p155, p50]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #21 RETURN_VALUE')
+3042: p214 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+3053: guard_isnull(p214, descr=<Guard169>) [p1, p0, p49, p214, p212, p2, p5, p10, p12, p16, p155, p50]
+3062: i215 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+3066: i216 = int_is_true(i215)
guard_false(i216, descr=<Guard170>) [p1, p0, p49, p212, p2, p5, p10, p12, p16, p155, p50]
+3076: p217 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p49, p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+3110: setfield_gc(p212, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+3125: guard_not_invalidated(, descr=<Guard171>) [p1, p0, p2, p5, p10, p12, p16, p155, None]
+3125: i219 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+3133: i220 = int_lt(i219, 0)
guard_false(i220, descr=<Guard172>) [p1, p0, p2, p5, p10, p12, p16, p155, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+3143: jump(p0, p1, p2, p5, p10, p12, p155, p16, i215, p49, p50, descr=TargetToken(140669221670928))
+3154: --end of the loop--
[19b7525b1e48] jit-log-opt-loop}
[19b7527a80de] {jit-backend
[19b7527cf384] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181be7a7 +0  488DA50000000049BBA022011BF07F00004D8B3B4983C70149BBA022011BF07F00004D893B4C8B7E404D0FB67C3F184983FF330F84000000004883C7014C8B7E084C39FF0F8C00000000B80000000048890425D0D1550141BBD01BF30041FFD3B802000000488D65D8415F415E415D415C5B5DC349BB00B01B18F07F000041FFD31D1803AD00000049BB00B01B18F07F000041FFD31D1803AE000000
[19b7527d6140] jit-backend-dump}
[19b7527d6c7a] {jit-backend-addr
bridge out of Guard 90 has address 7ff0181be7a7 to 7ff0181be81b
[19b7527d818c] jit-backend-addr}
[19b7527d8e0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181be7aa +0  70FFFFFF
[19b7527da6d0] jit-backend-dump}
[19b7527db294] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181be7dc +0  3B000000
[19b7527e5f5c] jit-backend-dump}
[19b7527e6b08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181be7ed +0  3E000000
[19b7527e8170] jit-backend-dump}
[19b7527e8ed8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bce06 +0  9D190000
[19b7527ea4f2] jit-backend-dump}
[19b7527eb4f4] jit-backend}
[19b7527ecb80] {jit-log-opt-bridge
# bridge out of Guard 90 with 10 ops
[i0, p1]
debug_merge_point(0, 're StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+37: p2 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+41: i3 = strgetitem(p2, i0)
+47: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard173>) [i0, p1]
+57: i7 = int_add(i0, 1)
+61: i8 = getfield_gc_pure(p1, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+65: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard174>) [i7, p1]
+74: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x1888940>)
+116: --end of the loop--
[19b752801b14] jit-log-opt-bridge}
[19b7533c96f0] {jit-backend
[19b75343127a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181be85b
[19b75343cf02] jit-backend-dump}
[19b75343db92] {jit-backend-addr
bridge out of Guard 133 has address 7ff0181be85b to 7ff0181be999
[19b75343f1ca] jit-backend-addr}
[19b75343ff6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181be85e +0  E0FDFFFF
[19b753441846] jit-backend-dump}
[19b753442902] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181be890 +0  05010000
[19b753443ee6] jit-backend-dump}
[19b7534449d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181be89e +0  1B010000
[19b753445fd4] jit-backend-dump}
[19b753446c0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181be8e0 +0  19010000
[19b753448134] jit-backend-dump}
[19b753448e60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd6e6 +0  71110000
[19b75344a342] jit-backend-dump}
[19b75344b290] jit-backend}
[19b75344cba4] {jit-log-opt-bridge
# bridge out of Guard 133 with 19 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy/lib-python/2.7/re.py'. line 139> #21 RETURN_VALUE')
+37: p13 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+48: guard_isnull(p13, descr=<Guard175>) [p0, p1, p2, p13, p5, p6, p7, p8, p9, p10, p4, p12, p11, p3]
+57: i14 = getfield_gc(p2, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+61: i15 = int_is_true(i14)
guard_false(i15, descr=<Guard176>) [p0, p1, p2, p5, p6, p7, p8, p9, p10, p4, p12, p11, p3]
+71: p16 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p2, p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+104: setfield_gc(p5, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+119: guard_not_invalidated(, descr=<Guard177>) [p0, p1, p6, p7, p8, p9, p10, None, None, p11, None]
+119: i20 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+127: i22 = int_lt(i20, 0)
guard_false(i22, descr=<Guard178>) [p0, p1, p6, p7, p8, p9, p10, None, None, p11, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
p24 = new_with_vtable(ConstClass(W_StringObject))
+200: setfield_gc(p24, p11, descr=<FieldP pypy.objspace.std.stringobject.W_StringObject.inst__value 8>)
+211: jump(p1, p0, p6, ConstPtr(ptr25), 0, p7, 4, 44, p8, p9, p24, p10, ConstPtr(ptr29), ConstPtr(ptr30), ConstPtr(ptr30), ConstPtr(ptr30), descr=TargetToken(140669221670848))
+318: --end of the loop--
[19b75348e4ae] jit-log-opt-bridge}
[19b7534f934a] {jit-backend
[19b7535138dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bea1a +0  488DA50000000049BBD022011BF07F00004D8B3B4983C70149BBD022011BF07F00004D893B4989FF4883C70148897E1848C74620000000004C897E28B80100000048890425D0D1550141BBD01BF30041FFD3B802000000488D65D8415F415E415D415C5B5DC3
[19b7535193b4] jit-backend-dump}
[19b753519e04] {jit-backend-addr
bridge out of Guard 87 has address 7ff0181bea1a to 7ff0181bea80
[19b75351b1e4] jit-backend-addr}
[19b75351bdde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bea1d +0  70FFFFFF
[19b75351d656] jit-backend-dump}
[19b75351e352] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcd49 +0  CD1C0000
[19b75351f8c4] jit-backend-dump}
[19b753520680] jit-backend}
[19b753521916] {jit-log-opt-bridge
# bridge out of Guard 87 with 5 ops
[i0, p1]
+37: i3 = int_add(i0, 1)
+44: setfield_gc(p1, i3, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+48: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+56: setfield_gc(p1, i0, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+60: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1888940>)
+102: --end of the loop--
[19b75352d994] jit-log-opt-bridge}
[19b7537d0b26] {jit-backend
[19b7537ea8cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bea80 +0  488DA50000000049BBE822011BF07F00004D8B3B4983C70149BBE822011BF07F00004D893B4989FF4883C70148897E1848C74620000000004C897E28B80100000048890425D0D1550141BBD01BF30041FFD3B802000000488D65D8415F415E415D415C5B5DC3
[19b7537efeca] jit-backend-dump}
[19b7537f0908] {jit-backend-addr
bridge out of Guard 89 has address 7ff0181bea80 to 7ff0181beae6
[19b7537f1db4] jit-backend-addr}
[19b7537f2966] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bea83 +0  70FFFFFF
[19b7537f42c2] jit-backend-dump}
[19b7537f4ffa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bcdf5 +0  871C0000
[19b7537f6704] jit-backend-dump}
[19b7537f7448] jit-backend}
[19b7537f8582] {jit-log-opt-bridge
# bridge out of Guard 89 with 5 ops
[i0, p1]
+37: i3 = int_add(i0, 1)
+44: setfield_gc(p1, i3, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+48: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+56: setfield_gc(p1, i0, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+60: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x1888940>)
+102: --end of the loop--
[19b7538043ae] jit-log-opt-bridge}
[19b753864132] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc76a +0  E986030000
[19b75386734e] jit-backend-dump}
[19b753867d62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bc8d0 +0  E9F6020000
[19b753869808] jit-backend-dump}
[19b75386a4b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd250 +0  E9D60B0000
[19b75386bb42] jit-backend-dump}
[19b753877044] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd2a6 +0  E9F70B0000
[19b753878cbe] jit-backend-dump}
[19b753879672] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd51e +0  E93B0B0000
[19b75387ad2e] jit-backend-dump}
[19b75387b61c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd741 +0  E92E0B0000
[19b75387cc18] jit-backend-dump}
[19b75387d5c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bd7f9 +0  E9560B0000
[19b75387ed24] jit-backend-dump}
[19b75387f702] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdaa8 +0  E9AB0A0000
[19b753880cc8] jit-backend-dump}
[19b7538817a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bdcc8 +0  E9A40A0000
[19b753882d9e] jit-backend-dump}
[19b7538836c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181be8d2 +0  E909010000
[19b753884cca] jit-backend-dump}
[19b7540dd168] {jit-backend
[19b7541b0878] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181beae6 +0  488B04254045A0024829E0483B0425E03C5101760D49BB63B31B18F07F000041FFD3554889E5534154415541564157488DA50000000049BB0023011BF07F00004D8B3B4983C70149BB0023011BF07F00004D893B4C8B7F504C8B77784C0FB6AF960000004C8B67604C8B97800000004C8B4F584C8B4768498B5810498B5018498B4020498B48284889B570FFFFFF498B70304C89A568FFFFFF4D8B60384889BD60FFFFFF498B78404D8B40484C89BD58FFFFFF4C898D50FFFFFF48898548FFFFFF48898D40FFFFFF4C89A538FFFFFF4889BD30FFFFFF4C898528FFFFFF49BB1823011BF07F00004D8B034983C00149BB1823011BF07F00004D89034983FA050F8500000000813E806300000F85000000004C8B56104D85D20F84000000004C8B4608498B7A10813F582D03000F85000000004D8B5208498B7A084D8B62104D8B52184983F8000F8C000000004D39D00F8D000000004C89C14D0FAFC44889F84C01C74883C10148894E084983FD000F85000000004883FB017206813BF82200000F85000000004883FA017206813AF82200000F85000000004C8B6A084D89E84901FD0F80000000004C8B4B084D01E90F80000000004C8B2C254845A0024983FD000F8C0000000049BB701B2E18F07F00004D39DE0F850000000048899520FFFFFF4889BD18FFFFFF49BB3023011BF07F0000498B3B4883C70149BB3023011BF07F000049893B4C39D10F8D000000004889CF490FAFCC4889C24801C84883C70148897E084C89C14901C00F80000000004D89CE4D01C10F80000000004C8B34254845A0024983FE000F8C0000000048898518FFFFFF4889D04989C84889F9E985FFFFFF49BB00B01B18F07F000041FFD32940484C383544510C085458185C606403B300000049BB00B01B18F07F000041FFD34048184C3835440C0854585C606403B400000049BB00B01B18F07F000041FFD3404818284C3835440C0854585C606403B500000049BB00B01B18F07F000041FFD3404818211C284C3835440C0854585C606403B600000049BB00B01B18F07F000041FFD34048182129311D4C3835440C0854585C606403B700000049BB00B01B18F07F000041FFD340481821311D4C3835440C0854585C606403B800000049BB00B01B18F07F000041FFD33540484C38440C0854581860641D03B900000049BB00B01B18F07F000041FFD340480C4C384408581860641D03BA00000049BB00B01B18F07F000041FFD34048084C38440C581860641D03BB00000049BB00B01B18F07F000041FFD3404808354C38440C58181D03BC00000049BB00B01B18F07F000041FFD340480C254C3844085818351D03BD00000049BB00B01B18F07F000041FFD340484C384408581825071D03BE00000049BB00B01B18F07F000041FFD340484C384408581825071D03BF00000049BB00B01B18F07F000041FFD34048384C4408581825071D03C000000049BB00B01B18F07F000041FFD34048180531014C446858256D03C100000049BB00B01B18F07F000041FFD3404868214C44581801250703C200000049BB00B01B18F07F000041FFD34048254C446858182101390703C300000049BB00B01B18F07F000041FFD340484C44685818250701070703C400000049BB00B01B18F07F000041FFD340484C44685818250701070703C5000000
[19b7541c5aca] jit-backend-dump}
[19b7541c66ee] {jit-backend-addr
Loop 5 (<code object double_loop, file 'source.py', line 47> #38 FOR_ITER) has address 7ff0181beb1c to 7ff0181bed49 (bootstrap 7ff0181beae6)
[19b7541c85f0] jit-backend-addr}
[19b7541c959e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181beb18 +0  10FFFFFF
[19b7541caea6] jit-backend-dump}
[19b7541cbdee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bebe7 +0  5E010000
[19b7541cd570] jit-backend-dump}
[19b7541ce038] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bebf3 +0  74010000
[19b7541de34c] jit-backend-dump}
[19b7541df048] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bec00 +0  87010000
[19b7541e0722] jit-backend-dump}
[19b7541e1166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bec14 +0  94010000
[19b7541e25ca] jit-backend-dump}
[19b7541e2ee8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bec2e +0  9D010000
[19b7541e44d8] jit-backend-dump}
[19b7541e4f16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bec37 +0  B8010000
[19b7541e6464] jit-backend-dump}
[19b7541e6e00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bec56 +0  BC010000
[19b7541e82ac] jit-backend-dump}
[19b7541e8be2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bec68 +0  CA010000
[19b7541ea02e] jit-backend-dump}
[19b7541ea95e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bec7a +0  D6010000
[19b7541ebe04] jit-backend-dump}
[19b7541ec740] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bec8a +0  E4010000
[19b7541edcf4] jit-backend-dump}
[19b7541ee714] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bec97 +0  F4010000
[19b7541efc74] jit-backend-dump}
[19b7541f08fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181beca9 +0  1D020000
[19b7541f1d62] jit-backend-dump}
[19b7541f26aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181becbc +0  27020000
[19b7541f3b9e] jit-backend-dump}
[19b7541f450a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181becf1 +0  0F020000
[19b7541f59da] jit-backend-dump}
[19b7541f63dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bed12 +0  0C020000
[19b7541f79b4] jit-backend-dump}
[19b7541f8410] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bed1e +0  1D020000
[19b7541f98f2] jit-backend-dump}
[19b7541fa2f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bed30 +0  47020000
[19b7541fb788] jit-backend-dump}
[19b7541fcbf8] jit-backend}
[19b7542001f8] {jit-log-opt-loop
# Loop 5 (<code object double_loop, file 'source.py', line 47> #38 FOR_ITER) : loop with 86 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+92: i4 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+100: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+104: i6 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+111: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+115: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+119: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+123: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+127: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+131: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+135: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+146: p20 = getarrayitem_gc(p8, 5, descr=<ArrayP 8>)
+157: p22 = getarrayitem_gc(p8, 6, descr=<ArrayP 8>)
+168: p24 = getarrayitem_gc(p8, 7, descr=<ArrayP 8>)
+172: p25 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+172: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, p20, p22, p24, descr=TargetToken(140669221673808))
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+251: guard_value(i6, 5, descr=<Guard179>) [i6, p1, p0, p2, p3, i4, p5, i7, p10, p12, p14, p16, p18, p20, p22, p24]
+261: guard_class(p18, 38562496, descr=<Guard180>) [p1, p0, p18, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+273: p28 = getfield_gc(p18, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+277: guard_nonnull(p28, descr=<Guard181>) [p1, p0, p18, p28, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+286: i29 = getfield_gc(p18, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+290: p30 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+294: guard_class(p30, 38745240, descr=<Guard182>) [p1, p0, p18, i29, p30, p28, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+306: p32 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+310: i33 = getfield_gc_pure(p32, descr=<FieldS tuple3.item0 8>)
+314: i34 = getfield_gc_pure(p32, descr=<FieldS tuple3.item1 16>)
+318: i35 = getfield_gc_pure(p32, descr=<FieldS tuple3.item2 24>)
+322: i37 = int_lt(i29, 0)
guard_false(i37, descr=<Guard183>) [p1, p0, p18, i29, i35, i34, i33, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+332: i38 = int_ge(i29, i35)
guard_false(i38, descr=<Guard184>) [p1, p0, p18, i29, i34, i33, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+341: i39 = int_mul(i29, i34)
+348: i40 = int_add(i33, i39)
+354: i42 = int_add(i29, 1)
+358: setfield_gc(p18, i42, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+362: guard_value(i4, 0, descr=<Guard185>) [i4, p1, p0, p2, p3, p5, p10, p12, p14, p16, p18, p22, p24, i40]
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #41 STORE_FAST')
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #44 LOAD_FAST')
+372: guard_nonnull_class(p10, ConstClass(W_IntObject), descr=<Guard186>) [p1, p0, p10, p2, p3, p5, p12, p16, p18, p22, p24, i40]
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #47 LOAD_FAST')
+390: guard_nonnull_class(p12, ConstClass(W_IntObject), descr=<Guard187>) [p1, p0, p12, p2, p3, p5, p10, p16, p18, p22, p24, i40]
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #50 LOAD_FAST')
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #53 BINARY_ADD')
+408: i46 = getfield_gc_pure(p12, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+412: i47 = int_add_ovf(i46, i40)
guard_no_overflow(, descr=<Guard188>) [p1, p0, p12, i47, p2, p3, p5, p10, p16, p18, i40]
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #54 INPLACE_ADD')
+424: i48 = getfield_gc_pure(p10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+428: i49 = int_add_ovf(i48, i47)
guard_no_overflow(, descr=<Guard189>) [p1, p0, p10, i49, p2, p3, p5, p12, p16, p18, i47, i40]
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #55 STORE_FAST')
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #58 JUMP_ABSOLUTE')
+437: guard_not_invalidated(, descr=<Guard190>) [p1, p0, p2, p3, p5, p12, p16, p18, i49, None, i40]
+437: i52 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+445: i54 = int_lt(i52, 0)
guard_false(i54, descr=<Guard191>) [p1, p0, p2, p3, p5, p12, p16, p18, i49, None, i40]
+455: guard_value(p3, ConstPtr(ptr55), descr=<Guard192>) [p1, p0, p3, p2, p5, p12, p16, p18, i49, None, i40]
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+474: label(p0, p1, p2, p5, i49, p12, i40, p16, p18, i42, i35, i34, i33, i46, descr=TargetToken(140669221673888))
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+518: i56 = int_ge(i42, i35)
guard_false(i56, descr=<Guard193>) [p1, p0, p18, i42, i34, i33, p2, p5, p12, p16, i49, i40]
+527: i57 = int_mul(i42, i34)
+534: i58 = int_add(i33, i57)
+540: i59 = int_add(i42, 1)
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #41 STORE_FAST')
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #44 LOAD_FAST')
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #47 LOAD_FAST')
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #50 LOAD_FAST')
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #53 BINARY_ADD')
+544: setfield_gc(p18, i59, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+548: i60 = int_add_ovf(i46, i58)
guard_no_overflow(, descr=<Guard194>) [p1, p0, p12, i60, p2, p5, p16, p18, i58, i49, None]
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #54 INPLACE_ADD')
+560: i61 = int_add_ovf(i49, i60)
guard_no_overflow(, descr=<Guard195>) [p1, p0, i61, p2, p5, p12, p16, p18, i60, i58, i49, None]
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #55 STORE_FAST')
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #58 JUMP_ABSOLUTE')
+572: guard_not_invalidated(, descr=<Guard196>) [p1, p0, p2, p5, p12, p16, p18, i61, None, i58, None, None]
+572: i62 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+580: i63 = int_lt(i62, 0)
guard_false(i63, descr=<Guard197>) [p1, p0, p2, p5, p12, p16, p18, i61, None, i58, None, None]
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+590: jump(p0, p1, p2, p5, i61, p12, i58, p16, p18, i59, i35, i34, i33, i46, descr=TargetToken(140669221673888))
+611: --end of the loop--
[19b7542ad310] jit-log-opt-loop}
[19b754b7b402] {jit-backend
[19b754f2e616] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181befaa
[19b754f406be] jit-backend-dump}
[19b754f41534] {jit-backend-addr
bridge out of Guard 193 has address 7ff0181befaa to 7ff0181bf212
[19b754f42f0e] jit-backend-addr}
[19b754f43d3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181befad +0  90FEFFFF
[19b754f45740] jit-backend-dump}
[19b754f464de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181befea +0  24020000
[19b754f47c0c] jit-backend-dump}
[19b754f4868c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181beff8 +0  31020000
[19b754f49d60] jit-backend-dump}
[19b754f4a9e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bf00a +0  54020000
[19b754f4c088] jit-backend-dump}
[19b754f4cafc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bf01d +0  5B020000
[19b754f5c7f2] jit-backend-dump}
[19b754f5d524] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bf02a +0  68020000
[19b754f5eb2c] jit-backend-dump}
[19b754f5f4fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bf03f +0  6E020000
[19b754f60986] jit-backend-dump}
[19b754f613a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bf059 +0  71020000
[19b754f62954] jit-backend-dump}
[19b754f63362] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bf062 +0  86020000
[19b754f647de] jit-backend-dump}
[19b754f65246] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bf092 +0  73020000
[19b754f666ce] jit-backend-dump}
[19b754f67016] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bf0a9 +0  77020000
[19b754f68492] jit-backend-dump}
[19b754f68d9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181bf0be +0  7E020000
[19b754f6a232] jit-backend-dump}
[19b754f6af9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7ff0181becf1 +0  B5020000
[19b754f6c542] jit-backend-dump}
[19b754f6d6ac] jit-backend}
[19b754f6f56c] {jit-log-opt-bridge
# bridge out of Guard 193 with 61 ops
[p0, p1, p2, i3, i4, i5, p6, p7, p8, p9, i10, i11]
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #61 POP_BLOCK')
+37: p12 = getfield_gc_pure(p7, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+48: setfield_gc(p2, ConstPtr(ptr13), descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+56: guard_class(p7, 38639224, descr=<Guard198>) [p0, p1, p7, p6, p12, p8, p9, i11, i10]
+68: i15 = getfield_gc_pure(p7, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+72: guard_value(i15, 4, descr=<Guard199>) [p0, p1, i15, p6, p12, p8, p9, i11, i10]
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #62 JUMP_ABSOLUTE')
+82: guard_not_invalidated(, descr=<Guard200>) [p0, p1, p6, p12, p8, p9, i11, i10]
+82: i18 = getfield_raw(44057928, descr=<FieldS pypysig_long_struct.c_value 0>)
+90: i20 = int_lt(i18, 0)
guard_false(i20, descr=<Guard201>) [p0, p1, p6, p12, p8, p9, i11, i10]
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #19 FOR_ITER')
+100: guard_class(p9, 38562496, descr=<Guard202>) [p0, p1, p9, p6, p12, p8, i11, i10]
+119: p22 = getfield_gc(p9, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+123: guard_nonnull(p22, descr=<Guard203>) [p0, p1, p9, p22, p6, p12, p8, i11, i10]
+132: i23 = getfield_gc(p9, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+136: p24 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+140: guard_class(p24, 38745240, descr=<Guard204>) [p0, p1, p9, i23, p24, p22, p6, p12, p8, i11, i10]
+153: p26 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+157: i27 = getfield_gc_pure(p26, descr=<FieldS tuple3.item0 8>)
+161: i28 = getfield_gc_pure(p26, descr=<FieldS tuple3.item1 16>)
+165: i29 = getfield_gc_pure(p26, descr=<FieldS tuple3.item2 24>)
+169: i31 = int_lt(i23, 0)
guard_false(i31, descr=<Guard205>) [p0, p1, p9, i23, i29, i28, i27, p6, p12, p8, i11, i10]
+179: i32 = int_ge(i23, i29)
guard_false(i32, descr=<Guard206>) [p0, p1, p9, i23, i28, i27, p6, p12, p8, i11, i10]
+188: i33 = int_mul(i23, i28)
+195: i34 = int_add(i27, i33)
+198: i36 = int_add(i23, 1)
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #22 STORE_FAST')
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #25 SETUP_LOOP')
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #28 LOAD_GLOBAL')
+202: p37 = getfield_gc(p1, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+213: setfield_gc(p9, i36, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+217: guard_value(p37, ConstPtr(ptr38), descr=<Guard207>) [p0, p1, p37, p6, p9, p12, i34, i11, i10]
+236: p39 = getfield_gc(p37, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+240: guard_value(p39, ConstPtr(ptr40), descr=<Guard208>) [p0, p1, p39, p37, p6, p9, p12, i34, i11, i10]
+259: p42 = getfield_gc(ConstPtr(ptr41), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+267: guard_value(p42, ConstPtr(ptr43), descr=<Guard209>) [p0, p1, p42, p6, p9, p12, i34, i11, i10]
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #31 LOAD_CONST')
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #34 CALL_FUNCTION')
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #37 GET_ITER')
debug_merge_point(0, '<code object double_loop. file 'source.py'. line 47> #38 FOR_ITER')
+280: p44 = same_as(ConstPtr(ptr40))
+280: label(p1, p0, p6, p12, i10, i34, i11, p9, descr=TargetToken(140669221269360))
p46 = new_with_vtable(38639224)
p48 = new_with_vtable(ConstClass(W_IntObject))
p50 = new_with_vtable(ConstClass(W_IntObject))
+404: setfield_gc(p48, i10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
p52 = new_with_vtable(ConstClass(W_IntObject))
+422: setfield_gc(p50, i34, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
p54 = new_with_vtable(38562496)
p56 = new_with_vtable(ConstClass(W_ListObject))
+454: setfield_gc(p46, 4, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+462: setfield_gc(p46, 62, descr=<FieldU pypy.interpreter.pyopcode.FrameBlock.inst_handlerposition 8>)
+470: setfield_gc(p46, p12, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+474: setfield_gc(p52, i11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+485: setfield_gc(p56, ConstPtr(ptr59), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+493: setfield_gc(p56, ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+507: setfield_gc(p54, p56, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+511: jump(p1, p0, p6, ConstPtr(ptr61), 0, p46, 5, 37, p48, p50, p52, p9, p54, ConstPtr(ptr65), ConstPtr(ptr66), ConstPtr(ptr66), descr=TargetToken(140669221673808))
+616: --end of the loop--
[19b754fe1a0a] jit-log-opt-bridge}
[19b755f1632a] {jit-backend-counts
entry 0:4647
TargetToken(140669174710784):4647
TargetToken(140669174710864):9292
entry 1:201
TargetToken(140669174715984):201
TargetToken(140669174716064):4468
bridge 16:4446
bridge 33:4268
TargetToken(140669174718064):4268
entry 2:1
TargetToken(140669221669808):1
TargetToken(140669221669888):1938
entry 3:3173
bridge 85:2882
bridge 88:2074
bridge 86:158
entry 4:377
TargetToken(140669221670848):527
TargetToken(140669221670928):1411
bridge 90:1420
bridge 133:150
bridge 87:50
bridge 89:7
entry 5:201
TargetToken(140669221673808):9990
TargetToken(140669221673888):998737
bridge 193:9790
TargetToken(140669221269360):9789
[19b755f26b42] jit-backend-counts}
