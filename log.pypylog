[7e18c33e717a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56000 +0  4157415641554154415341524151415057565554535251504889E341BBC0BAF20041FFD34889DF4883E4F041BBC0C9D20041FFD3488D65D8415F415E415D415C5B5DC3
[7e18c33f9678] jit-backend-dump}
[7e18c33fb1c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56043 +0  4157415641554154415341524151415057565554535251504889E341BB70BAF20041FFD34889DF4883E4F041BBC0C9D20041FFD3488D65D8415F415E415D415C5B5DC3
[7e18c33fcadd] jit-backend-dump}
[7e18c340052a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56086 +0  4157415641554154415341524151415057565554535251504889E34881EC80000000F20F110424F20F114C2408F20F11542410F20F115C2418F20F11642420F20F116C2428F20F11742430F20F117C2438F2440F11442440F2440F114C2448F2440F11542450F2440F115C2458F2440F11642460F2440F116C2468F2440F11742470F2440F117C247841BBC0BAF20041FFD34889DF4883E4F041BBC0C9D20041FFD3488D65D8415F415E415D415C5B5DC3
[7e18c340297b] jit-backend-dump}
[7e18c34037a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56137 +0  4157415641554154415341524151415057565554535251504889E34881EC80000000F20F110424F20F114C2408F20F11542410F20F115C2418F20F11642420F20F116C2428F20F11742430F20F117C2438F2440F11442440F2440F114C2448F2440F11542450F2440F115C2458F2440F11642460F2440F116C2468F2440F11742470F2440F117C247841BB70BAF20041FFD34889DF4883E4F041BBC0C9D20041FFD3488D65D8415F415E415D415C5B5DC3
[7e18c3405738] jit-backend-dump}
[7e18c3408501] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56210 +0  41BBD0B9F20041FFD3B803000000488D65D8415F415E415D415C5B5DC3
[7e18c340953c] jit-backend-dump}
[7e18c340f7f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5622d +0  F20F11442410F20F114C2418F20F11542420F20F115C2428F20F11642430F20F116C2438F20F11742440F20F117C2448F2440F11442450F2440F114C2458F2440F11542460F2440F115C2468F2440F11642470F2440F116C2478F2440F11B42480000000F2440F11BC24880000004829C24C8945A048894D804C8955B0488975904C894DA848897D984889D741BBC080CE0041FFE3
[7e18c34118c4] jit-backend-dump}
[7e18c341703c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf562c2 +0  4C8B45A0488B4D804C8B55B0488B75904C8B4DA8488B7D98F20F10442410F20F104C2418F20F10542420F20F105C2428F20F10642430F20F106C2438F20F10742440F20F107C2448F2440F10442450F2440F104C2458F2440F10542460F2440F105C2468F2440F10642470F2440F106C2478F2440F10B42480000000F2440F10BC24880000004885C07409488B1425B0685501C349BB1062F5CB747F000041FFE3
[7e18c3419028] jit-backend-dump}
[7e18c341ba40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56363 +0  57565251415041514883EC40F20F110424F20F114C2408F20F11542410F20F115C2418F20F11642420F20F116C2428F20F11742430F20F117C24384889E741BBF0F0A80041FFD3488B0425203B9D024885C0753CF20F107C2438F20F10742430F20F106C2428F20F10642420F20F105C2418F20F10542410F20F104C2408F20F1004244883C44041594158595A5E5FC341BB70BAF20041FFD3B8030000004883C478C3
[7e18c341d8eb] jit-backend-dump}
[7e18c341e71f] {jit-backend-counts
[7e18c341f46c] jit-backend-counts}
[7e18c39d710c] {jit-backend
[7e18c3ee50f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf
[7e18c3f0324c] jit-backend-dump}
[7e18c3f03d0e] {jit-backend-addr
Loop 0 (<code object uninlined_call, file 'source.py', line 21> #19 FOR_ITER) has address 7f74cbf5643c to 7f74cbf56619 (bootstrap 7f74cbf56406)
[7e18c3f0502b] jit-backend-addr}
[7e18c3f05d6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56438 +0  30FFFFFF
[7e18c3f06bf1] jit-backend-dump}
[7e18c3f079f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf564ed +0  28010000
[7e18c3f08526] jit-backend-dump}
[7e18c3f08a60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf564f9 +0  3B010000
[7e18c3f09621] jit-backend-dump}
[7e18c3f09c00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56506 +0  4B010000
[7e18c3f0a6c5] jit-backend-dump}
[7e18c3f0ab39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5651a +0  55010000
[7e18c3f0b517] jit-backend-dump}
[7e18c3f0b97c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56534 +0  5B010000
[7e18c3f0c32d] jit-backend-dump}
[7e18c3f0c7bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5653d +0  73010000
[7e18c3f0d287] jit-backend-dump}
[7e18c3f0d80f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5655c +0  74010000
[7e18c3f0e340] jit-backend-dump}
[7e18c3f0e7c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5656e +0  7F010000
[7e18c3f0f168] jit-backend-dump}
[7e18c3f0f5cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56581 +0  87010000
[7e18c3f0ff6c] jit-backend-dump}
[7e18c3f103f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5658f +0  94010000
[7e18c3f10d79] jit-backend-dump}
[7e18c3f115a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf565a1 +0  B5010000
[7e18c3f1217d] jit-backend-dump}
[7e18c3f12714] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf565cf +0  A0010000
[7e18c3f131af] jit-backend-dump}
[7e18c3f13617] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf565f1 +0  9A010000
[7e18c3f13fcb] jit-backend-dump}
[7e18c3f1459e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56603 +0  BE010000
[7e18c3f14f22] jit-backend-dump}
[7e18c3f15b01] jit-backend}
[7e18c3f17cc1] {jit-log-opt-loop
# Loop 0 (<code object uninlined_call, file 'source.py', line 21> #19 FOR_ITER) : loop with 73 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+92: i4 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+100: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+104: i6 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+111: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+115: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+119: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+123: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+127: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+131: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+135: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+139: p19 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+139: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, descr=TargetToken(140139616183984))
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+225: guard_value(i6, 3, descr=<Guard4>) [i6, p1, p0, p2, p3, i4, p5, i7, p10, p12, p14, p16, p18]
+235: guard_class(p14, 38352528, descr=<Guard5>) [p1, p0, p14, p2, p3, i4, p5, p10, p12, p16, p18]
+247: p22 = getfield_gc(p14, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+251: guard_nonnull(p22, descr=<Guard6>) [p1, p0, p14, p22, p2, p3, i4, p5, p10, p12, p16, p18]
+260: i23 = getfield_gc(p14, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+264: p24 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+268: guard_class(p24, 38538416, descr=<Guard7>) [p1, p0, p14, i23, p24, p22, p2, p3, i4, p5, p10, p12, p16, p18]
+280: p26 = getfield_gc(p22, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+284: i27 = getfield_gc_pure(p26, descr=<FieldS tuple3.item0 8>)
+288: i28 = getfield_gc_pure(p26, descr=<FieldS tuple3.item1 16>)
+292: i29 = getfield_gc_pure(p26, descr=<FieldS tuple3.item2 24>)
+296: i31 = int_lt(i23, 0)
guard_false(i31, descr=<Guard8>) [p1, p0, p14, i23, i29, i28, i27, p2, p3, i4, p5, p10, p12, p16, p18]
+306: i32 = int_ge(i23, i29)
guard_false(i32, descr=<Guard9>) [p1, p0, p14, i23, i28, i27, p2, p3, i4, p5, p10, p12, p16, p18]
+315: i33 = int_mul(i23, i28)
+322: i34 = int_add(i27, i33)
+328: i36 = int_add(i23, 1)
+332: setfield_gc(p14, i36, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+336: guard_value(i4, 0, descr=<Guard10>) [i4, p1, p0, p2, p3, p5, p10, p12, p14, p18, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
+346: guard_nonnull_class(p10, ConstClass(W_IntObject), descr=<Guard11>) [p1, p0, p10, p2, p3, p5, p14, p18, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
+364: guard_value(p3, ConstPtr(ptr39), descr=<Guard12>) [p1, p0, p3, p2, p5, p10, p14, p18, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+383: i40 = getfield_gc_pure(p10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+387: i42 = int_add_ovf(i40, 1)
guard_no_overflow(, descr=<Guard13>) [p1, p0, p10, i42, p2, p5, p14, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+397: guard_not_invalidated(, descr=<Guard14>) [p1, p0, p2, p5, p14, i42, i34]
+397: i44 = getfield_raw(43858376, descr=<FieldS pypysig_long_struct.c_value 0>)
+405: i46 = int_lt(i44, 0)
guard_false(i46, descr=<Guard15>) [p1, p0, p2, p5, p14, i42, i34]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+415: label(p0, p1, p2, p5, i42, i34, p14, i36, i29, i28, i27, descr=TargetToken(140139616184064))
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+452: i47 = int_ge(i36, i29)
guard_false(i47, descr=<Guard16>) [p1, p0, p14, i36, i28, i27, p2, p5, i42, i34]
+461: i48 = int_mul(i36, i28)
+468: i49 = int_add(i27, i48)
+474: i50 = int_add(i36, 1)
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
+478: setfield_gc(p14, i50, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+482: i51 = int_add_ovf(i42, 1)
guard_no_overflow(, descr=<Guard17>) [p1, p0, i51, p2, p5, p14, i49, i42, None]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+495: guard_not_invalidated(, descr=<Guard18>) [p1, p0, p2, p5, p14, i51, i49, None, None]
+495: i53 = getfield_raw(43858376, descr=<FieldS pypysig_long_struct.c_value 0>)
+503: i54 = int_lt(i53, 0)
guard_false(i54, descr=<Guard19>) [p1, p0, p2, p5, p14, i51, i49, None, None]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+513: jump(p0, p1, p2, p5, i51, i49, p14, i50, i29, i28, i27, descr=TargetToken(140139616184064))
+531: --end of the loop--
[7e18c3fba5a9] jit-log-opt-loop}
[7e18c4351e29] {jit-backend
[7e18c43b55d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf567e
[7e18c43be371] jit-backend-dump}
[7e18c43be9a7] {jit-backend-addr
Loop 1 (<code object bridge, file 'source.py', line 27> #15 LOAD_FAST) has address 7f74cbf56816 to 7f74cbf56a30 (bootstrap 7f74cbf567e0)
[7e18c43bf74b] jit-backend-addr}
[7e18c43bfe05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56812 +0  20FFFFFF
[7e18c43c0ab9] jit-backend-dump}
[7e18c43c1193] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf568bc +0  70010000
[7e18c43c1cdd] jit-backend-dump}
[7e18c43c2219] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf568ce +0  7C010000
[7e18c43ca71b] jit-backend-dump}
[7e18c43cae15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf568d8 +0  8E010000
[7e18c43cb8f3] jit-backend-dump}
[7e18c43cbe13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf568eb +0  96010000
[7e18c43cc7d3] jit-backend-dump}
[7e18c43cccf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf568fc +0  9F010000
[7e18c43cd745] jit-backend-dump}
[7e18c43cdc4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5690f +0  A4010000
[7e18c43ce623] jit-backend-dump}
[7e18c43cea43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56947 +0  85010000
[7e18c43cf30d] jit-backend-dump}
[7e18c43cf73b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56959 +0  8C010000
[7e18c43cfff9] jit-backend-dump}
[7e18c43d0425] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56967 +0  97010000
[7e18c43d0ebd] jit-backend-dump}
[7e18c43d14e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56984 +0  AD010000
[7e18c43d1f75] jit-backend-dump}
[7e18c43d24eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf569af +0  9B010000
[7e18c43d2da3] jit-backend-dump}
[7e18c43d31db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf569c2 +0  A0010000
[7e18c43d3aa7] jit-backend-dump}
[7e18c43d3eb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf569f9 +0  82010000
[7e18c43d4771] jit-backend-dump}
[7e18c43d4bd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56a0a +0  8A010000
[7e18c43d5615] jit-backend-dump}
[7e18c43d5bc5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56a27 +0  A2010000
[7e18c43d6569] jit-backend-dump}
[7e18c43d6f39] jit-backend}
[7e18c43d8261] {jit-log-opt-loop
# Loop 1 (<code object bridge, file 'source.py', line 27> #15 LOAD_FAST) : loop with 92 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+92: i4 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+100: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+104: i6 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+111: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+115: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+119: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+123: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+127: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+131: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+135: p17 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+135: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, descr=TargetToken(140139616188064))
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+214: guard_value(i6, 2, descr=<Guard20>) [i6, p1, p0, p2, p3, i4, p5, i7, p10, p12, p14, p16]
+224: guard_nonnull_class(p12, ConstClass(W_IntObject), descr=<Guard21>) [p1, p0, p12, p2, p3, i4, p5, p10, p14, p16]
+242: guard_value(i4, 0, descr=<Guard22>) [i4, p1, p0, p2, p3, p5, p10, p12, p16]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
+252: guard_value(p3, ConstPtr(ptr21), descr=<Guard23>) [p1, p0, p3, p2, p5, p10, p12, p16]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+271: i22 = getfield_gc_pure(p12, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+275: i24 = int_lt(i22, 10000)
guard_true(i24, descr=<Guard24>) [p1, p0, p12, p2, p5, p10]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+288: i26 = int_eq(i22, -9223372036854775808)
guard_false(i26, descr=<Guard25>) [p1, p0, p12, i22, p2, p5, p10]
+307: i28 = int_mod(i22, 2)
+334: i30 = int_rshift(i28, 63)
+341: i31 = int_and(2, i30)
+350: i32 = int_add(i28, i31)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+353: i33 = int_is_true(i32)
guard_false(i33, descr=<Guard26>) [p1, p0, p2, p5, p10, p12, i32]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
+363: guard_nonnull_class(p10, ConstClass(W_IntObject), descr=<Guard27>) [p1, p0, p10, p2, p5, p12, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+381: i36 = getfield_gc_pure(p10, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+385: i38 = int_add_ovf(i36, 1)
guard_no_overflow(, descr=<Guard28>) [p1, p0, p10, i38, p2, p5, p12, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+395: i40 = int_add(i22, 1)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+406: guard_not_invalidated(, descr=<Guard29>) [p1, p0, p2, p5, i38, i40, None]
+406: i42 = getfield_raw(43858376, descr=<FieldS pypysig_long_struct.c_value 0>)
+414: i44 = int_lt(i42, 0)
guard_false(i44, descr=<Guard30>) [p1, p0, p2, p5, i38, i40, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+424: label(p0, p1, p2, p5, i38, i40, descr=TargetToken(140139616188144))
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+454: i45 = int_lt(i40, 10000)
guard_true(i45, descr=<Guard31>) [p1, p0, p2, p5, i38, i40]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+467: i46 = int_eq(i40, -9223372036854775808)
guard_false(i46, descr=<Guard32>) [p1, p0, i40, p2, p5, i38, None]
+486: i47 = int_mod(i40, 2)
+513: i48 = int_rshift(i47, 63)
+520: i49 = int_and(2, i48)
+528: i50 = int_add(i47, i49)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+531: i51 = int_is_true(i50)
guard_false(i51, descr=<Guard33>) [p1, p0, p2, p5, i50, i38, i40]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+541: i52 = int_add_ovf(i38, 1)
guard_no_overflow(, descr=<Guard34>) [p1, p0, i52, p2, p5, None, i38, i40]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+558: i53 = int_add(i40, 1)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+569: guard_not_invalidated(, descr=<Guard35>) [p1, p0, p2, p5, i53, i52, None, None, None]
+569: i54 = getfield_raw(43858376, descr=<FieldS pypysig_long_struct.c_value 0>)
+577: i55 = int_lt(i54, 0)
guard_false(i55, descr=<Guard36>) [p1, p0, p2, p5, i53, i52, None, None, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+587: jump(p0, p1, p2, p5, i52, i53, descr=TargetToken(140139616188144))
+592: --end of the loop--
[7e18c441d911] jit-log-opt-loop}
[7e18c44e87e5] {jit-backend
[7e18c452918b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56bf
[7e18c452f77d] jit-backend-dump}
[7e18c4530253] {jit-backend-addr
bridge out of Guard 16 has address 7f74cbf56bf5 to 7f74cbf56dee
[7e18c4530fcd] jit-backend-addr}
[7e18c453162d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56bf8 +0  A0FEFFFF
[7e18c4532319] jit-backend-dump}
[7e18c4532965] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56c38 +0  B2010000
[7e18c45334f7] jit-backend-dump}
[7e18c4533a7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56c47 +0  BC010000
[7e18c45344c3] jit-backend-dump}
[7e18c453490d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56c50 +0  CC010000
[7e18c45351f1] jit-backend-dump}
[7e18c4535a93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf565cf +0  22060000
[7e18c4536359] jit-backend-dump}
[7e18c4536ac9] jit-backend}
[7e18c453732b] {jit-log-opt-bridge
# bridge out of Guard 16 with 28 ops
[p0, p1, p2, i3, i4, i5, p6, p7, i8, i9]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #38 POP_BLOCK')
+37: p10 = getfield_gc_pure(p7, descr=<FieldP pypy.interpreter.pyopcode.FrameBlock.inst_previous 16>)
+49: setfield_gc(p2, ConstPtr(ptr11), descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+57: guard_class(p7, 38433192, descr=<Guard37>) [p0, p1, p7, p6, p10, i8, i9]
+71: i13 = getfield_gc_pure(p7, descr=<FieldS pypy.interpreter.pyopcode.FrameBlock.inst_valuestackdepth 24>)
+76: guard_value(i13, 2, descr=<Guard38>) [p0, p1, i13, p6, p10, i8, i9]
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #39 LOAD_FAST')
debug_merge_point(0, '<code object uninlined_call. file 'source.py'. line 21> #42 RETURN_VALUE')
+86: guard_isnull(p10, descr=<Guard39>) [p0, p1, p10, p6, i8, i9]
+95: p15 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+106: p16 = getfield_gc(p1, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
p18 = new_with_vtable(ConstClass(W_IntObject))
+169: setfield_gc(p1, 1, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_frame_finished_execution 149>)
setfield_gc(p1, p6, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
setfield_gc(p1, ConstPtr(ptr20), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+273: setfield_gc(p1, 0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+281: setfield_gc(p1, ConstPtr(ptr22), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+289: setfield_gc(p1, 2, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+300: setfield_gc(p1, 42, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
setarrayitem_gc(p15, 0, p18, descr=<ArrayP 8>)
p27 = new_with_vtable(ConstClass(W_IntObject))
+373: setfield_gc(p27, i9, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
setarrayitem_gc(p15, 1, p27, descr=<ArrayP 8>)
+437: setarrayitem_gc(p15, 2, ConstPtr(ptr30), descr=<ArrayP 8>)
+446: setarrayitem_gc(p15, 3, ConstPtr(ptr32), descr=<ArrayP 8>)
+455: setarrayitem_gc(p15, 4, ConstPtr(ptr32), descr=<ArrayP 8>)
+464: setfield_gc(p18, i8, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+468: finish(p18, descr=<DoneWithThisFrameDescrRef object at 0x188e580>)
+505: --end of the loop--
[7e18c4558fdf] jit-log-opt-bridge}
[7e18c4a4b601] {jit-backend
[7e18c4e146bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56e
[7e18c4e313b6] jit-backend-dump}
[7e18c4e31efc] {jit-backend-addr
bridge out of Guard 33 has address 7f74cbf56e87 to 7f74cbf572ab
[7e18c4e33270] jit-backend-addr}
[7e18c4e33e6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56e8a +0  70FEFFFF
[7e18c4e34de2] jit-backend-dump}
[7e18c4e35a12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56ec6 +0  E1030000
[7e18c4e3657c] jit-backend-dump}
[7e18c4e36a8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56edd +0  E3030000
[7e18c4e3749d] jit-backend-dump}
[7e18c4e37a88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56ef7 +0  FC030000
[7e18c4e38442] jit-backend-dump}
[7e18c4e389eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56f05 +0  0A040000
[7e18c4e394da] jit-backend-dump}
[7e18c4e39ace] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56f1a +0  2B040000
[7e18c4e3a45e] jit-backend-dump}
[7e18c4e3a8e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56f2c +0  35040000
[7e18c4e3b259] jit-backend-dump}
[7e18c4e3b700] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57131 +0  4B020000
[7e18c4e3c07b] jit-backend-dump}
[7e18c4e3c4ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57140 +0  58020000
[7e18c4e3cfc9] jit-backend-dump}
[7e18c4e3d572] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57154 +0  60020000
[7e18c4e3e046] jit-backend-dump}
[7e18c4e3e4ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57171 +0  60020000
[7e18c4e3ee4d] jit-backend-dump}
[7e18c4e3f2eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf571ac +0  41020000
[7e18c4e3fc4e] jit-backend-dump}
[7e18c4e400da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf571c7 +0  43020000
[7e18c4e40a55] jit-backend-dump}
[7e18c4e40ff8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf571db +0  48020000
[7e18c4e41b7a] jit-backend-dump}
[7e18c4e42111] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf571ec +0  51020000
[7e18c4e42beb] jit-backend-dump}
[7e18c4e434d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf571fe +0  73020000
[7e18c4e43e54] jit-backend-dump}
[7e18c4e442e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57229 +0  62020000
[7e18c4e44c58] jit-backend-dump}
[7e18c4e450d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5723c +0  67020000
[7e18c4e45e04] jit-backend-dump}
[7e18c4e4638c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5726a +0  52020000
[7e18c4e46eab] jit-backend-dump}
[7e18c4e47322] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57277 +0  5E020000
[7e18c4e47d75] jit-backend-dump}
[7e18c4e4824f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57294 +0  76020000
[7e18c4e48bb2] jit-backend-dump}
[7e18c4e493c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf569f9 +0  8A040000
[7e18c4e49d2b] jit-backend-dump}
[7e18c4e4a8fb] jit-backend}
[7e18c4e4b8e2] {jit-log-opt-bridge
# bridge out of Guard 33 with 137 ops
[p0, p1, p2, p3, i4, i5, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #37 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #40 LOAD_GLOBAL')
+37: p7 = getfield_gc(p1, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+48: guard_value(p7, ConstPtr(ptr8), descr=<Guard41>) [p0, p1, p7, p2, p3, i5, i6]
+67: p9 = getfield_gc(p7, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+71: guard_value(p9, ConstPtr(ptr10), descr=<Guard42>) [p0, p1, p9, p7, p2, p3, i5, i6]
+90: guard_not_invalidated(, descr=<Guard43>) [p0, p1, p7, p2, p3, i5, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #43 CALL_FUNCTION')
+90: p12 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+99: p13 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+103: i14 = force_token()
+103: p15 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+107: guard_isnull(p15, descr=<Guard44>) [p0, p1, p12, p15, p2, p3, p13, i14, i5, i6]
+116: i16 = getfield_gc(p12, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+120: i17 = int_is_zero(i16)
guard_true(i17, descr=<Guard45>) [p0, p1, p12, p2, p3, p13, i14, i5, i6]
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #0 LOAD_CONST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #3 STORE_FAST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #6 SETUP_LOOP')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #9 LOAD_GLOBAL')
+130: guard_not_invalidated(, descr=<Guard46>) [p0, p1, p12, p2, p3, p13, i14, i5, i6]
+130: p19 = getfield_gc(ConstPtr(ptr18), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+138: guard_value(p19, ConstPtr(ptr20), descr=<Guard47>) [p0, p1, p12, p19, p2, p3, p13, i14, i5, i6]
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #12 LOAD_CONST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #15 CALL_FUNCTION')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #18 GET_ITER')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #22 STORE_FAST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #25 LOAD_FAST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #28 LOAD_CONST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #31 INPLACE_ADD')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #32 STORE_FAST')
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #35 JUMP_ABSOLUTE')
+151: i22 = getfield_raw(43858376, descr=<FieldS pypysig_long_struct.c_value 0>)
+159: i24 = int_lt(i22, 0)
guard_false(i24, descr=<Guard48>) [p0, p1, p12, p2, p3, p13, i14, i5, i6]
debug_merge_point(1, '<code object uninlined_call. file 'source.py'. line 21> #19 FOR_ITER')
+169: i25 = force_token()
p27 = new_with_vtable(38431160)
p29 = new_array(5, descr=<ArrayP 8>)
p31 = new_with_vtable(ConstClass(W_IntObject))
p33 = new_with_vtable(ConstClass(W_IntObject))
p35 = new_with_vtable(38352528)
p37 = new_with_vtable(ConstClass(W_ListObject))
p39 = new_array(0, descr=<ArrayP 8>)
p41 = new_with_vtable(38431936)
+359: setfield_gc(p41, i14, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p12, p41, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+410: setfield_gc(p1, i25, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+421: setfield_gc(p27, 2, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_nlocals 112>)
+429: setfield_gc(p27, 19, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+437: setfield_gc(p27, 21, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_f_lineno 144>)
+447: setfield_gc(p27, p13, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+451: setfield_gc(p27, ConstPtr(ptr45), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+465: setfield_gc(p27, 3, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+476: setfield_gc(p31, 1, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+484: setarrayitem_gc(p29, 0, p31, descr=<ArrayP 8>)
+488: setarrayitem_gc(p29, 1, p33, descr=<ArrayP 8>)
+492: setfield_gc(p35, 1, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+500: setfield_gc(p37, ConstPtr(ptr51), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+514: setfield_gc(p37, ConstPtr(ptr52), descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+522: setfield_gc(p35, p37, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+526: setarrayitem_gc(p29, 2, p35, descr=<ArrayP 8>)
+530: setfield_gc(p27, p29, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+534: setfield_gc(p27, p39, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+538: setfield_gc(p27, ConstPtr(ptr54), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+552: setfield_gc(p27, ConstPtr(ptr8), descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+566: p55 = call_assembler(p27, p12, descr=<Loop0>)
guard_not_forced(, descr=<Guard40>) [p0, p1, p12, p27, p55, p41, p2, p3, i5, i6]
+686: guard_no_exception(, descr=<Guard49>) [p0, p1, p12, p27, p55, p41, p2, p3, i5, i6]
+701: p56 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+712: guard_isnull(p56, descr=<Guard50>) [p0, p1, p12, p55, p27, p56, p41, p2, p3, i5, i6]
+721: i57 = getfield_gc(p12, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+725: setfield_gc(p27, ConstPtr(ptr58), descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+740: i59 = int_is_true(i57)
guard_false(i59, descr=<Guard51>) [p0, p1, p55, p27, p12, p41, p2, p3, i5, i6]
+750: p60 = getfield_gc(p12, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+754: p61 = getfield_gc(p27, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_f_backref 48>)
+758: i62 = getfield_gc(p27, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_escaped 148>)
setfield_gc(p12, p61, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+800: guard_false(i62, descr=<Guard52>) [p0, p1, p55, p60, p27, p12, p41, p2, p3, i5, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #46 INPLACE_ADD')
+809: setfield_gc(p41, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+824: guard_class(p55, ConstClass(W_IntObject), descr=<Guard53>) [p0, p1, p55, p2, p3, i5, i6]
+836: i65 = getfield_gc_pure(p55, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+840: i66 = int_add_ovf(i5, i65)
guard_no_overflow(, descr=<Guard54>) [p0, p1, p55, i66, p2, p3, i5, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #47 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #50 JUMP_FORWARD')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+856: i68 = int_add_ovf(i6, 1)
guard_no_overflow(, descr=<Guard55>) [p0, p1, i68, p2, p3, i66, None, i6]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+873: guard_not_invalidated(, descr=<Guard56>) [p0, p1, p2, p3, i68, i66, None, None]
+873: i71 = getfield_raw(43858376, descr=<FieldS pypysig_long_struct.c_value 0>)
+881: i73 = int_lt(i71, 0)
guard_false(i73, descr=<Guard57>) [p0, p1, p2, p3, i68, i66, None, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+891: label(p1, p0, p2, p3, i66, i68, descr=TargetToken(140139616190144))
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #18 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #21 COMPARE_OP')
+921: i75 = int_lt(i68, 10000)
guard_true(i75, descr=<Guard58>) [p0, p1, p2, p3, i66, i68]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #27 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #30 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #33 BINARY_MODULO')
+934: i77 = int_eq(i68, -9223372036854775808)
guard_false(i77, descr=<Guard59>) [p0, p1, i68, p2, p3, i66, None]
+953: i79 = int_mod(i68, 2)
+970: i81 = int_rshift(i79, 63)
+977: i82 = int_and(2, i81)
+986: i83 = int_add(i79, i82)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #34 POP_JUMP_IF_FALSE')
+989: i84 = int_is_true(i83)
guard_false(i84, descr=<Guard60>) [p0, p1, p2, p3, i83, i66, i68]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #53 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #56 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #59 INPLACE_ADD')
+999: i86 = int_add_ovf(i66, 1)
guard_no_overflow(, descr=<Guard61>) [p0, p1, i86, p2, p3, None, i66, i68]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #60 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #63 LOAD_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #66 LOAD_CONST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #69 INPLACE_ADD')
+1012: i88 = int_add(i68, 1)
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #70 STORE_FAST')
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #73 JUMP_ABSOLUTE')
+1023: guard_not_invalidated(, descr=<Guard62>) [p0, p1, p2, p3, i86, i88, None, None, None]
+1023: i90 = getfield_raw(43858376, descr=<FieldS pypysig_long_struct.c_value 0>)
+1031: i92 = int_lt(i90, 0)
guard_false(i92, descr=<Guard63>) [p0, p1, p2, p3, i86, i88, None, None, None]
debug_merge_point(0, '<code object bridge. file 'source.py'. line 27> #15 LOAD_FAST')
+1041: jump(p1, p0, p2, p3, i86, i88, descr=TargetToken(140139616188144))
+1060: --end of the loop--
[7e18c4ec4dd6] jit-log-opt-bridge}
[7e18c4fe89a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56976 +0  E9A1010000
[7e18c4fec25e] jit-backend-dump}
[7e18c4fec9b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56a19 +0  E994010000
[7e18c4fed7af] jit-backend-dump}
[7e18c4fedda9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56ee1 +0  E9F8030000
[7e18c4fee916] jit-backend-dump}
[7e18c4feee9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf56f09 +0  E920040000
[7e18c4fef984] jit-backend-dump}
[7e18c4fefdf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf571f0 +0  E966020000
[7e18c4ff07dc] jit-backend-dump}
[7e18c4ff0d67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57286 +0  E968020000
[7e18c4ff1751] jit-backend-dump}
[7e18c53eb6fc] {jit-backend
[7e18c54c6a6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5759f
[7e18c54e5e5a] jit-backend-dump}
[7e18c54e6a2d] {jit-backend-addr
Loop 2 (<code object inlined_str_stuff, file 'source.py', line 40> #13 FOR_ITER) has address 7f74cbf575d5 to 7f74cbf579be (bootstrap 7f74cbf5759f)
[7e18c54e7e94] jit-backend-addr}
[7e18c54e89fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf575d1 +0  C0FEFFFF
[7e18c54e9883] jit-backend-dump}
[7e18c54ea5f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf576ae +0  0C030000
[7e18c54eb1d9] jit-backend-dump}
[7e18c54eb6d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf576c2 +0  1A030000
[7e18c54ec22f] jit-backend-dump}
[7e18c54ec817] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf576cf +0  2D030000
[7e18c54ed42c] jit-backend-dump}
[7e18c54ed8eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf576e3 +0  3A030000
[7e18c54ee2f9] jit-backend-dump}
[7e18c54ee7ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf576fd +0  43030000
[7e18c54ef1b4] jit-backend-dump}
[7e18c54f23d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57706 +0  5E030000
[7e18c54f310e] jit-backend-dump}
[7e18c54f36b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57725 +0  62030000
[7e18c54f41b2] jit-backend-dump}
[7e18c54f4737] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57738 +0  6F030000
[7e18c54f50b2] jit-backend-dump}
[7e18c54f5574] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57756 +0  6F030000
[7e18c54f5eef] jit-backend-dump}
[7e18c54f638a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5776d +0  76030000
[7e18c54f6d05] jit-backend-dump}
[7e18c54f73a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57782 +0  9E030000
[7e18c54f7e18] jit-backend-dump}
[7e18c54f83e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf577c0 +0  7E030000
[7e18c54f8eb3] jit-backend-dump}
[7e18c54f9465] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf577d8 +0  84030000
[7e18c54f9de0] jit-backend-dump}
[7e18c54fa3b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5781a +0  60030000
[7e18c54fad34] jit-backend-dump}
[7e18c54fb1db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57886 +0  18030000
[7e18c54fbb5c] jit-backend-dump}
[7e18c54fc0ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf578b1 +0  0B030000
[7e18c54fcbe5] jit-backend-dump}
[7e18c54fd227] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf578fe +0  FC020000
[7e18c54fdc74] jit-backend-dump}
[7e18c54fe136] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5793c +0  DD020000
[7e18c54feaab] jit-backend-dump}
[7e18c54fef52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf579a8 +0  95020000
[7e18c54ff8d0] jit-backend-dump}
[7e18c55004fa] jit-backend}
[7e18c5501bb3] {jit-log-opt-loop
# Loop 2 (<code object inlined_str_stuff, file 'source.py', line 40> #13 FOR_ITER) : loop with 100 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+92: i4 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+100: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+104: i6 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+111: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+115: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+119: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+123: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+127: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+131: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+135: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+146: p20 = getarrayitem_gc(p8, 5, descr=<ArrayP 8>)
+157: p22 = getarrayitem_gc(p8, 6, descr=<ArrayP 8>)
+168: p24 = getarrayitem_gc(p8, 7, descr=<ArrayP 8>)
+172: p25 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+172: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, p20, p22, p24, descr=TargetToken(140139656776704))
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+265: guard_value(i6, 5, descr=<Guard64>) [i6, p1, p0, p2, p3, i4, p5, i7, p10, p12, p14, p16, p18, p20, p22, p24]
+275: guard_class(p18, 38352528, descr=<Guard65>) [p1, p0, p18, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+295: p28 = getfield_gc(p18, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+299: guard_nonnull(p28, descr=<Guard66>) [p1, p0, p18, p28, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+308: i29 = getfield_gc(p18, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+312: p30 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+316: guard_class(p30, 38538416, descr=<Guard67>) [p1, p0, p18, i29, p30, p28, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+328: p32 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+332: i33 = getfield_gc_pure(p32, descr=<FieldS tuple3.item0 8>)
+336: i34 = getfield_gc_pure(p32, descr=<FieldS tuple3.item1 16>)
+340: i35 = getfield_gc_pure(p32, descr=<FieldS tuple3.item2 24>)
+344: i37 = int_lt(i29, 0)
guard_false(i37, descr=<Guard68>) [p1, p0, p18, i29, i35, i34, i33, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+354: i38 = int_ge(i29, i35)
guard_false(i38, descr=<Guard69>) [p1, p0, p18, i29, i34, i33, p2, p3, i4, p5, p10, p12, p14, p16, p20, p22, p24]
+363: i39 = int_mul(i29, i34)
+370: i40 = int_add(i33, i39)
+376: i42 = int_add(i29, 1)
+380: setfield_gc(p18, i42, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+384: guard_value(i4, 0, descr=<Guard70>) [i4, p1, p0, p2, p3, p5, p10, p12, p14, p16, p18, p22, p24, i40]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+394: guard_value(p3, ConstPtr(ptr44), descr=<Guard71>) [p1, p0, p3, p2, p5, p12, p14, p16, p18, p22, p24, i40]
+413: p45 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+424: guard_value(p45, ConstPtr(ptr46), descr=<Guard72>) [p1, p0, p45, p2, p5, p12, p14, p16, p18, p22, p24, i40]
+443: p47 = getfield_gc(p45, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+447: guard_value(p47, ConstPtr(ptr48), descr=<Guard73>) [p1, p0, p47, p45, p2, p5, p12, p14, p16, p18, p22, p24, i40]
+466: guard_not_invalidated(, descr=<Guard74>) [p1, p0, p45, p2, p5, p12, p14, p16, p18, p22, p24, i40]
+466: p50 = getfield_gc(ConstPtr(ptr49), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+474: guard_value(p50, ConstPtr(ptr51), descr=<Guard75>) [p1, p0, p50, p2, p5, p12, p14, p16, p18, p22, p24, i40]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+487: p53 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i40, descr=<Callr 8 i EF=3>)
+534: guard_no_exception(, descr=<Guard76>) [p1, p0, p53, p2, p5, p12, p14, p16, p18, p24, i40]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+549: p54 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+560: guard_class(p54, 38450144, descr=<Guard77>) [p1, p0, p54, p16, p2, p5, p12, p14, p18, p24, p53, i40]
+573: p56 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+577: i57 = getfield_gc(p56, descr=<FieldS list.length 8>)
+581: i59 = int_add(i57, 1)
+588: p60 = getfield_gc(p56, descr=<FieldP list.items 16>)
+588: i61 = arraylen_gc(p60, descr=<ArrayP 8>)
+588: call(ConstClass(_ll_list_resize_ge_trampoline__v539___simple_call__function__), p56, i59, descr=<Callv 0 ri EF=4>)
+624: guard_no_exception(, descr=<Guard78>) [p1, p0, i57, p53, p56, p2, p5, p12, p14, p16, p18, p24, None, i40]
+639: p64 = getfield_gc(p56, descr=<FieldP list.items 16>)
setarrayitem_gc(p64, i57, p53, descr=<ArrayP 8>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+729: i66 = getfield_raw(43858376, descr=<FieldS pypysig_long_struct.c_value 0>)
+737: i68 = int_lt(i66, 0)
guard_false(i68, descr=<Guard79>) [p1, p0, p2, p5, p12, p14, p16, p18, p24, None, i40]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+747: p69 = same_as(ConstPtr(ptr48))
+747: label(p0, p1, p2, p5, i40, p12, p14, p16, p18, p24, i42, i35, i34, i33, p56, descr=TargetToken(140139656776784))
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+777: i70 = int_ge(i42, i35)
guard_false(i70, descr=<Guard80>) [p1, p0, p18, i42, i34, i33, p2, p5, p12, p14, p16, p24, i40]
+790: i71 = int_mul(i42, i34)
+801: i72 = int_add(i33, i71)
+811: i73 = int_add(i42, 1)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #16 STORE_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #19 LOAD_GLOBAL')
+815: setfield_gc(p18, i73, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+826: guard_not_invalidated(, descr=<Guard81>) [p1, p0, p2, p5, p12, p14, p16, p18, p24, i72, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #22 LOAD_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #25 CALL_FUNCTION')
+826: p74 = call(ConstClass(ll_int_str__IntegerR_SignedConst_Signed), i72, descr=<Callr 8 i EF=3>)
+852: guard_no_exception(, descr=<Guard82>) [p1, p0, p74, p2, p5, p12, p14, p16, p18, p24, i72, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #28 LIST_APPEND')
+867: i75 = getfield_gc(p56, descr=<FieldS list.length 8>)
+878: i76 = int_add(i75, 1)
+885: p77 = getfield_gc(p56, descr=<FieldP list.items 16>)
+885: i78 = arraylen_gc(p77, descr=<ArrayP 8>)
+885: call(ConstClass(_ll_list_resize_ge_trampoline__v539___simple_call__function__), p56, i76, descr=<Callv 0 ri EF=4>)
+914: guard_no_exception(, descr=<Guard83>) [p1, p0, i75, p74, p56, p2, p5, p12, p14, p16, p18, p24, i72, None]
+929: p79 = getfield_gc(p56, descr=<FieldP list.items 16>)
setarrayitem_gc(p79, i75, p74, descr=<ArrayP 8>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #31 JUMP_ABSOLUTE')
+1019: i80 = getfield_raw(43858376, descr=<FieldS pypysig_long_struct.c_value 0>)
+1027: i81 = int_lt(i80, 0)
guard_false(i81, descr=<Guard84>) [p1, p0, p2, p5, p12, p14, p16, p18, p24, i72, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #13 FOR_ITER')
+1037: jump(p0, p1, p2, p5, i72, p12, p14, p16, p18, p24, i73, i35, i34, i33, p56, descr=TargetToken(140139656776784))
+1055: --end of the loop--
[7e18c5571e6d] jit-log-opt-loop}
[7e18c5a109b1] {jit-backend
[7e18c5a36207] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57c5f +0  488B0425C0399D024829E0483B0425E08C5001760D49BB6363F5CB747F000041FFD3554889E5534154415541564157488DA50000000049BBF8F182CE747F00004D8B3B4983C70149BBF8F182CE747F00004D893B4C8B7E404D0FB67C3F184983FF330F85000000004989FF4883C70148897E1848C74620000000004C897E28B80100000048890425901A550141BBC0BAF20041FFD3B802000000488D65D8415F415E415D415C5B5DC349BB0060F5CB747F000041FFD31D180355000000
[7e18c5a3a5c7] jit-backend-dump}
[7e18c5a3ab23] {jit-backend-addr
Loop 3 (StrLiteralSearch at 11/51 [17, 8, 3, 1, 1, 1, 1, 51, 0, 19, 51, 1]) has address 7f74cbf57c95 to 7f74cbf57d08 (bootstrap 7f74cbf57c5f)
[7e18c5a3bc4d] jit-backend-addr}
[7e18c5a3c4b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57c91 +0  70FFFFFF
[7e18c5a3d025] jit-backend-dump}
[7e18c5a3d8d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57cc3 +0  41000000
[7e18c5a3e36f] jit-backend-dump}
[7e18c5a3ed71] jit-backend}
[7e18c5a40383] {jit-log-opt-loop
# Loop 3 (StrLiteralSearch at 11/51 [17, 8, 3, 1, 1, 1, 1, 51, 0, 19, 51, 1]) : entry bridge with 10 ops
[i0, p1]
debug_merge_point(0, 'StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+84: p2 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+88: i3 = strgetitem(p2, i0)
+94: i5 = int_eq(i3, 51)
guard_true(i5, descr=<Guard85>) [i0, p1]
+104: i7 = int_add(i0, 1)
+111: setfield_gc(p1, i7, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+115: setfield_gc(p1, ConstPtr(ptr8), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+123: setfield_gc(p1, i0, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+127: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x188e5a0>)
+169: --end of the loop--
[7e18c5a57e6f] jit-log-opt-loop}
[7e18c5ea97f7] {jit-backend
[7e18c5ec15f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57d1c +0  488DA50000000049BB10F282CE747F00004D8B3B4983C70149BB10F282CE747F00004D893B4883C7014C8B7E084C39FF0F8D000000004C8B76404D0FB6743E184983FE330F84000000004883C7014C39FF0F8C00000000B80000000048890425901A550141BBC0BAF20041FFD3B802000000488D65D8415F415E415D415C5B5DC349BB0060F5CB747F000041FFD31D18035600000049BB0060F5CB747F000041FFD31D18035700000049BB0060F5CB747F000041FFD31D180358000000
[7e18c5ec4a37] jit-backend-dump}
[7e18c5ec4fa5] {jit-backend-addr
bridge out of Guard 85 has address 7f74cbf57d1c to 7f74cbf57d9d
[7e18c5ec5bf7] jit-backend-addr}
[7e18c5ec6215] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57d1f +0  70FFFFFF
[7e18c5ec6e55] jit-backend-dump}
[7e18c5ec75ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57d4e +0  4B000000
[7e18c5ec7fb7] jit-backend-dump}
[7e18c5ec841b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57d62 +0  4B000000
[7e18c5ec8d3d] jit-backend-dump}
[7e18c5ec9175] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57d6f +0  52000000
[7e18c5ec9b15] jit-backend-dump}
[7e18c5eca38b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57cc3 +0  55000000
[7e18c5ecada7] jit-backend-dump}
[7e18c5ecb425] jit-backend}
[7e18c5ecbce1] {jit-log-opt-bridge
# bridge out of Guard 85 with 13 ops
[i0, p1]
+37: i3 = int_add(i0, 1)
+41: i4 = getfield_gc_pure(p1, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+45: i5 = int_lt(i3, i4)
guard_true(i5, descr=<Guard86>) [i3, p1]
debug_merge_point(0, 'StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+54: p6 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+58: i7 = strgetitem(p6, i3)
+64: i9 = int_eq(i7, 51)
guard_false(i9, descr=<Guard87>) [i3, p1]
+74: i11 = int_add(i3, 1)
+78: i12 = int_lt(i11, i4)
guard_false(i12, descr=<Guard88>) [i11, p1]
+87: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x188e5a0>)
+129: --end of the loop--
[7e18c5ed742b] jit-log-opt-bridge}
[7e18c61e68c7] {jit-backend
[7e18c61fa9a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57dd9 +0  488DA50000000049BB28F282CE747F00004D8B3B4983C70149BB28F282CE747F00004D893B4C8B7E404D0FB67C3F184983FF330F84000000004883C7014C8B7E084C39FF0F8C00000000B80000000048890425901A550141BBC0BAF20041FFD3B802000000488D65D8415F415E415D415C5B5DC349BB0060F5CB747F000041FFD31D18035900000049BB0060F5CB747F000041FFD31D18035A000000
[7e18c61fd977] jit-backend-dump}
[7e18c61fde5d] {jit-backend-addr
bridge out of Guard 88 has address 7f74cbf57dd9 to 7f74cbf57e4d
[7e18c61fe88d] jit-backend-addr}
[7e18c61feedb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57ddc +0  70FFFFFF
[7e18c61ff995] jit-backend-dump}
[7e18c61fffad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57e0e +0  3B000000
[7e18c6200a7b] jit-backend-dump}
[7e18c6200fd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57e1f +0  3E000000
[7e18c620198b] jit-backend-dump}
[7e18c6201f69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57d6f +0  66000000
[7e18c62027f7] jit-backend-dump}
[7e18c6202e61] jit-backend}
[7e18c62035ab] {jit-log-opt-bridge
# bridge out of Guard 88 with 10 ops
[i0, p1]
debug_merge_point(0, 'StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+37: p2 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+41: i3 = strgetitem(p2, i0)
+47: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard89>) [i0, p1]
+57: i7 = int_add(i0, 1)
+61: i8 = getfield_gc_pure(p1, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+65: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard90>) [i7, p1]
+74: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x188e5a0>)
+116: --end of the loop--
[7e18c6213be9] jit-log-opt-bridge}
[7e18c6553871] {jit-backend
[7e18c655e4a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57e75 +0  488DA50000000049BB40F282CE747F0000498B334883C60149BB40F282CE747F0000498933B80000000048890425901A550141BBC0BAF20041FFD3B802000000488D65D8415F415E415D415C5B5DC3
[7e18c6560b67] jit-backend-dump}
[7e18c6560fd1] {jit-backend-addr
bridge out of Guard 86 has address 7f74cbf57e75 to 7f74cbf57ec4
[7e18c656191f] jit-backend-addr}
[7e18c6561f0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57e78 +0  70FFFFFF
[7e18c6562ad1] jit-backend-dump}
[7e18c65631d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57d4e +0  23010000
[7e18c6563bdb] jit-backend-dump}
[7e18c6564221] jit-backend}
[7e18c65648f7] {jit-log-opt-bridge
# bridge out of Guard 86 with 1 ops
[i0, p1]
+37: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x188e5a0>)
+79: --end of the loop--
[7e18c6567069] jit-log-opt-bridge}
[7e18c75192d5] {jit-backend
[7e18c76bb2ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf580a8 +0  
[7e18c76f3847] jit-backend-dump}
[7e18c76f45a3] {jit-backend-addr
Loop 4 (<code object inlined_str_stuff, file 'source.py', line 40> #44 FOR_ITER) has address 7f74cbf580de to 7f74cbf58d04 (bootstrap 7f74cbf580a8)
[7e18c76f5965] jit-backend-addr}
[7e18c76f64a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf580da +0  E0FDFFFF
[7e18c76f717f] jit-backend-dump}
[7e18c76f7d6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf581b0 +0  500B0000
[7e18c76f8873] jit-backend-dump}
[7e18c76f8de7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf581bc +0  660B0000
[7e18c76f986d] jit-backend-dump}
[7e18c76f9e19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf581c9 +0  790B0000
[7e18c76fa889] jit-backend-dump}
[7e18c76faca9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf581dd +0  860B0000
[7e18c76fb57f] jit-backend-dump}
[7e18c76fb9e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf581ee +0  980B0000
[7e18c76fc293] jit-backend-dump}
[7e18c76fc6df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58200 +0  A90B0000
[7e18c76fcf77] jit-backend-dump}
[7e18c76fd4f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58212 +0  B90B0000
[7e18c76fdefd] jit-backend-dump}
[7e18c76fe461] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58225 +0  C60B0000
[7e18c76fedcf] jit-backend-dump}
[7e18c76ff20d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5823c +0  CD0B0000
[7e18c76ffaaf] jit-backend-dump}
[7e18c76fff13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58253 +0  D40B0000
[7e18c77007b7] jit-backend-dump}
[7e18c7700e13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58273 +0  F10B0000
[7e18c77018db] jit-backend-dump}
[7e18c7701e37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf582a2 +0  E00B0000
[7e18c7702861] jit-backend-dump}
[7e18c7702dad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf582b0 +0  F00B0000
[7e18c77036e7] jit-backend-dump}
[7e18c7703b95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf582c7 +0  130C0000
[7e18c7704437] jit-backend-dump}
[7e18c7704963] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf582dc +0  1C0C0000
[7e18c7705205] jit-backend-dump}
[7e18c770570d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf582f5 +0  220C0000
[7e18c77061fb] jit-backend-dump}
[7e18c7706727] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf583ff +0  370B0000
[7e18c77070cd] jit-backend-dump}
[7e18c77075ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5840e +0  4C0B0000
[7e18c7708011] jit-backend-dump}
[7e18c7708473] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf584a4 +0  DA0A0000
[7e18c7708d15] jit-backend-dump}
[7e18c7709117] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf584b3 +0  EF0A0000
[7e18c7709b1f] jit-backend-dump}
[7e18c770a061] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf584cd +0  F90A0000
[7e18c770cdcf] jit-backend-dump}
[7e18c770d5c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf584f3 +0  F70A0000
[7e18c770e0a5] jit-backend-dump}
[7e18c770e5eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58500 +0  0D0B0000
[7e18c770efa1] jit-backend-dump}
[7e18c770f48b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58514 +0  1C0B0000
[7e18c770fdf1] jit-backend-dump}
[7e18c7710259] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58522 +0  330B0000
[7e18c7710d43] jit-backend-dump}
[7e18c77113b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5854f +0  4A0B0000
[7e18c7711dc3] jit-backend-dump}
[7e18c7712201] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58565 +0  560B0000
[7e18c7712aa3] jit-backend-dump}
[7e18c7712ea5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5857a +0  650B0000
[7e18c7713747] jit-backend-dump}
[7e18c7713b71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58588 +0  7C0B0000
[7e18c7714619] jit-backend-dump}
[7e18c7714b7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5859f +0  890B0000
[7e18c7715595] jit-backend-dump}
[7e18c77159fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf585b9 +0  940B0000
[7e18c771629d] jit-backend-dump}
[7e18c77166a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf585c3 +0  B00B0000
[7e18c7716f43] jit-backend-dump}
[7e18c771737d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf585cd +0  CD0B0000
[7e18c7717c1f] jit-backend-dump}
[7e18c7718191] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf585e0 +0  E00B0000
[7e18c7718c27] jit-backend-dump}
[7e18c77191b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf586e6 +0  FF0A0000
[7e18c7719bc5] jit-backend-dump}
[7e18c7719fe3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf586f5 +0  140B0000
[7e18c771a885] jit-backend-dump}
[7e18c771acc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf586fe +0  2F0B0000
[7e18c771b565] jit-backend-dump}
[7e18c771b9a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58712 +0  3E0B0000
[7e18c771c3ab] jit-backend-dump}
[7e18c771c903] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58720 +0  500B0000
[7e18c771d2f5] jit-backend-dump}
[7e18c771d855] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58769 +0  410B0000
[7e18c771e0f9] jit-backend-dump}
[7e18c771e627] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5879b +0  2A0B0000
[7e18c771eecb] jit-backend-dump}
[7e18c771f305] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf587b0 +0  300B0000
[7e18c771fba9] jit-backend-dump}
[7e18c77200e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf587c1 +0  3C0B0000
[7e18c7720b01] jit-backend-dump}
[7e18c7720fe9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf587d3 +0  470B0000
[7e18c7721a15] jit-backend-dump}
[7e18c7721e2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf587f9 +0  3D0B0000
[7e18c77226d3] jit-backend-dump}
[7e18c7722af9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58810 +0  420B0000
[7e18c772338b] jit-backend-dump}
[7e18c772399d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58830 +0  5B0B0000
[7e18c77243ab] jit-backend-dump}
[7e18c7724905] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5883a +0  6D0B0000
[7e18c772539b] jit-backend-dump}
[7e18c77258fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58851 +0  740B0000
[7e18c7726291] jit-backend-dump}
[7e18c77266f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58866 +0  7E0B0000
[7e18c7728fe1] jit-backend-dump}
[7e18c772962d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58880 +0  840B0000
[7e18c772a0bb] jit-backend-dump}
[7e18c772a63d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5898c +0  980A0000
[7e18c772b0a7] jit-backend-dump}
[7e18c772b63b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5899b +0  AF0A0000
[7e18c772c01b] jit-backend-dump}
[7e18c772c479] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58a31 +0  3F0A0000
[7e18c772cd63] jit-backend-dump}
[7e18c772d1ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58a40 +0  560A0000
[7e18c772da2d] jit-backend-dump}
[7e18c772de45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58a5a +0  620A0000
[7e18c772e7bf] jit-backend-dump}
[7e18c772ed23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58a80 +0  620A0000
[7e18c772f7ab] jit-backend-dump}
[7e18c772fd09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58a8d +0  790A0000
[7e18c773070d] jit-backend-dump}
[7e18c7730b63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58aa1 +0  890A0000
[7e18c77313fd] jit-backend-dump}
[7e18c7731827] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58aaf +0  A00A0000
[7e18c77320bb] jit-backend-dump}
[7e18c773255d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58adc +0  B70A0000
[7e18c7732fa1] jit-backend-dump}
[7e18c77334d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58af2 +0  C30A0000
[7e18c7733ef9] jit-backend-dump}
[7e18c773441b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58b07 +0  D20A0000
[7e18c7734cc1] jit-backend-dump}
[7e18c77351e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58b15 +0  E90A0000
[7e18c7735a87] jit-backend-dump}
[7e18c7735eed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58b2c +0  F60A0000
[7e18c7736781] jit-backend-dump}
[7e18c7736cdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58b46 +0  010B0000
[7e18c77376f1] jit-backend-dump}
[7e18c7737c1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58b50 +0  1D0B0000
[7e18c7738755] jit-backend-dump}
[7e18c7738b5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58b5a +0  3A0B0000
[7e18c7739403] jit-backend-dump}
[7e18c773982b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58b6d +0  4D0B0000
[7e18c773a0d1] jit-backend-dump}
[7e18c773a50d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58c76 +0  690A0000
[7e18c773af55] jit-backend-dump}
[7e18c773b4b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58c85 +0  7F0A0000
[7e18c773bedd] jit-backend-dump}
[7e18c773c305] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58c8e +0  9B0A0000
[7e18c773cbad] jit-backend-dump}
[7e18c773cfeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58ca2 +0  AB0A0000
[7e18c773d891] jit-backend-dump}
[7e18c773dce1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58cb0 +0  BD0A0000
[7e18c773e587] jit-backend-dump}
[7e18c773eb95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf58cf5 +0  B20A0000
[7e18c773f639] jit-backend-dump}
[7e18c774029d] jit-backend}
[7e18c7741961] {jit-log-opt-loop
# Loop 4 (<code object inlined_str_stuff, file 'source.py', line 40> #44 FOR_ITER) : loop with 351 ops
[p0, p1]
+84: p2 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+88: p3 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 120>)
+92: i4 = getfield_gc(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 150>)
+100: p5 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+104: i6 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 128>)
+111: i7 = getfield_gc(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+115: p8 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+119: p10 = getarrayitem_gc(p8, 0, descr=<ArrayP 8>)
+123: p12 = getarrayitem_gc(p8, 1, descr=<ArrayP 8>)
+127: p14 = getarrayitem_gc(p8, 2, descr=<ArrayP 8>)
+131: p16 = getarrayitem_gc(p8, 3, descr=<ArrayP 8>)
+135: p18 = getarrayitem_gc(p8, 4, descr=<ArrayP 8>)
+146: p20 = getarrayitem_gc(p8, 5, descr=<ArrayP 8>)
+157: p22 = getarrayitem_gc(p8, 6, descr=<ArrayP 8>)
+168: p24 = getarrayitem_gc(p8, 7, descr=<ArrayP 8>)
+172: p25 = getfield_gc(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+172: label(p0, p1, p2, p3, i4, p5, i6, i7, p10, p12, p14, p16, p18, p20, p22, p24, descr=TargetToken(140139656779344))
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+258: guard_value(i6, 4, descr=<Guard97>) [i6, p1, p0, p2, p3, i4, p5, i7, p10, p12, p14, p16, p18, p20, p22, p24]
+268: guard_class(p16, 38352528, descr=<Guard98>) [p1, p0, p16, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+280: p28 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+284: guard_nonnull(p28, descr=<Guard99>) [p1, p0, p16, p28, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+293: i29 = getfield_gc(p16, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+297: p30 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+301: guard_class(p30, 38450144, descr=<Guard100>) [p1, p0, p16, i29, p30, p28, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+313: p32 = getfield_gc(p28, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+317: i33 = getfield_gc(p32, descr=<FieldS list.length 8>)
+321: i34 = uint_ge(i29, i33)
guard_false(i34, descr=<Guard101>) [p1, p0, p16, i29, i33, p32, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+330: p35 = getfield_gc(p32, descr=<FieldP list.items 16>)
+334: p36 = getarrayitem_gc(p35, i29, descr=<ArrayP 8>)
+339: guard_nonnull(p36, descr=<Guard102>) [p1, p0, p16, i29, p36, p2, p3, i4, p5, p10, p12, p14, p18, p20, p22, p24]
+348: i38 = int_add(i29, 1)
+352: setfield_gc(p16, i38, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+356: guard_value(i4, 0, descr=<Guard103>) [i4, p1, p0, p2, p3, p5, p10, p12, p14, p16, p20, p22, p24, p36]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+366: guard_value(p3, ConstPtr(ptr40), descr=<Guard104>) [p1, p0, p3, p2, p5, p10, p12, p16, p20, p22, p24, p36]
+385: p41 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+389: guard_value(p41, ConstPtr(ptr42), descr=<Guard105>) [p1, p0, p41, p2, p5, p10, p12, p16, p20, p22, p24, p36]
+408: p43 = getfield_gc(p41, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+412: guard_value(p43, ConstPtr(ptr44), descr=<Guard106>) [p1, p0, p43, p41, p2, p5, p10, p12, p16, p20, p22, p24, p36]
+431: guard_not_invalidated(, descr=<Guard107>) [p1, p0, p41, p2, p5, p10, p12, p16, p20, p22, p24, p36]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+431: p46 = getfield_gc(ConstPtr(ptr45), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+444: guard_value(p46, ConstPtr(ptr47), descr=<Guard108>) [p1, p0, p46, p2, p5, p10, p12, p16, p20, p22, p24, p36]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+463: p49 = call(ConstClass(getexecutioncontext), descr=<Callr 8 EF=1>)
+493: p50 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+497: i51 = force_token()
+497: p52 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+501: guard_isnull(p52, descr=<Guard109>) [p1, p0, p49, p52, p2, p5, p10, p12, p16, p50, i51, p36]
+510: i53 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+514: i54 = int_is_zero(i53)
guard_true(i54, descr=<Guard110>) [p1, p0, p49, p2, p5, p10, p12, p16, p50, i51, p36]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #0 LOAD_GLOBAL')
+524: guard_not_invalidated(, descr=<Guard111>) [p1, p0, p49, p2, p5, p10, p12, p16, p50, i51, p36]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #9 CALL_FUNCTION')
+524: i56 = getfield_gc(ConstPtr(ptr55), descr=<FieldS list.length 8>)
+537: i58 = int_ge(0, i56)
guard_true(i58, descr=<Guard112>) [p1, p0, p49, i56, p2, p5, p10, p12, p16, p50, i51, p36]
+547: i59 = force_token()
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #0 LOAD_GLOBAL')
+547: p61 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+555: guard_value(p61, ConstPtr(ptr62), descr=<Guard113>) [p1, p0, p49, p61, p2, p5, p10, p12, p16, i59, p50, i51, p36]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #3 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #6 LOAD_CONST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #9 BINARY_SUBSCR')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #10 CALL_FUNCTION')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #13 BUILD_TUPLE')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #16 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #19 BINARY_ADD')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #20 STORE_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #23 LOAD_GLOBAL')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #26 LOOKUP_METHOD')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #29 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #32 CALL_METHOD')
+568: p64 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+581: guard_class(p64, ConstClass(ObjectDictStrategy), descr=<Guard114>) [p1, p0, p49, p64, p2, p5, p10, p12, p16, i59, p50, i51, p36]
+593: p66 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+606: i67 = force_token()
p69 = new_array(3, descr=<ArrayP 8>)
p71 = new_with_vtable(38431936)
+698: setfield_gc(p71, i59, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p71, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+747: setfield_gc(p0, i67, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+758: setarrayitem_gc(p69, 0, ConstPtr(ptr73), descr=<ArrayP 8>)
+766: setarrayitem_gc(p69, 1, ConstPtr(ptr75), descr=<ArrayP 8>)
+780: setarrayitem_gc(p69, 2, ConstPtr(ptr77), descr=<ArrayP 8>)
+794: i79 = call_may_force(ConstClass(hash_tuple), p69, descr=<Calli 8 r EF=6>)
guard_not_forced(, descr=<Guard91>) [p1, p0, p49, p66, i79, p71, p2, p5, p10, p12, p16, p36, p50, i51, p69]
+859: guard_no_exception(, descr=<Guard115>) [p1, p0, p49, p66, i79, p71, p2, p5, p10, p12, p16, p36, p50, i51, p69]
+874: i80 = force_token()
p82 = new_with_vtable(38341048)
+944: setfield_gc(p0, i80, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+955: setfield_gc(p82, p69, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+966: i84 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v978___simple_call__function_l), p66, p82, i79, descr=<Calli 8 rri EF=6>)
guard_not_forced(, descr=<Guard92>) [p1, p0, p49, p82, i84, p66, p71, p2, p5, p10, p12, p16, p36, p50, i51]
+1024: guard_no_exception(, descr=<Guard116>) [p1, p0, p49, p82, i84, p66, p71, p2, p5, p10, p12, p16, p36, p50, i51]
+1039: i86 = int_and(i84, -9223372036854775808)
+1055: i87 = int_is_true(i86)
guard_false(i87, descr=<Guard117>) [p1, p0, p49, p82, i84, p66, p71, p2, p5, p10, p12, p16, p36, p50, i51]
+1065: p88 = getfield_gc(p66, descr=<FieldP dicttable.entries 24>)
+1076: p89 = getinteriorfield_gc(p88, i84, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+1085: guard_nonnull_class(p89, 38586544, descr=<Guard118>) [p1, p0, p49, p82, p89, p71, p2, p5, p10, p12, p16, p36, p50, i51]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #35 STORE_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #38 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #41 LOAD_CONST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #44 COMPARE_OP')
+1103: i92 = instance_ptr_eq(ConstPtr(ptr91), p89)
guard_false(i92, descr=<Guard119>) [p1, p0, p49, p71, p2, p5, p10, p12, p16, p82, p89, p36, p50, i51]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #50 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #53 RETURN_VALUE')
+1116: p93 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+1127: guard_isnull(p93, descr=<Guard120>) [p1, p0, p49, p89, p93, p71, p2, p5, p10, p12, p16, p82, None, p36, p50, i51]
+1136: i95 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+1140: i96 = int_is_true(i95)
guard_false(i96, descr=<Guard121>) [p1, p0, p49, p89, p71, p2, p5, p10, p12, p16, p82, None, p36, p50, i51]
+1150: p97 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #12 LOOKUP_METHOD')
+1150: setfield_gc(p71, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #18 CALL_METHOD')
+1165: guard_not_invalidated(, descr=<Guard122>) [p1, p0, p49, p2, p5, p10, p12, p16, None, p89, p36, p50, i51]
+1165: i99 = strlen(p36)
+1176: i101 = int_gt(9223372036854775807, i99)
guard_true(i101, descr=<Guard123>) [p1, p0, p49, p89, p36, p2, p5, p10, p12, p16, None, None, None, p50, i51]
+1195: p102 = getfield_gc_pure(p89, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+1199: i103 = getfield_gc_pure(p89, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+1203: i105 = getarrayitem_gc_pure(p102, 0, descr=<ArrayS 8>)
+1207: i107 = int_eq(i105, 17)
guard_true(i107, descr=<Guard124>) [p1, p0, p49, p89, p2, p5, p10, p12, p16, i99, i103, p102, None, None, p36, p50, i51]
+1217: i109 = getarrayitem_gc_pure(p102, 2, descr=<ArrayS 8>)
+1221: i111 = int_and(i109, 1)
+1228: i112 = int_is_true(i111)
guard_true(i112, descr=<Guard125>) [p1, p0, p49, p89, i109, p2, p5, p10, p12, p16, i99, i103, p102, None, None, p36, p50, i51]
+1238: i114 = getarrayitem_gc_pure(p102, 5, descr=<ArrayS 8>)
+1242: i116 = int_gt(i114, 1)
guard_false(i116, descr=<Guard126>) [p1, p0, p49, p89, p2, p5, p10, p12, p16, i99, i103, p102, None, None, p36, p50, i51]
+1252: i118 = getarrayitem_gc_pure(p102, 1, descr=<ArrayS 8>)
+1256: i120 = int_add(i118, 1)
+1260: i121 = getarrayitem_gc_pure(p102, i120, descr=<ArrayS 8>)
+1265: i123 = int_eq(i121, 19)
guard_true(i123, descr=<Guard127>) [p1, p0, p49, p89, i120, p2, p5, p10, p12, p16, i99, i103, p102, None, None, p36, p50, i51]
+1275: i125 = int_add(i120, 1)
+1282: i126 = getarrayitem_gc_pure(p102, i125, descr=<ArrayS 8>)
+1287: i128 = int_add(i120, 2)
+1291: i130 = int_lt(0, i99)
guard_true(i130, descr=<Guard128>) [p1, p0, p49, p89, i126, i128, p2, p5, p10, p12, p16, i99, i103, p102, None, None, p36, p50, i51]
+1301: guard_value(i128, 11, descr=<Guard129>) [p1, p0, p49, p89, i126, i128, p102, p2, p5, p10, p12, p16, i99, i103, None, None, None, p36, p50, i51]
+1311: guard_value(i126, 51, descr=<Guard130>) [p1, p0, p49, p89, i126, p102, p2, p5, p10, p12, p16, i99, i103, None, None, None, p36, p50, i51]
+1321: guard_value(p102, ConstPtr(ptr133), descr=<Guard131>) [p1, p0, p49, p89, p102, p2, p5, p10, p12, p16, i99, i103, None, None, None, p36, p50, i51]
debug_merge_point(2, 'StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+1340: i134 = force_token()
p136 = new_with_vtable(38373528)
p137 = new_with_vtable(38431936)
+1424: setfield_gc(p137, i51, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p137, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+1472: setfield_gc(p0, i134, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+1483: setfield_gc(p136, i99, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+1487: setfield_gc(p136, p36, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+1491: setfield_gc(p136, ConstPtr(ptr133), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
+1505: setfield_gc(p136, i103, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+1509: i138 = call_assembler(0, p136, descr=<Loop3>)
guard_not_forced(, descr=<Guard93>) [p1, p0, p49, p136, p89, i138, p137, p2, p5, p10, p12, p16, p50, p36]
+1602: guard_no_exception(, descr=<Guard132>) [p1, p0, p49, p136, p89, i138, p137, p2, p5, p10, p12, p16, p50, p36]
+1617: guard_false(i138, descr=<Guard133>) [p1, p0, p49, p136, p89, p137, p2, p5, p10, p12, p16, p50, p36]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #21 RETURN_VALUE')
+1626: p139 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+1637: guard_isnull(p139, descr=<Guard134>) [p1, p0, p49, p139, p137, p2, p5, p10, p12, p16, p50, p36]
+1646: i140 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+1650: i141 = int_is_true(i140)
guard_false(i141, descr=<Guard135>) [p1, p0, p49, p137, p2, p5, p10, p12, p16, p50, p36]
+1660: p142 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p49, p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+1700: setfield_gc(p137, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+1715: guard_not_invalidated(, descr=<Guard136>) [p1, p0, p2, p5, p10, p12, p16, None, p36]
+1715: i145 = getfield_raw(43858376, descr=<FieldS pypysig_long_struct.c_value 0>)
+1723: i147 = int_lt(i145, 0)
guard_false(i147, descr=<Guard137>) [p1, p0, p2, p5, p10, p12, p16, None, p36]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1733: label(p0, p1, p2, p5, p10, p12, p36, p16, i140, p49, p50, descr=TargetToken(140139656777744))
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+1763: p148 = getfield_gc(p16, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+1774: guard_nonnull(p148, descr=<Guard138>) [p1, p0, p16, p148, p2, p5, p10, p12, p36]
+1783: i149 = getfield_gc(p16, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+1787: p150 = getfield_gc(p148, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+1791: guard_class(p150, 38450144, descr=<Guard139>) [p1, p0, p16, i149, p150, p148, p2, p5, p10, p12, p36]
+1804: p151 = getfield_gc(p148, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+1808: i152 = getfield_gc(p151, descr=<FieldS list.length 8>)
+1812: i153 = uint_ge(i149, i152)
guard_false(i153, descr=<Guard140>) [p1, p0, p16, i149, i152, p151, p2, p5, p10, p12, p36]
+1821: p154 = getfield_gc(p151, descr=<FieldP list.items 16>)
+1825: p155 = getarrayitem_gc(p154, i149, descr=<ArrayP 8>)
+1830: guard_nonnull(p155, descr=<Guard141>) [p1, p0, p16, i149, p155, p2, p5, p10, p12, p36]
+1839: i156 = int_add(i149, 1)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #47 STORE_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #50 LOAD_GLOBAL')
+1843: p157 = getfield_gc(p0, descr=<FieldP pypy.interpreter.eval.Frame.inst_w_globals 8>)
+1854: setfield_gc(p16, i156, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+1858: guard_value(p157, ConstPtr(ptr42), descr=<Guard142>) [p1, p0, p157, p2, p5, p10, p12, p16, p155, None]
+1877: p158 = getfield_gc(p157, descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1881: guard_value(p158, ConstPtr(ptr44), descr=<Guard143>) [p1, p0, p158, p157, p2, p5, p10, p12, p16, p155, None]
+1900: guard_not_invalidated(, descr=<Guard144>) [p1, p0, p157, p2, p5, p10, p12, p16, p155, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #53 LOOKUP_METHOD')
+1900: p159 = getfield_gc(ConstPtr(ptr45), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1913: guard_value(p159, ConstPtr(ptr47), descr=<Guard145>) [p1, p0, p159, p2, p5, p10, p12, p16, p155, None]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #56 LOAD_CONST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #59 LOAD_FAST')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #62 CALL_METHOD')
+1932: i160 = force_token()
+1932: i161 = int_is_zero(i140)
guard_true(i161, descr=<Guard146>) [p1, p0, p49, p2, p5, p10, p12, p16, i160, p50, p155, None]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #0 LOAD_GLOBAL')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #3 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #6 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #9 CALL_FUNCTION')
+1942: i162 = getfield_gc(ConstPtr(ptr55), descr=<FieldS list.length 8>)
+1955: i163 = int_ge(0, i162)
guard_true(i163, descr=<Guard147>) [p1, p0, p49, i162, p2, p5, p10, p12, p16, i160, p50, p155, None]
+1965: i164 = force_token()
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #0 LOAD_GLOBAL')
+1965: p165 = getfield_gc(ConstPtr(ptr60), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1973: guard_value(p165, ConstPtr(ptr62), descr=<Guard148>) [p1, p0, p49, p165, p2, p5, p10, p12, p16, i164, i160, p50, p155, None]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #3 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #6 LOAD_CONST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #9 BINARY_SUBSCR')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #10 CALL_FUNCTION')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #13 BUILD_TUPLE')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #16 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #19 BINARY_ADD')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #20 STORE_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #23 LOAD_GLOBAL')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #26 LOOKUP_METHOD')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #29 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #32 CALL_METHOD')
+1986: p166 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_strategy 16>)
+1999: guard_class(p166, ConstClass(ObjectDictStrategy), descr=<Guard149>) [p1, p0, p49, p166, p2, p5, p10, p12, p16, i164, i160, p50, p155, None]
+2012: p167 = getfield_gc(ConstPtr(ptr63), descr=<FieldP pypy.objspace.std.dictmultiobject.W_DictMultiObject.inst_dstorage 8>)
+2025: i168 = force_token()
p169 = new_array(3, descr=<ArrayP 8>)
p170 = new_with_vtable(38431936)
+2117: setfield_gc(p170, i164, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p170, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+2168: setfield_gc(p0, i168, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2172: setarrayitem_gc(p169, 0, ConstPtr(ptr73), descr=<ArrayP 8>)
+2180: setarrayitem_gc(p169, 1, ConstPtr(ptr75), descr=<ArrayP 8>)
+2194: setarrayitem_gc(p169, 2, ConstPtr(ptr174), descr=<ArrayP 8>)
+2208: i175 = call_may_force(ConstClass(hash_tuple), p169, descr=<Calli 8 r EF=6>)
guard_not_forced(, descr=<Guard94>) [p1, p0, p49, p167, i175, p170, p2, p5, p10, p12, p16, i160, p169, p155, p50]
+2280: guard_no_exception(, descr=<Guard150>) [p1, p0, p49, p167, i175, p170, p2, p5, p10, p12, p16, i160, p169, p155, p50]
+2295: i176 = force_token()
p177 = new_with_vtable(38341048)
+2365: setfield_gc(p0, i176, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2376: setfield_gc(p177, p169, descr=<FieldP pypy.objspace.std.tupleobject.W_TupleObject.inst_wrappeditems 8>)
+2387: i178 = call_may_force(ConstClass(ll_dict_lookup_trampoline__v978___simple_call__function_l), p167, p177, i175, descr=<Calli 8 rri EF=6>)
guard_not_forced(, descr=<Guard95>) [p1, p0, p49, p177, i178, p167, p170, p2, p5, p10, p12, p16, i160, p155, p50]
+2445: guard_no_exception(, descr=<Guard151>) [p1, p0, p49, p177, i178, p167, p170, p2, p5, p10, p12, p16, i160, p155, p50]
+2460: i179 = int_and(i178, -9223372036854775808)
+2476: i180 = int_is_true(i179)
guard_false(i180, descr=<Guard152>) [p1, p0, p49, p177, i178, p167, p170, p2, p5, p10, p12, p16, i160, p155, p50]
+2486: p181 = getfield_gc(p167, descr=<FieldP dicttable.entries 24>)
+2497: p182 = getinteriorfield_gc(p181, i178, descr=<InteriorFieldDescr <FieldP dictentry.value 8>>)
+2506: guard_nonnull_class(p182, 38586544, descr=<Guard153>) [p1, p0, p49, p177, p182, p170, p2, p5, p10, p12, p16, i160, p155, p50]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #35 STORE_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #38 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #41 LOAD_CONST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #44 COMPARE_OP')
+2524: i183 = instance_ptr_eq(ConstPtr(ptr91), p182)
guard_false(i183, descr=<Guard154>) [p1, p0, p49, p170, p2, p5, p10, p12, p16, p177, p182, i160, p155, p50]
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #47 POP_JUMP_IF_FALSE')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #50 LOAD_FAST')
debug_merge_point(2, '<code object _compile. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 229> #53 RETURN_VALUE')
+2537: p184 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+2548: guard_isnull(p184, descr=<Guard155>) [p1, p0, p49, p182, p184, p170, p2, p5, p10, p12, p16, p177, None, i160, p155, p50]
+2557: i185 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+2561: i186 = int_is_true(i185)
guard_false(i186, descr=<Guard156>) [p1, p0, p49, p182, p170, p2, p5, p10, p12, p16, p177, None, i160, p155, p50]
+2571: p187 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #12 LOOKUP_METHOD')
+2571: setfield_gc(p170, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #15 LOAD_FAST')
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #18 CALL_METHOD')
+2586: guard_not_invalidated(, descr=<Guard157>) [p1, p0, p49, p2, p5, p10, p12, p16, None, p182, i160, p155, p50]
+2586: i189 = strlen(p155)
+2597: i191 = int_gt(9223372036854775807, i189)
guard_true(i191, descr=<Guard158>) [p1, p0, p49, p182, p155, p2, p5, p10, p12, p16, None, None, i160, None, p50]
+2616: p192 = getfield_gc_pure(p182, descr=<FieldP pypy.module._sre.interp_sre.W_SRE_Pattern.inst_code 16>)
+2620: i193 = getfield_gc_pure(p182, descr=<FieldS pypy.module._sre.interp_sre.W_SRE_Pattern.inst_flags 24>)
+2624: i194 = getarrayitem_gc_pure(p192, 0, descr=<ArrayS 8>)
+2628: i195 = int_eq(i194, 17)
guard_true(i195, descr=<Guard159>) [p1, p0, p49, p182, p2, p5, p10, p12, p16, i193, i189, p192, None, None, i160, p155, p50]
+2638: i196 = getarrayitem_gc_pure(p192, 2, descr=<ArrayS 8>)
+2642: i197 = int_and(i196, 1)
+2649: i198 = int_is_true(i197)
guard_true(i198, descr=<Guard160>) [p1, p0, p49, p182, i196, p2, p5, p10, p12, p16, i193, i189, p192, None, None, i160, p155, p50]
+2659: i199 = getarrayitem_gc_pure(p192, 5, descr=<ArrayS 8>)
+2663: i200 = int_gt(i199, 1)
guard_false(i200, descr=<Guard161>) [p1, p0, p49, p182, p2, p5, p10, p12, p16, i193, i189, p192, None, None, i160, p155, p50]
+2673: i201 = getarrayitem_gc_pure(p192, 1, descr=<ArrayS 8>)
+2677: i202 = int_add(i201, 1)
+2681: i203 = getarrayitem_gc_pure(p192, i202, descr=<ArrayS 8>)
+2686: i204 = int_eq(i203, 19)
guard_true(i204, descr=<Guard162>) [p1, p0, p49, p182, i202, p2, p5, p10, p12, p16, i193, i189, p192, None, None, i160, p155, p50]
+2696: i205 = int_add(i202, 1)
+2703: i206 = getarrayitem_gc_pure(p192, i205, descr=<ArrayS 8>)
+2708: i207 = int_add(i202, 2)
+2712: i209 = int_lt(0, i189)
guard_true(i209, descr=<Guard163>) [p1, p0, p49, p182, i206, i207, p2, p5, p10, p12, p16, i193, i189, p192, None, None, i160, p155, p50]
+2722: guard_value(i207, 11, descr=<Guard164>) [p1, p0, p49, p182, i206, i207, p192, p2, p5, p10, p12, p16, i193, i189, None, None, None, i160, p155, p50]
+2732: guard_value(i206, 51, descr=<Guard165>) [p1, p0, p49, p182, i206, p192, p2, p5, p10, p12, p16, i193, i189, None, None, None, i160, p155, p50]
+2742: guard_value(p192, ConstPtr(ptr133), descr=<Guard166>) [p1, p0, p49, p182, p192, p2, p5, p10, p12, p16, i193, i189, None, None, None, i160, p155, p50]
debug_merge_point(2, 'StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+2761: i210 = force_token()
p211 = new_with_vtable(38373528)
p212 = new_with_vtable(38431936)
+2845: setfield_gc(p212, i160, descr=<FieldS JitVirtualRef.virtual_token 8>)
setfield_gc(p49, p212, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+2896: setfield_gc(p0, i210, descr=<FieldS pypy.interpreter.pyframe.PyFrame.vable_token 24>)
+2907: setfield_gc(p211, i189, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+2911: setfield_gc(p211, p155, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+2915: setfield_gc(p211, ConstPtr(ptr133), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_pattern 56>)
+2929: setfield_gc(p211, i193, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_flags 16>)
+2933: i213 = call_assembler(0, p211, descr=<Loop3>)
guard_not_forced(, descr=<Guard96>) [p1, p0, p49, p211, p182, i213, p212, p2, p5, p10, p12, p16, p50, p155]
+3026: guard_no_exception(, descr=<Guard167>) [p1, p0, p49, p211, p182, i213, p212, p2, p5, p10, p12, p16, p50, p155]
+3041: guard_false(i213, descr=<Guard168>) [p1, p0, p49, p211, p182, p212, p2, p5, p10, p12, p16, p50, p155]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #21 RETURN_VALUE')
+3050: p214 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+3061: guard_isnull(p214, descr=<Guard169>) [p1, p0, p49, p214, p212, p2, p5, p10, p12, p16, p50, p155]
+3070: i215 = getfield_gc(p49, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+3074: i216 = int_is_true(i215)
guard_false(i216, descr=<Guard170>) [p1, p0, p49, p212, p2, p5, p10, p12, p16, p50, p155]
+3084: p217 = getfield_gc(p49, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p49, p50, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+3120: setfield_gc(p212, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+3135: guard_not_invalidated(, descr=<Guard171>) [p1, p0, p2, p5, p10, p12, p16, None, p155]
+3135: i219 = getfield_raw(43858376, descr=<FieldS pypysig_long_struct.c_value 0>)
+3143: i220 = int_lt(i219, 0)
guard_false(i220, descr=<Guard172>) [p1, p0, p2, p5, p10, p12, p16, None, p155]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
+3153: jump(p0, p1, p2, p5, p10, p12, p155, p16, i215, p49, p50, descr=TargetToken(140139656777744))
+3164: --end of the loop--
[7e18c787d7a5] jit-log-opt-loop}
[7e18c79879ff] {jit-backend
[7e18c799e36b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf597c6 +0  488DA50000000049BBA0F282CE747F00004D8B3B4983C70149BBA0F282CE747F00004D893B4C8B7E404D0FB67C3F184983FF330F84000000004883C7014C8B7E084C39FF0F8C00000000B80000000048890425901A550141BBC0BAF20041FFD3B802000000488D65D8415F415E415D415C5B5DC349BB0060F5CB747F000041FFD31D1803AD00000049BB0060F5CB747F000041FFD31D1803AE000000
[7e18c79a15f1] jit-backend-dump}
[7e18c79a1aed] {jit-backend-addr
bridge out of Guard 90 has address 7f74cbf597c6 to 7f74cbf5983a
[7e18c79a25f5] jit-backend-addr}
[7e18c79a2c21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf597c9 +0  70FFFFFF
[7e18c79a9017] jit-backend-dump}
[7e18c79a9805] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf597fb +0  3B000000
[7e18c79aa391] jit-backend-dump}
[7e18c79aa8c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5980c +0  3E000000
[7e18c79ab29d] jit-backend-dump}
[7e18c79abe0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57e1f +0  A3190000
[7e18c79ac6e5] jit-backend-dump}
[7e18c79ace71] jit-backend}
[7e18c79ad765] {jit-log-opt-bridge
# bridge out of Guard 90 with 10 ops
[i0, p1]
debug_merge_point(0, 'StrLiteralSearch at 11/51 [17. 8. 3. 1. 1. 1. 1. 51. 0. 19. 51. 1]')
+37: p2 = getfield_gc(p1, descr=<FieldP pypy.rlib.rsre.rsre_core.StrMatchContext.inst__string 64>)
+41: i3 = strgetitem(p2, i0)
+47: i5 = int_eq(i3, 51)
guard_false(i5, descr=<Guard173>) [i0, p1]
+57: i7 = int_add(i0, 1)
+61: i8 = getfield_gc_pure(p1, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_end 8>)
+65: i9 = int_lt(i7, i8)
guard_false(i9, descr=<Guard174>) [i7, p1]
+74: finish(0, descr=<DoneWithThisFrameDescrInt object at 0x188e5a0>)
+116: --end of the loop--
[7e18c79b75e5] jit-log-opt-bridge}
[7e18c7efb137] {jit-backend
[7e18c7f2eb61] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5987a
[7e18c7f34a0f] jit-backend-dump}
[7e18c7f350ad] {jit-backend-addr
bridge out of Guard 133 has address 7f74cbf5987a to 7f74cbf599bf
[7e18c7f35bfd] jit-backend-addr}
[7e18c7f36373] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf5987d +0  E0FDFFFF
[7e18c7f36f51] jit-backend-dump}
[7e18c7f375bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf598af +0  0C010000
[7e18c7f3816b] jit-backend-dump}
[7e18c7f386a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf598bd +0  22010000
[7e18c7f39187] jit-backend-dump}
[7e18c7f39711] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf598ff +0  20010000
[7e18c7f3a0e7] jit-backend-dump}
[7e18c7f3a6a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf586fe +0  78110000
[7e18c7f3af31] jit-backend-dump}
[7e18c7f3b7bf] jit-backend}
[7e18c7f3c2fd] {jit-log-opt-bridge
# bridge out of Guard 133 with 19 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
debug_merge_point(1, '<code object search. file '/home/fijal/venv/pypy3/lib-python/2.7/re.py'. line 139> #21 RETURN_VALUE')
+37: p13 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_w_tracefunc 80>)
+48: guard_isnull(p13, descr=<Guard175>) [p0, p1, p2, p13, p5, p6, p7, p8, p9, p10, p3, p4, p11, p12]
+57: i14 = getfield_gc(p2, descr=<FieldU pypy.interpreter.executioncontext.ExecutionContext.inst_profilefunc 40>)
+61: i15 = int_is_true(i14)
guard_false(i15, descr=<Guard176>) [p0, p1, p2, p5, p6, p7, p8, p9, p10, p3, p4, p11, p12]
+71: p16 = getfield_gc(p2, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #65 POP_TOP')
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #66 JUMP_ABSOLUTE')
setfield_gc(p2, p11, descr=<FieldP pypy.interpreter.executioncontext.ExecutionContext.inst_topframeref 64>)
+104: setfield_gc(p5, -3, descr=<FieldS JitVirtualRef.virtual_token 8>)
+119: guard_not_invalidated(, descr=<Guard177>) [p0, p1, p6, p7, p8, p9, p10, None, None, None, p12]
+119: i20 = getfield_raw(43858376, descr=<FieldS pypysig_long_struct.c_value 0>)
+127: i22 = int_lt(i20, 0)
guard_false(i22, descr=<Guard178>) [p0, p1, p6, p7, p8, p9, p10, None, None, None, p12]
debug_merge_point(0, '<code object inlined_str_stuff. file 'source.py'. line 40> #44 FOR_ITER')
p24 = new_with_vtable(ConstClass(W_StringObject))
+200: setfield_gc(p24, p12, descr=<FieldP pypy.objspace.std.stringobject.W_StringObject.inst__value 8>)
+211: jump(p1, p0, p6, ConstPtr(ptr25), 0, p7, 4, 44, p8, p9, p24, p10, ConstPtr(ptr29), ConstPtr(ptr30), ConstPtr(ptr30), ConstPtr(ptr30), descr=TargetToken(140139656779344))
+325: --end of the loop--
[7e18c7f5ca77] jit-log-opt-bridge}
[7e18c7f94eb5] {jit-backend
[7e18c7fa297f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf59a40 +0  488DA50000000049BBD0F282CE747F00004D8B3B4983C70149BBD0F282CE747F00004D893B4989FF4883C70148897E1848C74620000000004C897E28B80100000048890425901A550141BBC0BAF20041FFD3B802000000488D65D8415F415E415D415C5B5DC3
[7e18c7fa535b] jit-backend-dump}
[7e18c7fa5807] {jit-backend-addr
bridge out of Guard 87 has address 7f74cbf59a40 to 7f74cbf59aa6
[7e18c7fa6217] jit-backend-addr}
[7e18c7fa67f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf59a43 +0  70FFFFFF
[7e18c7fa7353] jit-backend-dump}
[7e18c7fa7a73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57d62 +0  DA1C0000
[7e18c7fa8387] jit-backend-dump}
[7e18c7fa8a1b] jit-backend}
[7e18c7fa90bb] {jit-log-opt-bridge
# bridge out of Guard 87 with 5 ops
[i0, p1]
+37: i3 = int_add(i0, 1)
+44: setfield_gc(p1, i3, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+48: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+56: setfield_gc(p1, i0, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+60: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x188e5a0>)
+102: --end of the loop--
[7e18c7faefab] jit-log-opt-bridge}
[7e18c80e256d] {jit-backend
[7e18c80ef8fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf59aa6 +0  488DA50000000049BBE8F282CE747F00004D8B3B4983C70149BBE8F282CE747F00004D893B4989FF4883C70148897E1848C74620000000004C897E28B80100000048890425901A550141BBC0BAF20041FFD3B802000000488D65D8415F415E415D415C5B5DC3
[7e18c80f2183] jit-backend-dump}
[7e18c80f265d] {jit-backend-addr
bridge out of Guard 89 has address 7f74cbf59aa6 to 7f74cbf59b0c
[7e18c80f3045] jit-backend-addr}
[7e18c80f3621] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf59aa9 +0  70FFFFFF
[7e18c80f405b] jit-backend-dump}
[7e18c80f46fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f74cbf57e0e +0  941C0000
[7e18c80f50fd] jit-backend-dump}
[7e18c80f57ab] jit-backend}
[7e18c80f5eab] {jit-log-opt-bridge
# bridge out of Guard 89 with 5 ops
[i0, p1]
+37: i3 = int_add(i0, 1)
+44: setfield_gc(p1, i3, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_end 24>)
+48: setfield_gc(p1, ConstPtr(ptr4), descr=<FieldP pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_marks 32>)
+56: setfield_gc(p1, i0, descr=<FieldS pypy.rlib.rsre.rsre_core.AbstractMatchContext.inst_match_start 40>)
+60: finish(1, descr=<DoneWithThisFrameDescrInt object at 0x188e5a0>)
+102: --end of the loop--
[7e18c80fb77d] jit-log-opt-bridge}
[7e18c814b937] {jit-backend-counts
entry 0:4647
TargetToken(140139616183984):4647
TargetToken(140139616184064):9292
entry 1:201
TargetToken(140139616188064):201
TargetToken(140139616188144):4468
bridge 16:4446
bridge 33:4268
TargetToken(140139616190144):4268
entry 2:1
TargetToken(140139656776704):1
TargetToken(140139656776784):1938
entry 3:3173
bridge 85:2882
bridge 88:2074
bridge 86:158
entry 4:377
TargetToken(140139656779344):527
TargetToken(140139656777744):1411
bridge 90:1420
bridge 133:150
bridge 87:50
bridge 89:7
[7e18c8157381] jit-backend-counts}
